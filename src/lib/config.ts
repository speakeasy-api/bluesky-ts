/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { HTTPClient } from "./http.js";
import { Logger } from "./logger.js";
import { RetryConfig } from "./retries.js";
import { Params, pathToFunc } from "./url.js";

/**
 * Bluesky API
 */
export const ServerPrivileged = "privileged";
/**
 * Bluesky Public API
 */
export const ServerPublic = "public";
/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = {
  [ServerPrivileged]: "https://api.bsky.app",
  [ServerPublic]: "https://public.api.bsky.app",
} as const;

export type SDKOptions = {
  bearer?: string | (() => Promise<string>);

  httpClient?: HTTPClient;
  /**
   * Allows overriding the default server used by the SDK
   */
  server?: keyof typeof ServerList;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
  /**
   * Allows overriding the default retry config used by the SDK
   */
  retryConfig?: RetryConfig;
  timeoutMs?: number;
  debugLogger?: Logger;
};

export function serverURLFromOptions(options: SDKOptions): URL | null {
  let serverURL = options.serverURL;

  const params: Params = {};

  if (!serverURL) {
    const server = options.server ?? ServerPrivileged;
    serverURL = ServerList[server] || "";
  }

  const u = pathToFunc(serverURL)(params);
  return new URL(u);
}

export const SDK_METADATA = {
  language: "typescript",
  openapiDocVersion: "0.0.0",
  sdkVersion: "0.6.4",
  genVersion: "2.472.1",
  userAgent: "speakeasy-sdk/typescript 0.6.4 2.472.1 0.0.0 bluesky",
} as const;
