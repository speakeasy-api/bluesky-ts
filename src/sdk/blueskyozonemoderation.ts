/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ozoneModerationEmitEvent } from "../funcs/ozoneModerationEmitEvent.js";
import { ozoneModerationGetEvent } from "../funcs/ozoneModerationGetEvent.js";
import { ozoneModerationGetRecord } from "../funcs/ozoneModerationGetRecord.js";
import { ozoneModerationGetRecords } from "../funcs/ozoneModerationGetRecords.js";
import { ozoneModerationGetRepo } from "../funcs/ozoneModerationGetRepo.js";
import { ozoneModerationGetRepos } from "../funcs/ozoneModerationGetRepos.js";
import { ozoneModerationQueryEvents } from "../funcs/ozoneModerationQueryEvents.js";
import { ozoneModerationQueryStatuses } from "../funcs/ozoneModerationQueryStatuses.js";
import { ozoneModerationSearchRepos } from "../funcs/ozoneModerationSearchRepos.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class BlueskyOzoneModeration extends ClientSDK {
  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Take a moderation action on an actor.
   */
  async emitEvent(
    request: operations.ToolsOzoneModerationEmitEventRequestBody,
    options?: RequestOptions,
  ): Promise<components.ToolsOzoneModerationDefsModEventView> {
    return unwrapAsync(ozoneModerationEmitEvent(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get details about a moderation event.
   */
  async getEvent(
    request: operations.ToolsOzoneModerationGetEventRequest,
    options?: RequestOptions,
  ): Promise<components.ToolsOzoneModerationDefsModEventViewDetail> {
    return unwrapAsync(ozoneModerationGetEvent(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get details about a record.
   */
  async getRecord(
    request: operations.ToolsOzoneModerationGetRecordRequest,
    options?: RequestOptions,
  ): Promise<components.ToolsOzoneModerationDefsRecordViewDetail> {
    return unwrapAsync(ozoneModerationGetRecord(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get details about some records.
   */
  async getRecords(
    request: operations.ToolsOzoneModerationGetRecordsRequest,
    options?: RequestOptions,
  ): Promise<operations.ToolsOzoneModerationGetRecordsResponseBody> {
    return unwrapAsync(ozoneModerationGetRecords(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get details about a repository.
   */
  async getRepo(
    request: operations.ToolsOzoneModerationGetRepoRequest,
    options?: RequestOptions,
  ): Promise<components.ToolsOzoneModerationDefsRepoViewDetail> {
    return unwrapAsync(ozoneModerationGetRepo(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get details about some repositories.
   */
  async getRepos(
    request: operations.ToolsOzoneModerationGetReposRequest,
    options?: RequestOptions,
  ): Promise<operations.ToolsOzoneModerationGetReposResponseBody> {
    return unwrapAsync(ozoneModerationGetRepos(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * List moderation events related to a subject.
   */
  async queryEvents(
    request?: operations.ToolsOzoneModerationQueryEventsRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.ToolsOzoneModerationQueryEventsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(ozoneModerationQueryEvents(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * View moderation statuses of subjects (record or repo).
   */
  async queryStatuses(
    request?: operations.ToolsOzoneModerationQueryStatusesRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.ToolsOzoneModerationQueryStatusesResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(ozoneModerationQueryStatuses(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Find repositories based on a search term.
   */
  async searchRepos(
    request?: operations.ToolsOzoneModerationSearchReposRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.ToolsOzoneModerationSearchReposResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(ozoneModerationSearchRepos(
      this,
      request,
      options,
    ));
  }
}
