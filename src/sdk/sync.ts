/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atprotoSyncGetBlob } from "../funcs/atprotoSyncGetBlob.js";
import { atprotoSyncGetBlocks } from "../funcs/atprotoSyncGetBlocks.js";
import { atprotoSyncGetLatestCommit } from "../funcs/atprotoSyncGetLatestCommit.js";
import { atprotoSyncGetRecord } from "../funcs/atprotoSyncGetRecord.js";
import { atprotoSyncGetRepo } from "../funcs/atprotoSyncGetRepo.js";
import { atprotoSyncGetRepoStatus } from "../funcs/atprotoSyncGetRepoStatus.js";
import { atprotoSyncListBlobs } from "../funcs/atprotoSyncListBlobs.js";
import { atprotoSyncListRepos } from "../funcs/atprotoSyncListRepos.js";
import { atprotoSyncNotifyOfUpdate } from "../funcs/atprotoSyncNotifyOfUpdate.js";
import { atprotoSyncRequestCrawl } from "../funcs/atprotoSyncRequestCrawl.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Sync extends ClientSDK {
  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.
   */
  async getBlob(
    request: operations.ComAtprotoSyncGetBlobRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoSyncGetBlob(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.
   */
  async getBlocks(
    request: operations.ComAtprotoSyncGetBlocksRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoSyncGetBlocks(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get the current commit CID & revision of the specified repo. Does not require auth.
   */
  async getLatestCommit(
    request: operations.ComAtprotoSyncGetLatestCommitRequest,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoSyncGetLatestCommitResponseBody> {
    return unwrapAsync(atprotoSyncGetLatestCommit(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.
   */
  async getRecord(
    request: operations.ComAtprotoSyncGetRecordRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoSyncGetRecord(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.
   */
  async getRepo(
    request: operations.ComAtprotoSyncGetRepoRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoSyncGetRepo(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get the hosting status for a repository, on this server. Expected to be implemented by PDS and Relay.
   */
  async getRepoStatus(
    request: operations.ComAtprotoSyncGetRepoStatusRequest,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoSyncGetRepoStatusResponseBody> {
    return unwrapAsync(atprotoSyncGetRepoStatus(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * List blob CIDs for an account, since some repo revision. Does not require auth; implemented by PDS.
   */
  async listBlobs(
    request: operations.ComAtprotoSyncListBlobsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ComAtprotoSyncListBlobsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atprotoSyncListBlobs(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.
   */
  async listRepos(
    request?: operations.ComAtprotoSyncListReposRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ComAtprotoSyncListReposResponse, { cursor: string }>
  > {
    return unwrapResultIterator(atprotoSyncListRepos(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay.
   */
  async notifyOfUpdate(
    request: operations.ComAtprotoSyncNotifyOfUpdateRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoSyncNotifyOfUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * This endpoint is part of the atproto repository synchronization APIs. Requests usually do not require authentication, and can be made to PDS intances or Relay instances.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.
   */
  async requestCrawl(
    request: operations.ComAtprotoSyncRequestCrawlRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoSyncRequestCrawl(
      this,
      request,
      options,
    ));
  }
}
