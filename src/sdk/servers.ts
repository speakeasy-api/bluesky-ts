/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { serversGetServiceAuth } from "../funcs/serversGetServiceAuth.js";
import { serversGetSession } from "../funcs/serversGetSession.js";
import { serversReserveSigningKey } from "../funcs/serversReserveSigningKey.js";
import { serversUpdateEmail } from "../funcs/serversUpdateEmail.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Servers extends ClientSDK {
  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get a signed token on behalf of the requesting DID for the requested service.
   */
  async getServiceAuth(
    request: operations.ComAtprotoServerGetServiceAuthRequest,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerGetServiceAuthResponse> {
    return unwrapAsync(serversGetServiceAuth(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get information about the current auth session. Requires auth.
   */
  async getSession(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerGetSessionResponse> {
    return unwrapAsync(serversGetSession(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.
   */
  async reserveSigningKey(
    request: operations.ComAtprotoServerReserveSigningKeyRequest,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerReserveSigningKeyResponse> {
    return unwrapAsync(serversReserveSigningKey(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Update an account's email.
   */
  async updateEmail(
    request: operations.ComAtprotoServerUpdateEmailRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(serversUpdateEmail(
      this,
      request,
      options,
    ));
  }
}
