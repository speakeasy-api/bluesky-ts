/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { adminsDeleteAccount } from "../funcs/adminsDeleteAccount.js";
import { adminsEnableAccountInvites } from "../funcs/adminsEnableAccountInvites.js";
import { adminsGetAccountInfos } from "../funcs/adminsGetAccountInfos.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Admins extends ClientSDK {
  /**
   * *This endpoint is part of the atproto PDS management APIs. Requests usually require admin authentication and are made directly to the PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Delete a user account as an administrator.
   */
  async deleteAccount(
    request: operations.ComAtprotoAdminDeleteAccountBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(adminsDeleteAccount(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS management APIs. Requests usually require admin authentication and are made directly to the PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Re-enable an account's ability to receive invite codes.
   */
  async enableAccountInvites(
    request: operations.ComAtprotoAdminEnableAccountInvitesBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(adminsEnableAccountInvites(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS management APIs. Requests usually require admin authentication and are made directly to the PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get details about some accounts.
   */
  async getAccountInfos(
    request: operations.ComAtprotoAdminGetAccountInfosRequest,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoAdminGetAccountInfosResponseBody> {
    return unwrapAsync(adminsGetAccountInfos(
      this,
      request,
      options,
    ));
  }
}
