/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ozoneTeamAddMember } from "../funcs/ozoneTeamAddMember.js";
import { ozoneTeamDeleteMember } from "../funcs/ozoneTeamDeleteMember.js";
import { ozoneTeamListMembers } from "../funcs/ozoneTeamListMembers.js";
import { ozoneTeamUpdateMember } from "../funcs/ozoneTeamUpdateMember.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Team extends ClientSDK {
  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Add a member to the ozone team. Requires admin role.
   */
  async addMember(
    request: operations.ToolsOzoneTeamAddMemberRequestBody,
    options?: RequestOptions,
  ): Promise<components.ToolsOzoneTeamDefsMember> {
    return unwrapAsync(ozoneTeamAddMember(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Delete a member from ozone team. Requires admin role.
   */
  async deleteMember(
    request: operations.ToolsOzoneTeamDeleteMemberRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(ozoneTeamDeleteMember(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * List all members with access to the ozone service.
   */
  async listMembers(
    request?: operations.ToolsOzoneTeamListMembersRequest | undefined,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.ToolsOzoneTeamListMembersResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(ozoneTeamListMembers(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Update a member in the ozone service. Requires admin role.
   */
  async updateMember(
    request: operations.ToolsOzoneTeamUpdateMemberRequestBody,
    options?: RequestOptions,
  ): Promise<components.ToolsOzoneTeamDefsMember> {
    return unwrapAsync(ozoneTeamUpdateMember(
      this,
      request,
      options,
    ));
  }
}
