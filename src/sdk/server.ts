/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { comAtprotoServerComAtprotoServerActivateAccount } from "../funcs/comAtprotoServerComAtprotoServerActivateAccount.js";
import { comAtprotoServerComAtprotoServerCheckAccountStatus } from "../funcs/comAtprotoServerComAtprotoServerCheckAccountStatus.js";
import { comAtprotoServerComAtprotoServerConfirmEmail } from "../funcs/comAtprotoServerComAtprotoServerConfirmEmail.js";
import { comAtprotoServerComAtprotoServerCreateAccount } from "../funcs/comAtprotoServerComAtprotoServerCreateAccount.js";
import { comAtprotoServerComAtprotoServerCreateAppPassword } from "../funcs/comAtprotoServerComAtprotoServerCreateAppPassword.js";
import { comAtprotoServerComAtprotoServerCreateInviteCode } from "../funcs/comAtprotoServerComAtprotoServerCreateInviteCode.js";
import { comAtprotoServerComAtprotoServerCreateInviteCodes } from "../funcs/comAtprotoServerComAtprotoServerCreateInviteCodes.js";
import { comAtprotoServerComAtprotoServerCreateSession } from "../funcs/comAtprotoServerComAtprotoServerCreateSession.js";
import { comAtprotoServerComAtprotoServerDeactivateAccount } from "../funcs/comAtprotoServerComAtprotoServerDeactivateAccount.js";
import { comAtprotoServerComAtprotoServerDeleteAccount } from "../funcs/comAtprotoServerComAtprotoServerDeleteAccount.js";
import { comAtprotoServerComAtprotoServerDeleteSession } from "../funcs/comAtprotoServerComAtprotoServerDeleteSession.js";
import { comAtprotoServerComAtprotoServerDescribeServer } from "../funcs/comAtprotoServerComAtprotoServerDescribeServer.js";
import { comAtprotoServerComAtprotoServerGetAccountInviteCodes } from "../funcs/comAtprotoServerComAtprotoServerGetAccountInviteCodes.js";
import { comAtprotoServerComAtprotoServerGetServiceAuth } from "../funcs/comAtprotoServerComAtprotoServerGetServiceAuth.js";
import { comAtprotoServerComAtprotoServerGetSession } from "../funcs/comAtprotoServerComAtprotoServerGetSession.js";
import { comAtprotoServerComAtprotoServerListAppPasswords } from "../funcs/comAtprotoServerComAtprotoServerListAppPasswords.js";
import { comAtprotoServerComAtprotoServerRefreshSession } from "../funcs/comAtprotoServerComAtprotoServerRefreshSession.js";
import { comAtprotoServerComAtprotoServerRequestAccountDelete } from "../funcs/comAtprotoServerComAtprotoServerRequestAccountDelete.js";
import { comAtprotoServerComAtprotoServerRequestEmailConfirmation } from "../funcs/comAtprotoServerComAtprotoServerRequestEmailConfirmation.js";
import { comAtprotoServerComAtprotoServerRequestEmailUpdate } from "../funcs/comAtprotoServerComAtprotoServerRequestEmailUpdate.js";
import { comAtprotoServerComAtprotoServerRequestPasswordReset } from "../funcs/comAtprotoServerComAtprotoServerRequestPasswordReset.js";
import { comAtprotoServerComAtprotoServerReserveSigningKey } from "../funcs/comAtprotoServerComAtprotoServerReserveSigningKey.js";
import { comAtprotoServerComAtprotoServerResetPassword } from "../funcs/comAtprotoServerComAtprotoServerResetPassword.js";
import { comAtprotoServerComAtprotoServerRevokeAppPassword } from "../funcs/comAtprotoServerComAtprotoServerRevokeAppPassword.js";
import { comAtprotoServerComAtprotoServerUpdateEmail } from "../funcs/comAtprotoServerComAtprotoServerUpdateEmail.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Server extends ClientSDK {
  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Activates a currently deactivated account. Used to finalize account migration after the account's repo is imported and identity is setup.
   */
  async comAtprotoServerActivateAccount(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerActivateAccount(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.
   */
  async comAtprotoServerCheckAccountStatus(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerCheckAccountStatusResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerCheckAccountStatus(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Confirm an email using a token from com.atproto.server.requestEmailConfirmation.
   */
  async comAtprotoServerConfirmEmail(
    request: operations.ComAtprotoServerConfirmEmailRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerConfirmEmail(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Create an account. Implemented by PDS.
   */
  async comAtprotoServerCreateAccount(
    request: operations.ComAtprotoServerCreateAccountRequestBody,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerCreateAccountResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerCreateAccount(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Create an App Password.
   */
  async comAtprotoServerCreateAppPassword(
    request: operations.ComAtprotoServerCreateAppPasswordRequestBody,
    options?: RequestOptions,
  ): Promise<components.ComAtprotoServerCreateAppPasswordAppPassword> {
    return unwrapAsync(comAtprotoServerComAtprotoServerCreateAppPassword(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Create an invite code.
   */
  async comAtprotoServerCreateInviteCode(
    request: operations.ComAtprotoServerCreateInviteCodeRequestBody,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerCreateInviteCodeResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerCreateInviteCode(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Create invite codes.
   */
  async comAtprotoServerCreateInviteCodes(
    request: operations.ComAtprotoServerCreateInviteCodesRequestBody,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerCreateInviteCodesResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerCreateInviteCodes(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Create an authentication session.
   */
  async comAtprotoServerCreateSession(
    request: operations.ComAtprotoServerCreateSessionRequestBody,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerCreateSessionResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerCreateSession(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.
   */
  async comAtprotoServerDeactivateAccount(
    request?:
      | operations.ComAtprotoServerDeactivateAccountRequestBody
      | undefined,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerDeactivateAccount(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Delete an actor's account with a token and password. Can only be called after requesting a deletion token. Requires auth.
   */
  async comAtprotoServerDeleteAccount(
    request: operations.ComAtprotoServerDeleteAccountRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerDeleteAccount(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Delete the current session. Requires auth.
   */
  async comAtprotoServerDeleteSession(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerDeleteSession(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Describes the server's account creation requirements and capabilities. Implemented by PDS.
   */
  async comAtprotoServerDescribeServer(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerDescribeServerResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerDescribeServer(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get all invite codes for the current account. Requires auth.
   */
  async comAtprotoServerGetAccountInviteCodes(
    request?:
      | operations.ComAtprotoServerGetAccountInviteCodesRequest
      | undefined,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerGetAccountInviteCodesResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerGetAccountInviteCodes(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get a signed token on behalf of the requesting DID for the requested service.
   */
  async comAtprotoServerGetServiceAuth(
    request: operations.ComAtprotoServerGetServiceAuthRequest,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerGetServiceAuthResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerGetServiceAuth(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Get information about the current auth session. Requires auth.
   */
  async comAtprotoServerGetSession(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerGetSessionResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerGetSession(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * List all App Passwords.
   */
  async comAtprotoServerListAppPasswords(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerListAppPasswordsResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerListAppPasswords(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Refresh an authentication session. Requires auth using the 'refreshJwt' (not the 'accessJwt').
   */
  async comAtprotoServerRefreshSession(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerRefreshSessionResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerRefreshSession(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Initiate a user account deletion via email.
   */
  async comAtprotoServerRequestAccountDelete(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerRequestAccountDelete(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Request an email with a code to confirm ownership of email.
   */
  async comAtprotoServerRequestEmailConfirmation(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerRequestEmailConfirmation(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Request a token in order to update email.
   */
  async comAtprotoServerRequestEmailUpdate(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerRequestEmailUpdateResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerRequestEmailUpdate(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Initiate a user account password reset via email.
   */
  async comAtprotoServerRequestPasswordReset(
    request: operations.ComAtprotoServerRequestPasswordResetRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerRequestPasswordReset(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.
   */
  async comAtprotoServerReserveSigningKey(
    request?:
      | operations.ComAtprotoServerReserveSigningKeyRequestBody
      | undefined,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerReserveSigningKeyResponseBody> {
    return unwrapAsync(comAtprotoServerComAtprotoServerReserveSigningKey(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Reset a user account password using a token.
   */
  async comAtprotoServerResetPassword(
    request: operations.ComAtprotoServerResetPasswordRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerResetPassword(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Revoke an App Password by name.
   */
  async comAtprotoServerRevokeAppPassword(
    request: operations.ComAtprotoServerRevokeAppPasswordRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerRevokeAppPassword(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Update an account's email.
   */
  async comAtprotoServerUpdateEmail(
    request: operations.ComAtprotoServerUpdateEmailRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(comAtprotoServerComAtprotoServerUpdateEmail(
      this,
      request,
      options,
    ));
  }
}
