/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { serverCheckAccountStatus } from "../funcs/serverCheckAccountStatus.js";
import { serverConfirmEmail } from "../funcs/serverConfirmEmail.js";
import { serverCreateSession } from "../funcs/serverCreateSession.js";
import { serverDeactivateAccount } from "../funcs/serverDeactivateAccount.js";
import { serverListAppPasswords } from "../funcs/serverListAppPasswords.js";
import { serverRequestAccountDelete } from "../funcs/serverRequestAccountDelete.js";
import { serverRequestEmailUpdate } from "../funcs/serverRequestEmailUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Server extends ClientSDK {
  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.
   */
  async checkAccountStatus(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerCheckAccountStatusResponseBody> {
    return unwrapAsync(serverCheckAccountStatus(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Confirm an email using a token from com.atproto.server.requestEmailConfirmation.
   */
  async confirmEmail(
    request: operations.ComAtprotoServerConfirmEmailRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(serverConfirmEmail(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Create an authentication session.
   */
  async createSession(
    request: operations.ComAtprotoServerCreateSessionRequestBody,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerCreateSessionResponseBody> {
    return unwrapAsync(serverCreateSession(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.
   */
  async deactivateAccount(
    request?:
      | operations.ComAtprotoServerDeactivateAccountRequestBody
      | undefined,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(serverDeactivateAccount(
      this,
      request,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * List all App Passwords.
   */
  async listAppPasswords(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerListAppPasswordsResponseBody> {
    return unwrapAsync(serverListAppPasswords(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Initiate a user account deletion via email.
   */
  async requestAccountDelete(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(serverRequestAccountDelete(
      this,
      options,
    ));
  }

  /**
   * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
   *
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Request a token in order to update email.
   */
  async requestEmailUpdate(
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoServerRequestEmailUpdateResponseBody> {
    return unwrapAsync(serverRequestEmailUpdate(
      this,
      options,
    ));
  }
}
