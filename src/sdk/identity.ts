/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atprotoIdentityGetRecommendedDidCredentials } from "../funcs/atprotoIdentityGetRecommendedDidCredentials.js";
import { atprotoIdentityRequestPlcOperationSignature } from "../funcs/atprotoIdentityRequestPlcOperationSignature.js";
import { atprotoIdentityResolveHandle } from "../funcs/atprotoIdentityResolveHandle.js";
import { atprotoIdentitySignPlcOperation } from "../funcs/atprotoIdentitySignPlcOperation.js";
import { atprotoIdentitySubmitPlcOperation } from "../funcs/atprotoIdentitySubmitPlcOperation.js";
import { atprotoIdentityUpdateHandle } from "../funcs/atprotoIdentityUpdateHandle.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Identity extends ClientSDK {
  /**
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Describe the credentials that should be included in the DID doc of an account that is migrating to this service.
   */
  async getRecommendedDidCredentials(
    options?: RequestOptions,
  ): Promise<
    operations.ComAtprotoIdentityGetRecommendedDidCredentialsResponseBody
  > {
    return unwrapAsync(atprotoIdentityGetRecommendedDidCredentials(
      this,
      options,
    ));
  }

  /**
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Request an email with a code to in order to request a signed PLC operation. Requires Auth.
   */
  async requestPlcOperationSignature(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoIdentityRequestPlcOperationSignature(
      this,
      options,
    ));
  }

  /**
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Resolves a handle (domain name) to a DID.
   */
  async resolveHandle(
    request: operations.ComAtprotoIdentityResolveHandleRequest,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoIdentityResolveHandleResponseBody> {
    return unwrapAsync(atprotoIdentityResolveHandle(
      this,
      request,
      options,
    ));
  }

  /**
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Signs a PLC operation to update some value(s) in the requesting DID's document.
   */
  async signPlcOperation(
    request?:
      | operations.ComAtprotoIdentitySignPlcOperationRequestBody
      | undefined,
    options?: RequestOptions,
  ): Promise<operations.ComAtprotoIdentitySignPlcOperationResponseBody> {
    return unwrapAsync(atprotoIdentitySignPlcOperation(
      this,
      request,
      options,
    ));
  }

  /**
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry
   */
  async submitPlcOperation(
    request: operations.ComAtprotoIdentitySubmitPlcOperationRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoIdentitySubmitPlcOperation(
      this,
      request,
      options,
    ));
  }

  /**
   * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
   *
   * Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.
   */
  async updateHandle(
    request: operations.ComAtprotoIdentityUpdateHandleRequestBody,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(atprotoIdentityUpdateHandle(
      this,
      request,
      options,
    ));
  }
}
