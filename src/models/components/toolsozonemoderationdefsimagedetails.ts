/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneModerationDefsImageDetails = {
  width: number;
  height: number;
};

/** @internal */
export const ToolsOzoneModerationDefsImageDetails$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsImageDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  width: z.number().int(),
  height: z.number().int(),
});

/** @internal */
export type ToolsOzoneModerationDefsImageDetails$Outbound = {
  width: number;
  height: number;
};

/** @internal */
export const ToolsOzoneModerationDefsImageDetails$outboundSchema: z.ZodType<
  ToolsOzoneModerationDefsImageDetails$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationDefsImageDetails
> = z.object({
  width: z.number().int(),
  height: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsImageDetails$ {
  /** @deprecated use `ToolsOzoneModerationDefsImageDetails$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsImageDetails$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsImageDetails$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsImageDetails$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsImageDetails$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsImageDetails$Outbound;
}

export function toolsOzoneModerationDefsImageDetailsToJSON(
  toolsOzoneModerationDefsImageDetails: ToolsOzoneModerationDefsImageDetails,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsImageDetails$outboundSchema.parse(
      toolsOzoneModerationDefsImageDetails,
    ),
  );
}

export function toolsOzoneModerationDefsImageDetailsFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneModerationDefsImageDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsImageDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneModerationDefsImageDetails' from JSON`,
  );
}
