/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyEmbedRecordViewBlocked,
  AppBskyEmbedRecordViewBlocked$inboundSchema,
  AppBskyEmbedRecordViewBlocked$Outbound,
  AppBskyEmbedRecordViewBlocked$outboundSchema,
} from "./appbskyembedrecordviewblocked.js";
import {
  AppBskyEmbedRecordViewDetached,
  AppBskyEmbedRecordViewDetached$inboundSchema,
  AppBskyEmbedRecordViewDetached$Outbound,
  AppBskyEmbedRecordViewDetached$outboundSchema,
} from "./appbskyembedrecordviewdetached.js";
import {
  AppBskyEmbedRecordViewNotFound,
  AppBskyEmbedRecordViewNotFound$inboundSchema,
  AppBskyEmbedRecordViewNotFound$Outbound,
  AppBskyEmbedRecordViewNotFound$outboundSchema,
} from "./appbskyembedrecordviewnotfound.js";
import {
  AppBskyEmbedRecordViewRecord,
  AppBskyEmbedRecordViewRecord$inboundSchema,
  AppBskyEmbedRecordViewRecord$Outbound,
  AppBskyEmbedRecordViewRecord$outboundSchema,
} from "./appbskyembedrecordviewrecord.js";
import {
  AppBskyFeedDefsGeneratorView,
  AppBskyFeedDefsGeneratorView$inboundSchema,
  AppBskyFeedDefsGeneratorView$Outbound,
  AppBskyFeedDefsGeneratorView$outboundSchema,
} from "./appbskyfeeddefsgeneratorview.js";
import {
  AppBskyGraphDefsListView,
  AppBskyGraphDefsListView$inboundSchema,
  AppBskyGraphDefsListView$Outbound,
  AppBskyGraphDefsListView$outboundSchema,
} from "./appbskygraphdefslistview.js";
import {
  AppBskyGraphDefsStarterPackViewBasic,
  AppBskyGraphDefsStarterPackViewBasic$inboundSchema,
  AppBskyGraphDefsStarterPackViewBasic$Outbound,
  AppBskyGraphDefsStarterPackViewBasic$outboundSchema,
} from "./appbskygraphdefsstarterpackviewbasic.js";
import {
  AppBskyLabelerDefsLabelerView,
  AppBskyLabelerDefsLabelerView$inboundSchema,
  AppBskyLabelerDefsLabelerView$Outbound,
  AppBskyLabelerDefsLabelerView$outboundSchema,
} from "./appbskylabelerdefslabelerview.js";

export type RecordT =
  | AppBskyEmbedRecordViewNotFound
  | AppBskyEmbedRecordViewDetached
  | AppBskyEmbedRecordViewBlocked
  | AppBskyLabelerDefsLabelerView
  | AppBskyGraphDefsStarterPackViewBasic
  | AppBskyEmbedRecordViewRecord
  | AppBskyGraphDefsListView
  | AppBskyFeedDefsGeneratorView;

export type AppBskyEmbedRecordView = {
  record:
    | AppBskyEmbedRecordViewNotFound
    | AppBskyEmbedRecordViewDetached
    | AppBskyEmbedRecordViewBlocked
    | AppBskyLabelerDefsLabelerView
    | AppBskyGraphDefsStarterPackViewBasic
    | AppBskyEmbedRecordViewRecord
    | AppBskyGraphDefsListView
    | AppBskyFeedDefsGeneratorView;
};

/** @internal */
export const RecordT$inboundSchema: z.ZodType<RecordT, z.ZodTypeDef, unknown> =
  z.union([
    AppBskyEmbedRecordViewNotFound$inboundSchema,
    AppBskyEmbedRecordViewDetached$inboundSchema,
    AppBskyEmbedRecordViewBlocked$inboundSchema,
    AppBskyLabelerDefsLabelerView$inboundSchema,
    AppBskyGraphDefsStarterPackViewBasic$inboundSchema,
    z.lazy(() => AppBskyEmbedRecordViewRecord$inboundSchema),
    AppBskyGraphDefsListView$inboundSchema,
    AppBskyFeedDefsGeneratorView$inboundSchema,
  ]);

/** @internal */
export type RecordT$Outbound =
  | AppBskyEmbedRecordViewNotFound$Outbound
  | AppBskyEmbedRecordViewDetached$Outbound
  | AppBskyEmbedRecordViewBlocked$Outbound
  | AppBskyLabelerDefsLabelerView$Outbound
  | AppBskyGraphDefsStarterPackViewBasic$Outbound
  | AppBskyEmbedRecordViewRecord$Outbound
  | AppBskyGraphDefsListView$Outbound
  | AppBskyFeedDefsGeneratorView$Outbound;

/** @internal */
export const RecordT$outboundSchema: z.ZodType<
  RecordT$Outbound,
  z.ZodTypeDef,
  RecordT
> = z.union([
  AppBskyEmbedRecordViewNotFound$outboundSchema,
  AppBskyEmbedRecordViewDetached$outboundSchema,
  AppBskyEmbedRecordViewBlocked$outboundSchema,
  AppBskyLabelerDefsLabelerView$outboundSchema,
  AppBskyGraphDefsStarterPackViewBasic$outboundSchema,
  z.lazy(() => AppBskyEmbedRecordViewRecord$outboundSchema),
  AppBskyGraphDefsListView$outboundSchema,
  AppBskyFeedDefsGeneratorView$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecordT$ {
  /** @deprecated use `RecordT$inboundSchema` instead. */
  export const inboundSchema = RecordT$inboundSchema;
  /** @deprecated use `RecordT$outboundSchema` instead. */
  export const outboundSchema = RecordT$outboundSchema;
  /** @deprecated use `RecordT$Outbound` instead. */
  export type Outbound = RecordT$Outbound;
}

export function recordTToJSON(recordT: RecordT): string {
  return JSON.stringify(RecordT$outboundSchema.parse(recordT));
}

export function recordTFromJSON(
  jsonString: string,
): SafeParseResult<RecordT, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RecordT$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RecordT' from JSON`,
  );
}

/** @internal */
export const AppBskyEmbedRecordView$inboundSchema: z.ZodType<
  AppBskyEmbedRecordView,
  z.ZodTypeDef,
  unknown
> = z.object({
  record: z.union([
    AppBskyEmbedRecordViewNotFound$inboundSchema,
    AppBskyEmbedRecordViewDetached$inboundSchema,
    AppBskyEmbedRecordViewBlocked$inboundSchema,
    AppBskyLabelerDefsLabelerView$inboundSchema,
    AppBskyGraphDefsStarterPackViewBasic$inboundSchema,
    z.lazy(() => AppBskyEmbedRecordViewRecord$inboundSchema),
    AppBskyGraphDefsListView$inboundSchema,
    AppBskyFeedDefsGeneratorView$inboundSchema,
  ]),
});

/** @internal */
export type AppBskyEmbedRecordView$Outbound = {
  record:
    | AppBskyEmbedRecordViewNotFound$Outbound
    | AppBskyEmbedRecordViewDetached$Outbound
    | AppBskyEmbedRecordViewBlocked$Outbound
    | AppBskyLabelerDefsLabelerView$Outbound
    | AppBskyGraphDefsStarterPackViewBasic$Outbound
    | AppBskyEmbedRecordViewRecord$Outbound
    | AppBskyGraphDefsListView$Outbound
    | AppBskyFeedDefsGeneratorView$Outbound;
};

/** @internal */
export const AppBskyEmbedRecordView$outboundSchema: z.ZodType<
  AppBskyEmbedRecordView$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedRecordView
> = z.object({
  record: z.union([
    AppBskyEmbedRecordViewNotFound$outboundSchema,
    AppBskyEmbedRecordViewDetached$outboundSchema,
    AppBskyEmbedRecordViewBlocked$outboundSchema,
    AppBskyLabelerDefsLabelerView$outboundSchema,
    AppBskyGraphDefsStarterPackViewBasic$outboundSchema,
    z.lazy(() => AppBskyEmbedRecordViewRecord$outboundSchema),
    AppBskyGraphDefsListView$outboundSchema,
    AppBskyFeedDefsGeneratorView$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedRecordView$ {
  /** @deprecated use `AppBskyEmbedRecordView$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedRecordView$inboundSchema;
  /** @deprecated use `AppBskyEmbedRecordView$outboundSchema` instead. */
  export const outboundSchema = AppBskyEmbedRecordView$outboundSchema;
  /** @deprecated use `AppBskyEmbedRecordView$Outbound` instead. */
  export type Outbound = AppBskyEmbedRecordView$Outbound;
}

export function appBskyEmbedRecordViewToJSON(
  appBskyEmbedRecordView: AppBskyEmbedRecordView,
): string {
  return JSON.stringify(
    AppBskyEmbedRecordView$outboundSchema.parse(appBskyEmbedRecordView),
  );
}

export function appBskyEmbedRecordViewFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedRecordView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedRecordView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedRecordView' from JSON`,
  );
}
