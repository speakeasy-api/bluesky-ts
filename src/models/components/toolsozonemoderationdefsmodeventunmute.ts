/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Unmute action on a subject
 */
export type ToolsOzoneModerationDefsModEventUnmute = {
  /**
   * Describe reasoning behind the reversal.
   */
  comment?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventUnmute$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventUnmute,
  z.ZodTypeDef,
  unknown
> = z.object({
  comment: z.string().optional(),
});

/** @internal */
export type ToolsOzoneModerationDefsModEventUnmute$Outbound = {
  comment?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventUnmute$outboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventUnmute$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationDefsModEventUnmute
> = z.object({
  comment: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventUnmute$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventUnmute$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventUnmute$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventUnmute$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventUnmute$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventUnmute$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventUnmute$Outbound;
}

export function toolsOzoneModerationDefsModEventUnmuteToJSON(
  toolsOzoneModerationDefsModEventUnmute:
    ToolsOzoneModerationDefsModEventUnmute,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventUnmute$outboundSchema.parse(
      toolsOzoneModerationDefsModEventUnmute,
    ),
  );
}

export function toolsOzoneModerationDefsModEventUnmuteFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneModerationDefsModEventUnmute, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventUnmute$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneModerationDefsModEventUnmute' from JSON`,
  );
}
