/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyActorDefsProfileView,
  AppBskyActorDefsProfileView$inboundSchema,
  AppBskyActorDefsProfileView$Outbound,
  AppBskyActorDefsProfileView$outboundSchema,
} from "./appbskyactordefsprofileview.js";

export type AppBskyFeedGetLikesLike = {
  indexedAt: Date;
  createdAt: Date;
  actor: AppBskyActorDefsProfileView;
};

/** @internal */
export const AppBskyFeedGetLikesLike$inboundSchema: z.ZodType<
  AppBskyFeedGetLikesLike,
  z.ZodTypeDef,
  unknown
> = z.object({
  indexedAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  actor: AppBskyActorDefsProfileView$inboundSchema,
});

/** @internal */
export type AppBskyFeedGetLikesLike$Outbound = {
  indexedAt: string;
  createdAt: string;
  actor: AppBskyActorDefsProfileView$Outbound;
};

/** @internal */
export const AppBskyFeedGetLikesLike$outboundSchema: z.ZodType<
  AppBskyFeedGetLikesLike$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetLikesLike
> = z.object({
  indexedAt: z.date().transform(v => v.toISOString()),
  createdAt: z.date().transform(v => v.toISOString()),
  actor: AppBskyActorDefsProfileView$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetLikesLike$ {
  /** @deprecated use `AppBskyFeedGetLikesLike$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetLikesLike$inboundSchema;
  /** @deprecated use `AppBskyFeedGetLikesLike$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetLikesLike$outboundSchema;
  /** @deprecated use `AppBskyFeedGetLikesLike$Outbound` instead. */
  export type Outbound = AppBskyFeedGetLikesLike$Outbound;
}

export function appBskyFeedGetLikesLikeToJSON(
  appBskyFeedGetLikesLike: AppBskyFeedGetLikesLike,
): string {
  return JSON.stringify(
    AppBskyFeedGetLikesLike$outboundSchema.parse(appBskyFeedGetLikesLike),
  );
}

export function appBskyFeedGetLikesLikeFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetLikesLike, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetLikesLike$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetLikesLike' from JSON`,
  );
}
