/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerDescribeServerContact = {
  email?: string | undefined;
};

/** @internal */
export const ComAtprotoServerDescribeServerContact$inboundSchema: z.ZodType<
  ComAtprotoServerDescribeServerContact,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string().optional(),
});

/** @internal */
export type ComAtprotoServerDescribeServerContact$Outbound = {
  email?: string | undefined;
};

/** @internal */
export const ComAtprotoServerDescribeServerContact$outboundSchema: z.ZodType<
  ComAtprotoServerDescribeServerContact$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerDescribeServerContact
> = z.object({
  email: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDescribeServerContact$ {
  /** @deprecated use `ComAtprotoServerDescribeServerContact$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDescribeServerContact$inboundSchema;
  /** @deprecated use `ComAtprotoServerDescribeServerContact$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDescribeServerContact$outboundSchema;
  /** @deprecated use `ComAtprotoServerDescribeServerContact$Outbound` instead. */
  export type Outbound = ComAtprotoServerDescribeServerContact$Outbound;
}

export function comAtprotoServerDescribeServerContactToJSON(
  comAtprotoServerDescribeServerContact: ComAtprotoServerDescribeServerContact,
): string {
  return JSON.stringify(
    ComAtprotoServerDescribeServerContact$outboundSchema.parse(
      comAtprotoServerDescribeServerContact,
    ),
  );
}

export function comAtprotoServerDescribeServerContactFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoServerDescribeServerContact, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerDescribeServerContact$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoServerDescribeServerContact' from JSON`,
  );
}
