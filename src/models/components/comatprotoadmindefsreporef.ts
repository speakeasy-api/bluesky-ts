/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoAdminDefsRepoRef = {
  did: string;
};

/** @internal */
export const ComAtprotoAdminDefsRepoRef$inboundSchema: z.ZodType<
  ComAtprotoAdminDefsRepoRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
});

/** @internal */
export type ComAtprotoAdminDefsRepoRef$Outbound = {
  did: string;
};

/** @internal */
export const ComAtprotoAdminDefsRepoRef$outboundSchema: z.ZodType<
  ComAtprotoAdminDefsRepoRef$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminDefsRepoRef
> = z.object({
  did: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDefsRepoRef$ {
  /** @deprecated use `ComAtprotoAdminDefsRepoRef$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminDefsRepoRef$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDefsRepoRef$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoAdminDefsRepoRef$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDefsRepoRef$Outbound` instead. */
  export type Outbound = ComAtprotoAdminDefsRepoRef$Outbound;
}

export function comAtprotoAdminDefsRepoRefToJSON(
  comAtprotoAdminDefsRepoRef: ComAtprotoAdminDefsRepoRef,
): string {
  return JSON.stringify(
    ComAtprotoAdminDefsRepoRef$outboundSchema.parse(comAtprotoAdminDefsRepoRef),
  );
}

export function comAtprotoAdminDefsRepoRefFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoAdminDefsRepoRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoAdminDefsRepoRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoAdminDefsRepoRef' from JSON`,
  );
}
