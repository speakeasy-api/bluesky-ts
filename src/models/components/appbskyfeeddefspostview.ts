/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyActorDefsProfileViewBasic,
  AppBskyActorDefsProfileViewBasic$inboundSchema,
  AppBskyActorDefsProfileViewBasic$Outbound,
  AppBskyActorDefsProfileViewBasic$outboundSchema,
} from "./appbskyactordefsprofileviewbasic.js";
import {
  AppBskyEmbedExternalView,
  AppBskyEmbedExternalView$inboundSchema,
  AppBskyEmbedExternalView$Outbound,
  AppBskyEmbedExternalView$outboundSchema,
} from "./appbskyembedexternalview.js";
import {
  AppBskyEmbedImagesView,
  AppBskyEmbedImagesView$inboundSchema,
  AppBskyEmbedImagesView$Outbound,
  AppBskyEmbedImagesView$outboundSchema,
} from "./appbskyembedimagesview.js";
import {
  AppBskyEmbedRecordView,
  AppBskyEmbedRecordView$inboundSchema,
  AppBskyEmbedRecordView$Outbound,
  AppBskyEmbedRecordView$outboundSchema,
} from "./appbskyembedrecordview.js";
import {
  AppBskyEmbedRecordWithMediaView,
  AppBskyEmbedRecordWithMediaView$inboundSchema,
  AppBskyEmbedRecordWithMediaView$Outbound,
  AppBskyEmbedRecordWithMediaView$outboundSchema,
} from "./appbskyembedrecordwithmediaview.js";
import {
  AppBskyEmbedVideoView,
  AppBskyEmbedVideoView$inboundSchema,
  AppBskyEmbedVideoView$Outbound,
  AppBskyEmbedVideoView$outboundSchema,
} from "./appbskyembedvideoview.js";
import {
  AppBskyFeedDefsThreadgateView,
  AppBskyFeedDefsThreadgateView$inboundSchema,
  AppBskyFeedDefsThreadgateView$Outbound,
  AppBskyFeedDefsThreadgateView$outboundSchema,
} from "./appbskyfeeddefsthreadgateview.js";
import {
  AppBskyFeedDefsViewerState,
  AppBskyFeedDefsViewerState$inboundSchema,
  AppBskyFeedDefsViewerState$Outbound,
  AppBskyFeedDefsViewerState$outboundSchema,
} from "./appbskyfeeddefsviewerstate.js";
import {
  ComAtprotoLabelDefsLabel,
  ComAtprotoLabelDefsLabel$inboundSchema,
  ComAtprotoLabelDefsLabel$Outbound,
  ComAtprotoLabelDefsLabel$outboundSchema,
} from "./comatprotolabeldefslabel.js";

export type Embed =
  | AppBskyEmbedImagesView
  | AppBskyEmbedExternalView
  | AppBskyEmbedRecordView
  | AppBskyEmbedRecordWithMediaView
  | AppBskyEmbedVideoView;

export type AppBskyFeedDefsPostView = {
  uri: string;
  cid: string;
  author: AppBskyActorDefsProfileViewBasic;
  record?: any | undefined;
  embed?:
    | AppBskyEmbedImagesView
    | AppBskyEmbedExternalView
    | AppBskyEmbedRecordView
    | AppBskyEmbedRecordWithMediaView
    | AppBskyEmbedVideoView
    | undefined;
  replyCount?: number | undefined;
  repostCount?: number | undefined;
  likeCount?: number | undefined;
  quoteCount?: number | undefined;
  indexedAt: Date;
  /**
   * Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests.
   */
  viewer?: AppBskyFeedDefsViewerState | undefined;
  labels?: Array<ComAtprotoLabelDefsLabel> | undefined;
  threadgate?: AppBskyFeedDefsThreadgateView | undefined;
};

/** @internal */
export const Embed$inboundSchema: z.ZodType<Embed, z.ZodTypeDef, unknown> = z
  .union([
    AppBskyEmbedImagesView$inboundSchema,
    AppBskyEmbedExternalView$inboundSchema,
    AppBskyEmbedRecordView$inboundSchema,
    AppBskyEmbedRecordWithMediaView$inboundSchema,
    AppBskyEmbedVideoView$inboundSchema,
  ]);

/** @internal */
export type Embed$Outbound =
  | AppBskyEmbedImagesView$Outbound
  | AppBskyEmbedExternalView$Outbound
  | AppBskyEmbedRecordView$Outbound
  | AppBskyEmbedRecordWithMediaView$Outbound
  | AppBskyEmbedVideoView$Outbound;

/** @internal */
export const Embed$outboundSchema: z.ZodType<
  Embed$Outbound,
  z.ZodTypeDef,
  Embed
> = z.union([
  AppBskyEmbedImagesView$outboundSchema,
  AppBskyEmbedExternalView$outboundSchema,
  AppBskyEmbedRecordView$outboundSchema,
  AppBskyEmbedRecordWithMediaView$outboundSchema,
  AppBskyEmbedVideoView$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Embed$ {
  /** @deprecated use `Embed$inboundSchema` instead. */
  export const inboundSchema = Embed$inboundSchema;
  /** @deprecated use `Embed$outboundSchema` instead. */
  export const outboundSchema = Embed$outboundSchema;
  /** @deprecated use `Embed$Outbound` instead. */
  export type Outbound = Embed$Outbound;
}

export function embedToJSON(embed: Embed): string {
  return JSON.stringify(Embed$outboundSchema.parse(embed));
}

export function embedFromJSON(
  jsonString: string,
): SafeParseResult<Embed, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Embed$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Embed' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedDefsPostView$inboundSchema: z.ZodType<
  AppBskyFeedDefsPostView,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  cid: z.string(),
  author: AppBskyActorDefsProfileViewBasic$inboundSchema,
  record: z.any().optional(),
  embed: z.union([
    AppBskyEmbedImagesView$inboundSchema,
    AppBskyEmbedExternalView$inboundSchema,
    AppBskyEmbedRecordView$inboundSchema,
    AppBskyEmbedRecordWithMediaView$inboundSchema,
    AppBskyEmbedVideoView$inboundSchema,
  ]).optional(),
  replyCount: z.number().int().optional(),
  repostCount: z.number().int().optional(),
  likeCount: z.number().int().optional(),
  quoteCount: z.number().int().optional(),
  indexedAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  viewer: AppBskyFeedDefsViewerState$inboundSchema.optional(),
  labels: z.array(ComAtprotoLabelDefsLabel$inboundSchema).optional(),
  threadgate: AppBskyFeedDefsThreadgateView$inboundSchema.optional(),
});

/** @internal */
export type AppBskyFeedDefsPostView$Outbound = {
  uri: string;
  cid: string;
  author: AppBskyActorDefsProfileViewBasic$Outbound;
  record?: any | undefined;
  embed?:
    | AppBskyEmbedImagesView$Outbound
    | AppBskyEmbedExternalView$Outbound
    | AppBskyEmbedRecordView$Outbound
    | AppBskyEmbedRecordWithMediaView$Outbound
    | AppBskyEmbedVideoView$Outbound
    | undefined;
  replyCount?: number | undefined;
  repostCount?: number | undefined;
  likeCount?: number | undefined;
  quoteCount?: number | undefined;
  indexedAt: string;
  viewer?: AppBskyFeedDefsViewerState$Outbound | undefined;
  labels?: Array<ComAtprotoLabelDefsLabel$Outbound> | undefined;
  threadgate?: AppBskyFeedDefsThreadgateView$Outbound | undefined;
};

/** @internal */
export const AppBskyFeedDefsPostView$outboundSchema: z.ZodType<
  AppBskyFeedDefsPostView$Outbound,
  z.ZodTypeDef,
  AppBskyFeedDefsPostView
> = z.object({
  uri: z.string(),
  cid: z.string(),
  author: AppBskyActorDefsProfileViewBasic$outboundSchema,
  record: z.any().optional(),
  embed: z.union([
    AppBskyEmbedImagesView$outboundSchema,
    AppBskyEmbedExternalView$outboundSchema,
    AppBskyEmbedRecordView$outboundSchema,
    AppBskyEmbedRecordWithMediaView$outboundSchema,
    AppBskyEmbedVideoView$outboundSchema,
  ]).optional(),
  replyCount: z.number().int().optional(),
  repostCount: z.number().int().optional(),
  likeCount: z.number().int().optional(),
  quoteCount: z.number().int().optional(),
  indexedAt: z.date().transform(v => v.toISOString()),
  viewer: AppBskyFeedDefsViewerState$outboundSchema.optional(),
  labels: z.array(ComAtprotoLabelDefsLabel$outboundSchema).optional(),
  threadgate: AppBskyFeedDefsThreadgateView$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedDefsPostView$ {
  /** @deprecated use `AppBskyFeedDefsPostView$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedDefsPostView$inboundSchema;
  /** @deprecated use `AppBskyFeedDefsPostView$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedDefsPostView$outboundSchema;
  /** @deprecated use `AppBskyFeedDefsPostView$Outbound` instead. */
  export type Outbound = AppBskyFeedDefsPostView$Outbound;
}

export function appBskyFeedDefsPostViewToJSON(
  appBskyFeedDefsPostView: AppBskyFeedDefsPostView,
): string {
  return JSON.stringify(
    AppBskyFeedDefsPostView$outboundSchema.parse(appBskyFeedDefsPostView),
  );
}

export function appBskyFeedDefsPostViewFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedDefsPostView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedDefsPostView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedDefsPostView' from JSON`,
  );
}
