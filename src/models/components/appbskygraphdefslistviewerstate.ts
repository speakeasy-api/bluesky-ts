/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyGraphDefsListViewerState = {
  muted?: boolean | undefined;
  blocked?: string | undefined;
};

/** @internal */
export const AppBskyGraphDefsListViewerState$inboundSchema: z.ZodType<
  AppBskyGraphDefsListViewerState,
  z.ZodTypeDef,
  unknown
> = z.object({
  muted: z.boolean().optional(),
  blocked: z.string().optional(),
});

/** @internal */
export type AppBskyGraphDefsListViewerState$Outbound = {
  muted?: boolean | undefined;
  blocked?: string | undefined;
};

/** @internal */
export const AppBskyGraphDefsListViewerState$outboundSchema: z.ZodType<
  AppBskyGraphDefsListViewerState$Outbound,
  z.ZodTypeDef,
  AppBskyGraphDefsListViewerState
> = z.object({
  muted: z.boolean().optional(),
  blocked: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphDefsListViewerState$ {
  /** @deprecated use `AppBskyGraphDefsListViewerState$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphDefsListViewerState$inboundSchema;
  /** @deprecated use `AppBskyGraphDefsListViewerState$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphDefsListViewerState$outboundSchema;
  /** @deprecated use `AppBskyGraphDefsListViewerState$Outbound` instead. */
  export type Outbound = AppBskyGraphDefsListViewerState$Outbound;
}

export function appBskyGraphDefsListViewerStateToJSON(
  appBskyGraphDefsListViewerState: AppBskyGraphDefsListViewerState,
): string {
  return JSON.stringify(
    AppBskyGraphDefsListViewerState$outboundSchema.parse(
      appBskyGraphDefsListViewerState,
    ),
  );
}

export function appBskyGraphDefsListViewerStateFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyGraphDefsListViewerState, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyGraphDefsListViewerState$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyGraphDefsListViewerState' from JSON`,
  );
}
