/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneModerationDefsModEventAcknowledge = {
  comment?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventAcknowledge,
    z.ZodTypeDef,
    unknown
  > = z.object({
    comment: z.string().optional(),
  });

/** @internal */
export type ToolsOzoneModerationDefsModEventAcknowledge$Outbound = {
  comment?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventAcknowledge$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationDefsModEventAcknowledge
  > = z.object({
    comment: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventAcknowledge$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventAcknowledge$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventAcknowledge$Outbound;
}

export function toolsOzoneModerationDefsModEventAcknowledgeToJSON(
  toolsOzoneModerationDefsModEventAcknowledge:
    ToolsOzoneModerationDefsModEventAcknowledge,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema.parse(
      toolsOzoneModerationDefsModEventAcknowledge,
    ),
  );
}

export function toolsOzoneModerationDefsModEventAcknowledgeFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsModEventAcknowledge,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsModEventAcknowledge' from JSON`,
  );
}
