/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyGraphDefsListViewerState,
  AppBskyGraphDefsListViewerState$inboundSchema,
  AppBskyGraphDefsListViewerState$Outbound,
  AppBskyGraphDefsListViewerState$outboundSchema,
} from "./appbskygraphdefslistviewerstate.js";
import {
  ComAtprotoLabelDefsLabel,
  ComAtprotoLabelDefsLabel$inboundSchema,
  ComAtprotoLabelDefsLabel$Outbound,
  ComAtprotoLabelDefsLabel$outboundSchema,
} from "./comatprotolabeldefslabel.js";

export type AppBskyGraphDefsListViewBasic = {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar?: string | undefined;
  listItemCount?: number | undefined;
  labels?: Array<ComAtprotoLabelDefsLabel> | undefined;
  viewer?: AppBskyGraphDefsListViewerState | undefined;
  indexedAt?: Date | undefined;
};

/** @internal */
export const AppBskyGraphDefsListViewBasic$inboundSchema: z.ZodType<
  AppBskyGraphDefsListViewBasic,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  cid: z.string(),
  name: z.string(),
  purpose: z.string(),
  avatar: z.string().optional(),
  listItemCount: z.number().int().optional(),
  labels: z.array(ComAtprotoLabelDefsLabel$inboundSchema).optional(),
  viewer: AppBskyGraphDefsListViewerState$inboundSchema.optional(),
  indexedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type AppBskyGraphDefsListViewBasic$Outbound = {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar?: string | undefined;
  listItemCount?: number | undefined;
  labels?: Array<ComAtprotoLabelDefsLabel$Outbound> | undefined;
  viewer?: AppBskyGraphDefsListViewerState$Outbound | undefined;
  indexedAt?: string | undefined;
};

/** @internal */
export const AppBskyGraphDefsListViewBasic$outboundSchema: z.ZodType<
  AppBskyGraphDefsListViewBasic$Outbound,
  z.ZodTypeDef,
  AppBskyGraphDefsListViewBasic
> = z.object({
  uri: z.string(),
  cid: z.string(),
  name: z.string(),
  purpose: z.string(),
  avatar: z.string().optional(),
  listItemCount: z.number().int().optional(),
  labels: z.array(ComAtprotoLabelDefsLabel$outboundSchema).optional(),
  viewer: AppBskyGraphDefsListViewerState$outboundSchema.optional(),
  indexedAt: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphDefsListViewBasic$ {
  /** @deprecated use `AppBskyGraphDefsListViewBasic$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphDefsListViewBasic$inboundSchema;
  /** @deprecated use `AppBskyGraphDefsListViewBasic$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphDefsListViewBasic$outboundSchema;
  /** @deprecated use `AppBskyGraphDefsListViewBasic$Outbound` instead. */
  export type Outbound = AppBskyGraphDefsListViewBasic$Outbound;
}

export function appBskyGraphDefsListViewBasicToJSON(
  appBskyGraphDefsListViewBasic: AppBskyGraphDefsListViewBasic,
): string {
  return JSON.stringify(
    AppBskyGraphDefsListViewBasic$outboundSchema.parse(
      appBskyGraphDefsListViewBasic,
    ),
  );
}

export function appBskyGraphDefsListViewBasicFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyGraphDefsListViewBasic, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyGraphDefsListViewBasic$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyGraphDefsListViewBasic' from JSON`,
  );
}
