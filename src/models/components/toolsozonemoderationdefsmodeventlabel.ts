/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Apply/Negate labels on a subject
 */
export type ToolsOzoneModerationDefsModEventLabel = {
  comment?: string | undefined;
  createLabelVals: Array<string>;
  negateLabelVals: Array<string>;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventLabel$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventLabel,
  z.ZodTypeDef,
  unknown
> = z.object({
  comment: z.string().optional(),
  createLabelVals: z.array(z.string()),
  negateLabelVals: z.array(z.string()),
});

/** @internal */
export type ToolsOzoneModerationDefsModEventLabel$Outbound = {
  comment?: string | undefined;
  createLabelVals: Array<string>;
  negateLabelVals: Array<string>;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventLabel$outboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventLabel$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationDefsModEventLabel
> = z.object({
  comment: z.string().optional(),
  createLabelVals: z.array(z.string()),
  negateLabelVals: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventLabel$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventLabel$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventLabel$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventLabel$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventLabel$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventLabel$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventLabel$Outbound;
}

export function toolsOzoneModerationDefsModEventLabelToJSON(
  toolsOzoneModerationDefsModEventLabel: ToolsOzoneModerationDefsModEventLabel,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventLabel$outboundSchema.parse(
      toolsOzoneModerationDefsModEventLabel,
    ),
  );
}

export function toolsOzoneModerationDefsModEventLabelFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneModerationDefsModEventLabel, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventLabel$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneModerationDefsModEventLabel' from JSON`,
  );
}
