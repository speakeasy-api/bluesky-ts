/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSignatureDefsSigDetail = {
  property: string;
  value: string;
};

/** @internal */
export const ToolsOzoneSignatureDefsSigDetail$inboundSchema: z.ZodType<
  ToolsOzoneSignatureDefsSigDetail,
  z.ZodTypeDef,
  unknown
> = z.object({
  property: z.string(),
  value: z.string(),
});

/** @internal */
export type ToolsOzoneSignatureDefsSigDetail$Outbound = {
  property: string;
  value: string;
};

/** @internal */
export const ToolsOzoneSignatureDefsSigDetail$outboundSchema: z.ZodType<
  ToolsOzoneSignatureDefsSigDetail$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSignatureDefsSigDetail
> = z.object({
  property: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureDefsSigDetail$ {
  /** @deprecated use `ToolsOzoneSignatureDefsSigDetail$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSignatureDefsSigDetail$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureDefsSigDetail$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSignatureDefsSigDetail$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureDefsSigDetail$Outbound` instead. */
  export type Outbound = ToolsOzoneSignatureDefsSigDetail$Outbound;
}

export function toolsOzoneSignatureDefsSigDetailToJSON(
  toolsOzoneSignatureDefsSigDetail: ToolsOzoneSignatureDefsSigDetail,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureDefsSigDetail$outboundSchema.parse(
      toolsOzoneSignatureDefsSigDetail,
    ),
  );
}

export function toolsOzoneSignatureDefsSigDetailFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSignatureDefsSigDetail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSignatureDefsSigDetail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSignatureDefsSigDetail' from JSON`,
  );
}
