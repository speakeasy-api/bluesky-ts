/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ComAtprotoAdminDefsAccountView,
  ComAtprotoAdminDefsAccountView$inboundSchema,
  ComAtprotoAdminDefsAccountView$Outbound,
  ComAtprotoAdminDefsAccountView$outboundSchema,
} from "./comatprotoadmindefsaccountview.js";
import {
  ToolsOzoneSignatureDefsSigDetail,
  ToolsOzoneSignatureDefsSigDetail$inboundSchema,
  ToolsOzoneSignatureDefsSigDetail$Outbound,
  ToolsOzoneSignatureDefsSigDetail$outboundSchema,
} from "./toolsozonesignaturedefssigdetail.js";

export type ToolsOzoneSignatureFindRelatedAccountsRelatedAccount = {
  account: ComAtprotoAdminDefsAccountView;
  similarities?: Array<ToolsOzoneSignatureDefsSigDetail> | undefined;
};

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$inboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account: ComAtprotoAdminDefsAccountView$inboundSchema,
    similarities: z.array(ToolsOzoneSignatureDefsSigDetail$inboundSchema)
      .optional(),
  });

/** @internal */
export type ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$Outbound = {
  account: ComAtprotoAdminDefsAccountView$Outbound;
  similarities?: Array<ToolsOzoneSignatureDefsSigDetail$Outbound> | undefined;
};

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount
  > = z.object({
    account: ComAtprotoAdminDefsAccountView$outboundSchema,
    similarities: z.array(ToolsOzoneSignatureDefsSigDetail$outboundSchema)
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$ {
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$Outbound` instead. */
  export type Outbound =
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$Outbound;
}

export function toolsOzoneSignatureFindRelatedAccountsRelatedAccountToJSON(
  toolsOzoneSignatureFindRelatedAccountsRelatedAccount:
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$outboundSchema.parse(
      toolsOzoneSignatureFindRelatedAccountsRelatedAccount,
    ),
  );
}

export function toolsOzoneSignatureFindRelatedAccountsRelatedAccountFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureFindRelatedAccountsRelatedAccount,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureFindRelatedAccountsRelatedAccount' from JSON`,
  );
}
