/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyActorDefsProfileViewBasic,
  AppBskyActorDefsProfileViewBasic$inboundSchema,
  AppBskyActorDefsProfileViewBasic$Outbound,
  AppBskyActorDefsProfileViewBasic$outboundSchema,
} from "./appbskyactordefsprofileviewbasic.js";
import {
  AppBskyEmbedExternalView,
  AppBskyEmbedExternalView$inboundSchema,
  AppBskyEmbedExternalView$Outbound,
  AppBskyEmbedExternalView$outboundSchema,
} from "./appbskyembedexternalview.js";
import {
  AppBskyEmbedImagesView,
  AppBskyEmbedImagesView$inboundSchema,
  AppBskyEmbedImagesView$Outbound,
  AppBskyEmbedImagesView$outboundSchema,
} from "./appbskyembedimagesview.js";
import {
  AppBskyEmbedRecordView,
  AppBskyEmbedRecordView$inboundSchema,
  AppBskyEmbedRecordView$Outbound,
  AppBskyEmbedRecordView$outboundSchema,
} from "./appbskyembedrecordview.js";
import {
  AppBskyEmbedRecordWithMediaView,
  AppBskyEmbedRecordWithMediaView$inboundSchema,
  AppBskyEmbedRecordWithMediaView$Outbound,
  AppBskyEmbedRecordWithMediaView$outboundSchema,
} from "./appbskyembedrecordwithmediaview.js";
import {
  AppBskyEmbedVideoView,
  AppBskyEmbedVideoView$inboundSchema,
  AppBskyEmbedVideoView$Outbound,
  AppBskyEmbedVideoView$outboundSchema,
} from "./appbskyembedvideoview.js";
import {
  ComAtprotoLabelDefsLabel,
  ComAtprotoLabelDefsLabel$inboundSchema,
  ComAtprotoLabelDefsLabel$Outbound,
  ComAtprotoLabelDefsLabel$outboundSchema,
} from "./comatprotolabeldefslabel.js";

export type AppBskyEmbedRecordViewRecordEmbed =
  | AppBskyEmbedVideoView
  | AppBskyEmbedRecordWithMediaView
  | AppBskyEmbedImagesView
  | AppBskyEmbedExternalView
  | AppBskyEmbedRecordView;

export type AppBskyEmbedRecordViewRecord = {
  uri: string;
  cid: string;
  author: AppBskyActorDefsProfileViewBasic;
  value?: any | undefined;
  labels?: Array<ComAtprotoLabelDefsLabel> | undefined;
  replyCount?: number | undefined;
  repostCount?: number | undefined;
  likeCount?: number | undefined;
  quoteCount?: number | undefined;
  embeds?:
    | Array<
      | AppBskyEmbedVideoView
      | AppBskyEmbedRecordWithMediaView
      | AppBskyEmbedImagesView
      | AppBskyEmbedExternalView
      | AppBskyEmbedRecordView
    >
    | undefined;
  indexedAt: Date;
};

/** @internal */
export const AppBskyEmbedRecordViewRecordEmbed$inboundSchema: z.ZodType<
  AppBskyEmbedRecordViewRecordEmbed,
  z.ZodTypeDef,
  unknown
> = z.union([
  AppBskyEmbedVideoView$inboundSchema,
  z.lazy(() => AppBskyEmbedRecordWithMediaView$inboundSchema),
  AppBskyEmbedImagesView$inboundSchema,
  AppBskyEmbedExternalView$inboundSchema,
  z.lazy(() => AppBskyEmbedRecordView$inboundSchema),
]);

/** @internal */
export type AppBskyEmbedRecordViewRecordEmbed$Outbound =
  | AppBskyEmbedVideoView$Outbound
  | AppBskyEmbedRecordWithMediaView$Outbound
  | AppBskyEmbedImagesView$Outbound
  | AppBskyEmbedExternalView$Outbound
  | AppBskyEmbedRecordView$Outbound;

/** @internal */
export const AppBskyEmbedRecordViewRecordEmbed$outboundSchema: z.ZodType<
  AppBskyEmbedRecordViewRecordEmbed$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedRecordViewRecordEmbed
> = z.union([
  AppBskyEmbedVideoView$outboundSchema,
  z.lazy(() => AppBskyEmbedRecordWithMediaView$outboundSchema),
  AppBskyEmbedImagesView$outboundSchema,
  AppBskyEmbedExternalView$outboundSchema,
  z.lazy(() => AppBskyEmbedRecordView$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedRecordViewRecordEmbed$ {
  /** @deprecated use `AppBskyEmbedRecordViewRecordEmbed$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedRecordViewRecordEmbed$inboundSchema;
  /** @deprecated use `AppBskyEmbedRecordViewRecordEmbed$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyEmbedRecordViewRecordEmbed$outboundSchema;
  /** @deprecated use `AppBskyEmbedRecordViewRecordEmbed$Outbound` instead. */
  export type Outbound = AppBskyEmbedRecordViewRecordEmbed$Outbound;
}

export function appBskyEmbedRecordViewRecordEmbedToJSON(
  appBskyEmbedRecordViewRecordEmbed: AppBskyEmbedRecordViewRecordEmbed,
): string {
  return JSON.stringify(
    AppBskyEmbedRecordViewRecordEmbed$outboundSchema.parse(
      appBskyEmbedRecordViewRecordEmbed,
    ),
  );
}

export function appBskyEmbedRecordViewRecordEmbedFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedRecordViewRecordEmbed, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedRecordViewRecordEmbed$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedRecordViewRecordEmbed' from JSON`,
  );
}

/** @internal */
export const AppBskyEmbedRecordViewRecord$inboundSchema: z.ZodType<
  AppBskyEmbedRecordViewRecord,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  cid: z.string(),
  author: AppBskyActorDefsProfileViewBasic$inboundSchema,
  value: z.any().optional(),
  labels: z.array(ComAtprotoLabelDefsLabel$inboundSchema).optional(),
  replyCount: z.number().int().optional(),
  repostCount: z.number().int().optional(),
  likeCount: z.number().int().optional(),
  quoteCount: z.number().int().optional(),
  embeds: z.array(
    z.union([
      AppBskyEmbedVideoView$inboundSchema,
      z.lazy(() => AppBskyEmbedRecordWithMediaView$inboundSchema),
      AppBskyEmbedImagesView$inboundSchema,
      AppBskyEmbedExternalView$inboundSchema,
      z.lazy(() => AppBskyEmbedRecordView$inboundSchema),
    ]),
  ).optional(),
  indexedAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
});

/** @internal */
export type AppBskyEmbedRecordViewRecord$Outbound = {
  uri: string;
  cid: string;
  author: AppBskyActorDefsProfileViewBasic$Outbound;
  value?: any | undefined;
  labels?: Array<ComAtprotoLabelDefsLabel$Outbound> | undefined;
  replyCount?: number | undefined;
  repostCount?: number | undefined;
  likeCount?: number | undefined;
  quoteCount?: number | undefined;
  embeds?:
    | Array<
      | AppBskyEmbedVideoView$Outbound
      | AppBskyEmbedRecordWithMediaView$Outbound
      | AppBskyEmbedImagesView$Outbound
      | AppBskyEmbedExternalView$Outbound
      | AppBskyEmbedRecordView$Outbound
    >
    | undefined;
  indexedAt: string;
};

/** @internal */
export const AppBskyEmbedRecordViewRecord$outboundSchema: z.ZodType<
  AppBskyEmbedRecordViewRecord$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedRecordViewRecord
> = z.object({
  uri: z.string(),
  cid: z.string(),
  author: AppBskyActorDefsProfileViewBasic$outboundSchema,
  value: z.any().optional(),
  labels: z.array(ComAtprotoLabelDefsLabel$outboundSchema).optional(),
  replyCount: z.number().int().optional(),
  repostCount: z.number().int().optional(),
  likeCount: z.number().int().optional(),
  quoteCount: z.number().int().optional(),
  embeds: z.array(
    z.union([
      AppBskyEmbedVideoView$outboundSchema,
      z.lazy(() => AppBskyEmbedRecordWithMediaView$outboundSchema),
      AppBskyEmbedImagesView$outboundSchema,
      AppBskyEmbedExternalView$outboundSchema,
      z.lazy(() => AppBskyEmbedRecordView$outboundSchema),
    ]),
  ).optional(),
  indexedAt: z.date().transform(v => v.toISOString()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedRecordViewRecord$ {
  /** @deprecated use `AppBskyEmbedRecordViewRecord$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedRecordViewRecord$inboundSchema;
  /** @deprecated use `AppBskyEmbedRecordViewRecord$outboundSchema` instead. */
  export const outboundSchema = AppBskyEmbedRecordViewRecord$outboundSchema;
  /** @deprecated use `AppBskyEmbedRecordViewRecord$Outbound` instead. */
  export type Outbound = AppBskyEmbedRecordViewRecord$Outbound;
}

export function appBskyEmbedRecordViewRecordToJSON(
  appBskyEmbedRecordViewRecord: AppBskyEmbedRecordViewRecord,
): string {
  return JSON.stringify(
    AppBskyEmbedRecordViewRecord$outboundSchema.parse(
      appBskyEmbedRecordViewRecord,
    ),
  );
}

export function appBskyEmbedRecordViewRecordFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedRecordViewRecord, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedRecordViewRecord$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedRecordViewRecord' from JSON`,
  );
}
