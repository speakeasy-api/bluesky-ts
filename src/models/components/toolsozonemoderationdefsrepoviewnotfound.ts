/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneModerationDefsRepoViewNotFound = {
  did: string;
};

/** @internal */
export const ToolsOzoneModerationDefsRepoViewNotFound$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsRepoViewNotFound,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
});

/** @internal */
export type ToolsOzoneModerationDefsRepoViewNotFound$Outbound = {
  did: string;
};

/** @internal */
export const ToolsOzoneModerationDefsRepoViewNotFound$outboundSchema: z.ZodType<
  ToolsOzoneModerationDefsRepoViewNotFound$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationDefsRepoViewNotFound
> = z.object({
  did: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsRepoViewNotFound$ {
  /** @deprecated use `ToolsOzoneModerationDefsRepoViewNotFound$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsRepoViewNotFound$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsRepoViewNotFound$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsRepoViewNotFound$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsRepoViewNotFound$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsRepoViewNotFound$Outbound;
}

export function toolsOzoneModerationDefsRepoViewNotFoundToJSON(
  toolsOzoneModerationDefsRepoViewNotFound:
    ToolsOzoneModerationDefsRepoViewNotFound,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsRepoViewNotFound$outboundSchema.parse(
      toolsOzoneModerationDefsRepoViewNotFound,
    ),
  );
}

export function toolsOzoneModerationDefsRepoViewNotFoundFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsRepoViewNotFound,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsRepoViewNotFound$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsRepoViewNotFound' from JSON`,
  );
}
