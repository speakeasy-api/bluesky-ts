/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ComAtprotoRepoApplyWritesCreateResultValidationStatus = {
  Valid: "valid",
  Unknown: "unknown",
} as const;
export type ComAtprotoRepoApplyWritesCreateResultValidationStatus = ClosedEnum<
  typeof ComAtprotoRepoApplyWritesCreateResultValidationStatus
>;

export type ComAtprotoRepoApplyWritesCreateResult = {
  uri: string;
  cid: string;
  validationStatus?:
    | ComAtprotoRepoApplyWritesCreateResultValidationStatus
    | undefined;
};

/** @internal */
export const ComAtprotoRepoApplyWritesCreateResultValidationStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof ComAtprotoRepoApplyWritesCreateResultValidationStatus
  > = z.nativeEnum(ComAtprotoRepoApplyWritesCreateResultValidationStatus);

/** @internal */
export const ComAtprotoRepoApplyWritesCreateResultValidationStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof ComAtprotoRepoApplyWritesCreateResultValidationStatus
  > = ComAtprotoRepoApplyWritesCreateResultValidationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesCreateResultValidationStatus$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesCreateResultValidationStatus$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoRepoApplyWritesCreateResultValidationStatus$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesCreateResultValidationStatus$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoRepoApplyWritesCreateResultValidationStatus$outboundSchema;
}

/** @internal */
export const ComAtprotoRepoApplyWritesCreateResult$inboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesCreateResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  cid: z.string(),
  validationStatus:
    ComAtprotoRepoApplyWritesCreateResultValidationStatus$inboundSchema
      .optional(),
});

/** @internal */
export type ComAtprotoRepoApplyWritesCreateResult$Outbound = {
  uri: string;
  cid: string;
  validationStatus?: string | undefined;
};

/** @internal */
export const ComAtprotoRepoApplyWritesCreateResult$outboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesCreateResult$Outbound,
  z.ZodTypeDef,
  ComAtprotoRepoApplyWritesCreateResult
> = z.object({
  uri: z.string(),
  cid: z.string(),
  validationStatus:
    ComAtprotoRepoApplyWritesCreateResultValidationStatus$outboundSchema
      .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesCreateResult$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesCreateResult$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoRepoApplyWritesCreateResult$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesCreateResult$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoRepoApplyWritesCreateResult$outboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesCreateResult$Outbound` instead. */
  export type Outbound = ComAtprotoRepoApplyWritesCreateResult$Outbound;
}

export function comAtprotoRepoApplyWritesCreateResultToJSON(
  comAtprotoRepoApplyWritesCreateResult: ComAtprotoRepoApplyWritesCreateResult,
): string {
  return JSON.stringify(
    ComAtprotoRepoApplyWritesCreateResult$outboundSchema.parse(
      comAtprotoRepoApplyWritesCreateResult,
    ),
  );
}

export function comAtprotoRepoApplyWritesCreateResultFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoRepoApplyWritesCreateResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoRepoApplyWritesCreateResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoRepoApplyWritesCreateResult' from JSON`,
  );
}
