/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyActorDefsProfileViewBasic,
  AppBskyActorDefsProfileViewBasic$inboundSchema,
  AppBskyActorDefsProfileViewBasic$Outbound,
  AppBskyActorDefsProfileViewBasic$outboundSchema,
} from "./appbskyactordefsprofileviewbasic.js";
import {
  AppBskyFeedDefsBlockedPost,
  AppBskyFeedDefsBlockedPost$inboundSchema,
  AppBskyFeedDefsBlockedPost$Outbound,
  AppBskyFeedDefsBlockedPost$outboundSchema,
} from "./appbskyfeeddefsblockedpost.js";
import {
  AppBskyFeedDefsNotFoundPost,
  AppBskyFeedDefsNotFoundPost$inboundSchema,
  AppBskyFeedDefsNotFoundPost$Outbound,
  AppBskyFeedDefsNotFoundPost$outboundSchema,
} from "./appbskyfeeddefsnotfoundpost.js";
import {
  AppBskyFeedDefsPostView,
  AppBskyFeedDefsPostView$inboundSchema,
  AppBskyFeedDefsPostView$Outbound,
  AppBskyFeedDefsPostView$outboundSchema,
} from "./appbskyfeeddefspostview.js";

export type Root =
  | AppBskyFeedDefsNotFoundPost
  | AppBskyFeedDefsBlockedPost
  | AppBskyFeedDefsPostView;

export type Parent =
  | AppBskyFeedDefsNotFoundPost
  | AppBskyFeedDefsBlockedPost
  | AppBskyFeedDefsPostView;

export type AppBskyFeedDefsReplyRef = {
  root:
    | AppBskyFeedDefsNotFoundPost
    | AppBskyFeedDefsBlockedPost
    | AppBskyFeedDefsPostView;
  parent:
    | AppBskyFeedDefsNotFoundPost
    | AppBskyFeedDefsBlockedPost
    | AppBskyFeedDefsPostView;
  grandparentAuthor?: AppBskyActorDefsProfileViewBasic | undefined;
};

/** @internal */
export const Root$inboundSchema: z.ZodType<Root, z.ZodTypeDef, unknown> = z
  .union([
    AppBskyFeedDefsNotFoundPost$inboundSchema,
    AppBskyFeedDefsBlockedPost$inboundSchema,
    AppBskyFeedDefsPostView$inboundSchema,
  ]);

/** @internal */
export type Root$Outbound =
  | AppBskyFeedDefsNotFoundPost$Outbound
  | AppBskyFeedDefsBlockedPost$Outbound
  | AppBskyFeedDefsPostView$Outbound;

/** @internal */
export const Root$outboundSchema: z.ZodType<Root$Outbound, z.ZodTypeDef, Root> =
  z.union([
    AppBskyFeedDefsNotFoundPost$outboundSchema,
    AppBskyFeedDefsBlockedPost$outboundSchema,
    AppBskyFeedDefsPostView$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Root$ {
  /** @deprecated use `Root$inboundSchema` instead. */
  export const inboundSchema = Root$inboundSchema;
  /** @deprecated use `Root$outboundSchema` instead. */
  export const outboundSchema = Root$outboundSchema;
  /** @deprecated use `Root$Outbound` instead. */
  export type Outbound = Root$Outbound;
}

export function rootToJSON(root: Root): string {
  return JSON.stringify(Root$outboundSchema.parse(root));
}

export function rootFromJSON(
  jsonString: string,
): SafeParseResult<Root, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Root$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Root' from JSON`,
  );
}

/** @internal */
export const Parent$inboundSchema: z.ZodType<Parent, z.ZodTypeDef, unknown> = z
  .union([
    AppBskyFeedDefsNotFoundPost$inboundSchema,
    AppBskyFeedDefsBlockedPost$inboundSchema,
    AppBskyFeedDefsPostView$inboundSchema,
  ]);

/** @internal */
export type Parent$Outbound =
  | AppBskyFeedDefsNotFoundPost$Outbound
  | AppBskyFeedDefsBlockedPost$Outbound
  | AppBskyFeedDefsPostView$Outbound;

/** @internal */
export const Parent$outboundSchema: z.ZodType<
  Parent$Outbound,
  z.ZodTypeDef,
  Parent
> = z.union([
  AppBskyFeedDefsNotFoundPost$outboundSchema,
  AppBskyFeedDefsBlockedPost$outboundSchema,
  AppBskyFeedDefsPostView$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Parent$ {
  /** @deprecated use `Parent$inboundSchema` instead. */
  export const inboundSchema = Parent$inboundSchema;
  /** @deprecated use `Parent$outboundSchema` instead. */
  export const outboundSchema = Parent$outboundSchema;
  /** @deprecated use `Parent$Outbound` instead. */
  export type Outbound = Parent$Outbound;
}

export function parentToJSON(parent: Parent): string {
  return JSON.stringify(Parent$outboundSchema.parse(parent));
}

export function parentFromJSON(
  jsonString: string,
): SafeParseResult<Parent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Parent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Parent' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedDefsReplyRef$inboundSchema: z.ZodType<
  AppBskyFeedDefsReplyRef,
  z.ZodTypeDef,
  unknown
> = z.object({
  root: z.union([
    AppBskyFeedDefsNotFoundPost$inboundSchema,
    AppBskyFeedDefsBlockedPost$inboundSchema,
    AppBskyFeedDefsPostView$inboundSchema,
  ]),
  parent: z.union([
    AppBskyFeedDefsNotFoundPost$inboundSchema,
    AppBskyFeedDefsBlockedPost$inboundSchema,
    AppBskyFeedDefsPostView$inboundSchema,
  ]),
  grandparentAuthor: AppBskyActorDefsProfileViewBasic$inboundSchema.optional(),
});

/** @internal */
export type AppBskyFeedDefsReplyRef$Outbound = {
  root:
    | AppBskyFeedDefsNotFoundPost$Outbound
    | AppBskyFeedDefsBlockedPost$Outbound
    | AppBskyFeedDefsPostView$Outbound;
  parent:
    | AppBskyFeedDefsNotFoundPost$Outbound
    | AppBskyFeedDefsBlockedPost$Outbound
    | AppBskyFeedDefsPostView$Outbound;
  grandparentAuthor?: AppBskyActorDefsProfileViewBasic$Outbound | undefined;
};

/** @internal */
export const AppBskyFeedDefsReplyRef$outboundSchema: z.ZodType<
  AppBskyFeedDefsReplyRef$Outbound,
  z.ZodTypeDef,
  AppBskyFeedDefsReplyRef
> = z.object({
  root: z.union([
    AppBskyFeedDefsNotFoundPost$outboundSchema,
    AppBskyFeedDefsBlockedPost$outboundSchema,
    AppBskyFeedDefsPostView$outboundSchema,
  ]),
  parent: z.union([
    AppBskyFeedDefsNotFoundPost$outboundSchema,
    AppBskyFeedDefsBlockedPost$outboundSchema,
    AppBskyFeedDefsPostView$outboundSchema,
  ]),
  grandparentAuthor: AppBskyActorDefsProfileViewBasic$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedDefsReplyRef$ {
  /** @deprecated use `AppBskyFeedDefsReplyRef$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedDefsReplyRef$inboundSchema;
  /** @deprecated use `AppBskyFeedDefsReplyRef$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedDefsReplyRef$outboundSchema;
  /** @deprecated use `AppBskyFeedDefsReplyRef$Outbound` instead. */
  export type Outbound = AppBskyFeedDefsReplyRef$Outbound;
}

export function appBskyFeedDefsReplyRefToJSON(
  appBskyFeedDefsReplyRef: AppBskyFeedDefsReplyRef,
): string {
  return JSON.stringify(
    AppBskyFeedDefsReplyRef$outboundSchema.parse(appBskyFeedDefsReplyRef),
  );
}

export function appBskyFeedDefsReplyRefFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedDefsReplyRef, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedDefsReplyRef$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedDefsReplyRef' from JSON`,
  );
}
