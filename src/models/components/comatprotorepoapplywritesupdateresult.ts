/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ComAtprotoRepoApplyWritesUpdateResultValidationStatus = {
  Valid: "valid",
  Unknown: "unknown",
} as const;
export type ComAtprotoRepoApplyWritesUpdateResultValidationStatus = ClosedEnum<
  typeof ComAtprotoRepoApplyWritesUpdateResultValidationStatus
>;

export type ComAtprotoRepoApplyWritesUpdateResult = {
  uri: string;
  cid: string;
  validationStatus?:
    | ComAtprotoRepoApplyWritesUpdateResultValidationStatus
    | undefined;
};

/** @internal */
export const ComAtprotoRepoApplyWritesUpdateResultValidationStatus$inboundSchema:
  z.ZodNativeEnum<
    typeof ComAtprotoRepoApplyWritesUpdateResultValidationStatus
  > = z.nativeEnum(ComAtprotoRepoApplyWritesUpdateResultValidationStatus);

/** @internal */
export const ComAtprotoRepoApplyWritesUpdateResultValidationStatus$outboundSchema:
  z.ZodNativeEnum<
    typeof ComAtprotoRepoApplyWritesUpdateResultValidationStatus
  > = ComAtprotoRepoApplyWritesUpdateResultValidationStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesUpdateResultValidationStatus$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdateResultValidationStatus$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoRepoApplyWritesUpdateResultValidationStatus$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdateResultValidationStatus$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoRepoApplyWritesUpdateResultValidationStatus$outboundSchema;
}

/** @internal */
export const ComAtprotoRepoApplyWritesUpdateResult$inboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesUpdateResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  cid: z.string(),
  validationStatus:
    ComAtprotoRepoApplyWritesUpdateResultValidationStatus$inboundSchema
      .optional(),
});

/** @internal */
export type ComAtprotoRepoApplyWritesUpdateResult$Outbound = {
  uri: string;
  cid: string;
  validationStatus?: string | undefined;
};

/** @internal */
export const ComAtprotoRepoApplyWritesUpdateResult$outboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesUpdateResult$Outbound,
  z.ZodTypeDef,
  ComAtprotoRepoApplyWritesUpdateResult
> = z.object({
  uri: z.string(),
  cid: z.string(),
  validationStatus:
    ComAtprotoRepoApplyWritesUpdateResultValidationStatus$outboundSchema
      .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesUpdateResult$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdateResult$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoRepoApplyWritesUpdateResult$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdateResult$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoRepoApplyWritesUpdateResult$outboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdateResult$Outbound` instead. */
  export type Outbound = ComAtprotoRepoApplyWritesUpdateResult$Outbound;
}

export function comAtprotoRepoApplyWritesUpdateResultToJSON(
  comAtprotoRepoApplyWritesUpdateResult: ComAtprotoRepoApplyWritesUpdateResult,
): string {
  return JSON.stringify(
    ComAtprotoRepoApplyWritesUpdateResult$outboundSchema.parse(
      comAtprotoRepoApplyWritesUpdateResult,
    ),
  );
}

export function comAtprotoRepoApplyWritesUpdateResultFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoRepoApplyWritesUpdateResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoRepoApplyWritesUpdateResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoRepoApplyWritesUpdateResult' from JSON`,
  );
}
