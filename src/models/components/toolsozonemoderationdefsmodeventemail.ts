/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Keep a log of outgoing email to a user
 */
export type ToolsOzoneModerationDefsModEventEmail = {
  /**
   * The subject line of the email sent to the user.
   */
  subjectLine: string;
  /**
   * The content of the email sent to the user.
   */
  content?: string | undefined;
  /**
   * Additional comment about the outgoing comm.
   */
  comment?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventEmail$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventEmail,
  z.ZodTypeDef,
  unknown
> = z.object({
  subjectLine: z.string(),
  content: z.string().optional(),
  comment: z.string().optional(),
});

/** @internal */
export type ToolsOzoneModerationDefsModEventEmail$Outbound = {
  subjectLine: string;
  content?: string | undefined;
  comment?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventEmail$outboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventEmail$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationDefsModEventEmail
> = z.object({
  subjectLine: z.string(),
  content: z.string().optional(),
  comment: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventEmail$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventEmail$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventEmail$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventEmail$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventEmail$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventEmail$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventEmail$Outbound;
}

export function toolsOzoneModerationDefsModEventEmailToJSON(
  toolsOzoneModerationDefsModEventEmail: ToolsOzoneModerationDefsModEventEmail,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventEmail$outboundSchema.parse(
      toolsOzoneModerationDefsModEventEmail,
    ),
  );
}

export function toolsOzoneModerationDefsModEventEmailFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneModerationDefsModEventEmail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventEmail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneModerationDefsModEventEmail' from JSON`,
  );
}
