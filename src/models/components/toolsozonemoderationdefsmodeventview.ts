/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChatBskyConvoDefsMessageRef,
  ChatBskyConvoDefsMessageRef$inboundSchema,
  ChatBskyConvoDefsMessageRef$Outbound,
  ChatBskyConvoDefsMessageRef$outboundSchema,
} from "./chatbskyconvodefsmessageref.js";
import {
  ComAtprotoAdminDefsRepoRef,
  ComAtprotoAdminDefsRepoRef$inboundSchema,
  ComAtprotoAdminDefsRepoRef$Outbound,
  ComAtprotoAdminDefsRepoRef$outboundSchema,
} from "./comatprotoadmindefsreporef.js";
import {
  ComAtprotoRepoStrongRef,
  ComAtprotoRepoStrongRef$inboundSchema,
  ComAtprotoRepoStrongRef$Outbound,
  ComAtprotoRepoStrongRef$outboundSchema,
} from "./comatprotorepostrongref.js";
import {
  ToolsOzoneModerationDefsAccountEvent,
  ToolsOzoneModerationDefsAccountEvent$inboundSchema,
  ToolsOzoneModerationDefsAccountEvent$Outbound,
  ToolsOzoneModerationDefsAccountEvent$outboundSchema,
} from "./toolsozonemoderationdefsaccountevent.js";
import {
  ToolsOzoneModerationDefsIdentityEvent,
  ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
  ToolsOzoneModerationDefsIdentityEvent$Outbound,
  ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
} from "./toolsozonemoderationdefsidentityevent.js";
import {
  ToolsOzoneModerationDefsModEventAcknowledge,
  ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
  ToolsOzoneModerationDefsModEventAcknowledge$Outbound,
  ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
} from "./toolsozonemoderationdefsmodeventacknowledge.js";
import {
  ToolsOzoneModerationDefsModEventComment,
  ToolsOzoneModerationDefsModEventComment$inboundSchema,
  ToolsOzoneModerationDefsModEventComment$Outbound,
  ToolsOzoneModerationDefsModEventComment$outboundSchema,
} from "./toolsozonemoderationdefsmodeventcomment.js";
import {
  ToolsOzoneModerationDefsModEventDivert,
  ToolsOzoneModerationDefsModEventDivert$inboundSchema,
  ToolsOzoneModerationDefsModEventDivert$Outbound,
  ToolsOzoneModerationDefsModEventDivert$outboundSchema,
} from "./toolsozonemoderationdefsmodeventdivert.js";
import {
  ToolsOzoneModerationDefsModEventEmail,
  ToolsOzoneModerationDefsModEventEmail$inboundSchema,
  ToolsOzoneModerationDefsModEventEmail$Outbound,
  ToolsOzoneModerationDefsModEventEmail$outboundSchema,
} from "./toolsozonemoderationdefsmodeventemail.js";
import {
  ToolsOzoneModerationDefsModEventEscalate,
  ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
  ToolsOzoneModerationDefsModEventEscalate$Outbound,
  ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
} from "./toolsozonemoderationdefsmodeventescalate.js";
import {
  ToolsOzoneModerationDefsModEventLabel,
  ToolsOzoneModerationDefsModEventLabel$inboundSchema,
  ToolsOzoneModerationDefsModEventLabel$Outbound,
  ToolsOzoneModerationDefsModEventLabel$outboundSchema,
} from "./toolsozonemoderationdefsmodeventlabel.js";
import {
  ToolsOzoneModerationDefsModEventMute,
  ToolsOzoneModerationDefsModEventMute$inboundSchema,
  ToolsOzoneModerationDefsModEventMute$Outbound,
  ToolsOzoneModerationDefsModEventMute$outboundSchema,
} from "./toolsozonemoderationdefsmodeventmute.js";
import {
  ToolsOzoneModerationDefsModEventMuteReporter,
  ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
  ToolsOzoneModerationDefsModEventMuteReporter$Outbound,
  ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
} from "./toolsozonemoderationdefsmodeventmutereporter.js";
import {
  ToolsOzoneModerationDefsModEventReport,
  ToolsOzoneModerationDefsModEventReport$inboundSchema,
  ToolsOzoneModerationDefsModEventReport$Outbound,
  ToolsOzoneModerationDefsModEventReport$outboundSchema,
} from "./toolsozonemoderationdefsmodeventreport.js";
import {
  ToolsOzoneModerationDefsModEventResolveAppeal,
  ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
  ToolsOzoneModerationDefsModEventResolveAppeal$Outbound,
  ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
} from "./toolsozonemoderationdefsmodeventresolveappeal.js";
import {
  ToolsOzoneModerationDefsModEventReverseTakedown,
  ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
  ToolsOzoneModerationDefsModEventReverseTakedown$Outbound,
  ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
} from "./toolsozonemoderationdefsmodeventreversetakedown.js";
import {
  ToolsOzoneModerationDefsModEventTag,
  ToolsOzoneModerationDefsModEventTag$inboundSchema,
  ToolsOzoneModerationDefsModEventTag$Outbound,
  ToolsOzoneModerationDefsModEventTag$outboundSchema,
} from "./toolsozonemoderationdefsmodeventtag.js";
import {
  ToolsOzoneModerationDefsModEventTakedown,
  ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
  ToolsOzoneModerationDefsModEventTakedown$Outbound,
  ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
} from "./toolsozonemoderationdefsmodeventtakedown.js";
import {
  ToolsOzoneModerationDefsModEventUnmute,
  ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
  ToolsOzoneModerationDefsModEventUnmute$Outbound,
  ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
} from "./toolsozonemoderationdefsmodeventunmute.js";
import {
  ToolsOzoneModerationDefsModEventUnmuteReporter,
  ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
  ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound,
  ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
} from "./toolsozonemoderationdefsmodeventunmutereporter.js";
import {
  ToolsOzoneModerationDefsRecordEvent,
  ToolsOzoneModerationDefsRecordEvent$inboundSchema,
  ToolsOzoneModerationDefsRecordEvent$Outbound,
  ToolsOzoneModerationDefsRecordEvent$outboundSchema,
} from "./toolsozonemoderationdefsrecordevent.js";

export type ToolsOzoneModerationDefsModEventViewEvent =
  | ToolsOzoneModerationDefsModEventLabel
  | ToolsOzoneModerationDefsModEventTag
  | ToolsOzoneModerationDefsAccountEvent
  | ToolsOzoneModerationDefsRecordEvent
  | ToolsOzoneModerationDefsModEventComment
  | ToolsOzoneModerationDefsModEventReport
  | ToolsOzoneModerationDefsModEventMute
  | ToolsOzoneModerationDefsModEventEmail
  | ToolsOzoneModerationDefsIdentityEvent
  | ToolsOzoneModerationDefsModEventTakedown
  | ToolsOzoneModerationDefsModEventReverseTakedown
  | ToolsOzoneModerationDefsModEventAcknowledge
  | ToolsOzoneModerationDefsModEventEscalate
  | ToolsOzoneModerationDefsModEventUnmute
  | ToolsOzoneModerationDefsModEventMuteReporter
  | ToolsOzoneModerationDefsModEventUnmuteReporter
  | ToolsOzoneModerationDefsModEventResolveAppeal
  | ToolsOzoneModerationDefsModEventDivert;

export type ToolsOzoneModerationDefsModEventViewSubject =
  | ChatBskyConvoDefsMessageRef
  | ComAtprotoRepoStrongRef
  | ComAtprotoAdminDefsRepoRef;

export type ToolsOzoneModerationDefsModEventView = {
  id: number;
  event:
    | ToolsOzoneModerationDefsModEventLabel
    | ToolsOzoneModerationDefsModEventTag
    | ToolsOzoneModerationDefsAccountEvent
    | ToolsOzoneModerationDefsRecordEvent
    | ToolsOzoneModerationDefsModEventComment
    | ToolsOzoneModerationDefsModEventReport
    | ToolsOzoneModerationDefsModEventMute
    | ToolsOzoneModerationDefsModEventEmail
    | ToolsOzoneModerationDefsIdentityEvent
    | ToolsOzoneModerationDefsModEventTakedown
    | ToolsOzoneModerationDefsModEventReverseTakedown
    | ToolsOzoneModerationDefsModEventAcknowledge
    | ToolsOzoneModerationDefsModEventEscalate
    | ToolsOzoneModerationDefsModEventUnmute
    | ToolsOzoneModerationDefsModEventMuteReporter
    | ToolsOzoneModerationDefsModEventUnmuteReporter
    | ToolsOzoneModerationDefsModEventResolveAppeal
    | ToolsOzoneModerationDefsModEventDivert;
  subject:
    | ChatBskyConvoDefsMessageRef
    | ComAtprotoRepoStrongRef
    | ComAtprotoAdminDefsRepoRef;
  subjectBlobCids: Array<string>;
  createdBy: string;
  createdAt: Date;
  creatorHandle?: string | undefined;
  subjectHandle?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventViewEvent$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventViewEvent,
  z.ZodTypeDef,
  unknown
> = z.union([
  ToolsOzoneModerationDefsModEventLabel$inboundSchema,
  ToolsOzoneModerationDefsModEventTag$inboundSchema,
  ToolsOzoneModerationDefsAccountEvent$inboundSchema,
  ToolsOzoneModerationDefsRecordEvent$inboundSchema,
  ToolsOzoneModerationDefsModEventComment$inboundSchema,
  ToolsOzoneModerationDefsModEventReport$inboundSchema,
  ToolsOzoneModerationDefsModEventMute$inboundSchema,
  ToolsOzoneModerationDefsModEventEmail$inboundSchema,
  ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
  ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
  ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
  ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
  ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
  ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
  ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
  ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
  ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
  ToolsOzoneModerationDefsModEventDivert$inboundSchema,
]);

/** @internal */
export type ToolsOzoneModerationDefsModEventViewEvent$Outbound =
  | ToolsOzoneModerationDefsModEventLabel$Outbound
  | ToolsOzoneModerationDefsModEventTag$Outbound
  | ToolsOzoneModerationDefsAccountEvent$Outbound
  | ToolsOzoneModerationDefsRecordEvent$Outbound
  | ToolsOzoneModerationDefsModEventComment$Outbound
  | ToolsOzoneModerationDefsModEventReport$Outbound
  | ToolsOzoneModerationDefsModEventMute$Outbound
  | ToolsOzoneModerationDefsModEventEmail$Outbound
  | ToolsOzoneModerationDefsIdentityEvent$Outbound
  | ToolsOzoneModerationDefsModEventTakedown$Outbound
  | ToolsOzoneModerationDefsModEventReverseTakedown$Outbound
  | ToolsOzoneModerationDefsModEventAcknowledge$Outbound
  | ToolsOzoneModerationDefsModEventEscalate$Outbound
  | ToolsOzoneModerationDefsModEventUnmute$Outbound
  | ToolsOzoneModerationDefsModEventMuteReporter$Outbound
  | ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound
  | ToolsOzoneModerationDefsModEventResolveAppeal$Outbound
  | ToolsOzoneModerationDefsModEventDivert$Outbound;

/** @internal */
export const ToolsOzoneModerationDefsModEventViewEvent$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewEvent$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationDefsModEventViewEvent
  > = z.union([
    ToolsOzoneModerationDefsModEventLabel$outboundSchema,
    ToolsOzoneModerationDefsModEventTag$outboundSchema,
    ToolsOzoneModerationDefsAccountEvent$outboundSchema,
    ToolsOzoneModerationDefsRecordEvent$outboundSchema,
    ToolsOzoneModerationDefsModEventComment$outboundSchema,
    ToolsOzoneModerationDefsModEventReport$outboundSchema,
    ToolsOzoneModerationDefsModEventMute$outboundSchema,
    ToolsOzoneModerationDefsModEventEmail$outboundSchema,
    ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
    ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
    ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
    ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
    ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
    ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
    ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
    ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
    ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
    ToolsOzoneModerationDefsModEventDivert$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventViewEvent$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewEvent$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventViewEvent$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewEvent$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventViewEvent$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewEvent$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventViewEvent$Outbound;
}

export function toolsOzoneModerationDefsModEventViewEventToJSON(
  toolsOzoneModerationDefsModEventViewEvent:
    ToolsOzoneModerationDefsModEventViewEvent,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventViewEvent$outboundSchema.parse(
      toolsOzoneModerationDefsModEventViewEvent,
    ),
  );
}

export function toolsOzoneModerationDefsModEventViewEventFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsModEventViewEvent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventViewEvent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsModEventViewEvent' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneModerationDefsModEventViewSubject$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewSubject,
    z.ZodTypeDef,
    unknown
  > = z.union([
    ChatBskyConvoDefsMessageRef$inboundSchema,
    ComAtprotoRepoStrongRef$inboundSchema,
    ComAtprotoAdminDefsRepoRef$inboundSchema,
  ]);

/** @internal */
export type ToolsOzoneModerationDefsModEventViewSubject$Outbound =
  | ChatBskyConvoDefsMessageRef$Outbound
  | ComAtprotoRepoStrongRef$Outbound
  | ComAtprotoAdminDefsRepoRef$Outbound;

/** @internal */
export const ToolsOzoneModerationDefsModEventViewSubject$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewSubject$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationDefsModEventViewSubject
  > = z.union([
    ChatBskyConvoDefsMessageRef$outboundSchema,
    ComAtprotoRepoStrongRef$outboundSchema,
    ComAtprotoAdminDefsRepoRef$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventViewSubject$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewSubject$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventViewSubject$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewSubject$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventViewSubject$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewSubject$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventViewSubject$Outbound;
}

export function toolsOzoneModerationDefsModEventViewSubjectToJSON(
  toolsOzoneModerationDefsModEventViewSubject:
    ToolsOzoneModerationDefsModEventViewSubject,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventViewSubject$outboundSchema.parse(
      toolsOzoneModerationDefsModEventViewSubject,
    ),
  );
}

export function toolsOzoneModerationDefsModEventViewSubjectFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsModEventViewSubject,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventViewSubject$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsModEventViewSubject' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneModerationDefsModEventView$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventView,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
  event: z.union([
    ToolsOzoneModerationDefsModEventLabel$inboundSchema,
    ToolsOzoneModerationDefsModEventTag$inboundSchema,
    ToolsOzoneModerationDefsAccountEvent$inboundSchema,
    ToolsOzoneModerationDefsRecordEvent$inboundSchema,
    ToolsOzoneModerationDefsModEventComment$inboundSchema,
    ToolsOzoneModerationDefsModEventReport$inboundSchema,
    ToolsOzoneModerationDefsModEventMute$inboundSchema,
    ToolsOzoneModerationDefsModEventEmail$inboundSchema,
    ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
    ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
    ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
    ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
    ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
    ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
    ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
    ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
    ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
    ToolsOzoneModerationDefsModEventDivert$inboundSchema,
  ]),
  subject: z.union([
    ChatBskyConvoDefsMessageRef$inboundSchema,
    ComAtprotoRepoStrongRef$inboundSchema,
    ComAtprotoAdminDefsRepoRef$inboundSchema,
  ]),
  subjectBlobCids: z.array(z.string()),
  createdBy: z.string(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  creatorHandle: z.string().optional(),
  subjectHandle: z.string().optional(),
});

/** @internal */
export type ToolsOzoneModerationDefsModEventView$Outbound = {
  id: number;
  event:
    | ToolsOzoneModerationDefsModEventLabel$Outbound
    | ToolsOzoneModerationDefsModEventTag$Outbound
    | ToolsOzoneModerationDefsAccountEvent$Outbound
    | ToolsOzoneModerationDefsRecordEvent$Outbound
    | ToolsOzoneModerationDefsModEventComment$Outbound
    | ToolsOzoneModerationDefsModEventReport$Outbound
    | ToolsOzoneModerationDefsModEventMute$Outbound
    | ToolsOzoneModerationDefsModEventEmail$Outbound
    | ToolsOzoneModerationDefsIdentityEvent$Outbound
    | ToolsOzoneModerationDefsModEventTakedown$Outbound
    | ToolsOzoneModerationDefsModEventReverseTakedown$Outbound
    | ToolsOzoneModerationDefsModEventAcknowledge$Outbound
    | ToolsOzoneModerationDefsModEventEscalate$Outbound
    | ToolsOzoneModerationDefsModEventUnmute$Outbound
    | ToolsOzoneModerationDefsModEventMuteReporter$Outbound
    | ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound
    | ToolsOzoneModerationDefsModEventResolveAppeal$Outbound
    | ToolsOzoneModerationDefsModEventDivert$Outbound;
  subject:
    | ChatBskyConvoDefsMessageRef$Outbound
    | ComAtprotoRepoStrongRef$Outbound
    | ComAtprotoAdminDefsRepoRef$Outbound;
  subjectBlobCids: Array<string>;
  createdBy: string;
  createdAt: string;
  creatorHandle?: string | undefined;
  subjectHandle?: string | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventView$outboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventView$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationDefsModEventView
> = z.object({
  id: z.number().int(),
  event: z.union([
    ToolsOzoneModerationDefsModEventLabel$outboundSchema,
    ToolsOzoneModerationDefsModEventTag$outboundSchema,
    ToolsOzoneModerationDefsAccountEvent$outboundSchema,
    ToolsOzoneModerationDefsRecordEvent$outboundSchema,
    ToolsOzoneModerationDefsModEventComment$outboundSchema,
    ToolsOzoneModerationDefsModEventReport$outboundSchema,
    ToolsOzoneModerationDefsModEventMute$outboundSchema,
    ToolsOzoneModerationDefsModEventEmail$outboundSchema,
    ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
    ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
    ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
    ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
    ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
    ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
    ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
    ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
    ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
    ToolsOzoneModerationDefsModEventDivert$outboundSchema,
  ]),
  subject: z.union([
    ChatBskyConvoDefsMessageRef$outboundSchema,
    ComAtprotoRepoStrongRef$outboundSchema,
    ComAtprotoAdminDefsRepoRef$outboundSchema,
  ]),
  subjectBlobCids: z.array(z.string()),
  createdBy: z.string(),
  createdAt: z.date().transform(v => v.toISOString()),
  creatorHandle: z.string().optional(),
  subjectHandle: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventView$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventView$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventView$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventView$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventView$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventView$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventView$Outbound;
}

export function toolsOzoneModerationDefsModEventViewToJSON(
  toolsOzoneModerationDefsModEventView: ToolsOzoneModerationDefsModEventView,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventView$outboundSchema.parse(
      toolsOzoneModerationDefsModEventView,
    ),
  );
}

export function toolsOzoneModerationDefsModEventViewFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneModerationDefsModEventView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneModerationDefsModEventView' from JSON`,
  );
}
