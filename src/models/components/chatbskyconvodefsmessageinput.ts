/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyEmbedRecord,
  AppBskyEmbedRecord$inboundSchema,
  AppBskyEmbedRecord$Outbound,
  AppBskyEmbedRecord$outboundSchema,
} from "./appbskyembedrecord.js";
import {
  AppBskyRichtextFacet,
  AppBskyRichtextFacet$inboundSchema,
  AppBskyRichtextFacet$Outbound,
  AppBskyRichtextFacet$outboundSchema,
} from "./appbskyrichtextfacet.js";

export type ChatBskyConvoDefsMessageInputEmbed = AppBskyEmbedRecord;

export type ChatBskyConvoDefsMessageInput = {
  text: string;
  facets?: Array<AppBskyRichtextFacet> | undefined;
  embed?: AppBskyEmbedRecord | undefined;
};

/** @internal */
export const ChatBskyConvoDefsMessageInputEmbed$inboundSchema: z.ZodType<
  ChatBskyConvoDefsMessageInputEmbed,
  z.ZodTypeDef,
  unknown
> = AppBskyEmbedRecord$inboundSchema;

/** @internal */
export type ChatBskyConvoDefsMessageInputEmbed$Outbound =
  AppBskyEmbedRecord$Outbound;

/** @internal */
export const ChatBskyConvoDefsMessageInputEmbed$outboundSchema: z.ZodType<
  ChatBskyConvoDefsMessageInputEmbed$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoDefsMessageInputEmbed
> = AppBskyEmbedRecord$outboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoDefsMessageInputEmbed$ {
  /** @deprecated use `ChatBskyConvoDefsMessageInputEmbed$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoDefsMessageInputEmbed$inboundSchema;
  /** @deprecated use `ChatBskyConvoDefsMessageInputEmbed$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoDefsMessageInputEmbed$outboundSchema;
  /** @deprecated use `ChatBskyConvoDefsMessageInputEmbed$Outbound` instead. */
  export type Outbound = ChatBskyConvoDefsMessageInputEmbed$Outbound;
}

export function chatBskyConvoDefsMessageInputEmbedToJSON(
  chatBskyConvoDefsMessageInputEmbed: ChatBskyConvoDefsMessageInputEmbed,
): string {
  return JSON.stringify(
    ChatBskyConvoDefsMessageInputEmbed$outboundSchema.parse(
      chatBskyConvoDefsMessageInputEmbed,
    ),
  );
}

export function chatBskyConvoDefsMessageInputEmbedFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoDefsMessageInputEmbed, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoDefsMessageInputEmbed$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoDefsMessageInputEmbed' from JSON`,
  );
}

/** @internal */
export const ChatBskyConvoDefsMessageInput$inboundSchema: z.ZodType<
  ChatBskyConvoDefsMessageInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  text: z.string(),
  facets: z.array(AppBskyRichtextFacet$inboundSchema).optional(),
  embed: AppBskyEmbedRecord$inboundSchema.optional(),
});

/** @internal */
export type ChatBskyConvoDefsMessageInput$Outbound = {
  text: string;
  facets?: Array<AppBskyRichtextFacet$Outbound> | undefined;
  embed?: AppBskyEmbedRecord$Outbound | undefined;
};

/** @internal */
export const ChatBskyConvoDefsMessageInput$outboundSchema: z.ZodType<
  ChatBskyConvoDefsMessageInput$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoDefsMessageInput
> = z.object({
  text: z.string(),
  facets: z.array(AppBskyRichtextFacet$outboundSchema).optional(),
  embed: AppBskyEmbedRecord$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoDefsMessageInput$ {
  /** @deprecated use `ChatBskyConvoDefsMessageInput$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoDefsMessageInput$inboundSchema;
  /** @deprecated use `ChatBskyConvoDefsMessageInput$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoDefsMessageInput$outboundSchema;
  /** @deprecated use `ChatBskyConvoDefsMessageInput$Outbound` instead. */
  export type Outbound = ChatBskyConvoDefsMessageInput$Outbound;
}

export function chatBskyConvoDefsMessageInputToJSON(
  chatBskyConvoDefsMessageInput: ChatBskyConvoDefsMessageInput,
): string {
  return JSON.stringify(
    ChatBskyConvoDefsMessageInput$outboundSchema.parse(
      chatBskyConvoDefsMessageInput,
    ),
  );
}

export function chatBskyConvoDefsMessageInputFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoDefsMessageInput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoDefsMessageInput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoDefsMessageInput' from JSON`,
  );
}
