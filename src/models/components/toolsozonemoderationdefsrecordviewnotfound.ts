/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneModerationDefsRecordViewNotFound = {
  uri: string;
};

/** @internal */
export const ToolsOzoneModerationDefsRecordViewNotFound$inboundSchema:
  z.ZodType<ToolsOzoneModerationDefsRecordViewNotFound, z.ZodTypeDef, unknown> =
    z.object({
      uri: z.string(),
    });

/** @internal */
export type ToolsOzoneModerationDefsRecordViewNotFound$Outbound = {
  uri: string;
};

/** @internal */
export const ToolsOzoneModerationDefsRecordViewNotFound$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsRecordViewNotFound$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationDefsRecordViewNotFound
  > = z.object({
    uri: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsRecordViewNotFound$ {
  /** @deprecated use `ToolsOzoneModerationDefsRecordViewNotFound$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsRecordViewNotFound$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsRecordViewNotFound$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsRecordViewNotFound$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsRecordViewNotFound$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsRecordViewNotFound$Outbound;
}

export function toolsOzoneModerationDefsRecordViewNotFoundToJSON(
  toolsOzoneModerationDefsRecordViewNotFound:
    ToolsOzoneModerationDefsRecordViewNotFound,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsRecordViewNotFound$outboundSchema.parse(
      toolsOzoneModerationDefsRecordViewNotFound,
    ),
  );
}

export function toolsOzoneModerationDefsRecordViewNotFoundFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsRecordViewNotFound,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsRecordViewNotFound$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsRecordViewNotFound' from JSON`,
  );
}
