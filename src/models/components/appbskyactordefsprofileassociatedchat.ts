/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const AllowIncoming = {
  All: "all",
  None: "none",
  Following: "following",
} as const;
export type AllowIncoming = ClosedEnum<typeof AllowIncoming>;

export type AppBskyActorDefsProfileAssociatedChat = {
  allowIncoming: AllowIncoming;
};

/** @internal */
export const AllowIncoming$inboundSchema: z.ZodNativeEnum<
  typeof AllowIncoming
> = z.nativeEnum(AllowIncoming);

/** @internal */
export const AllowIncoming$outboundSchema: z.ZodNativeEnum<
  typeof AllowIncoming
> = AllowIncoming$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AllowIncoming$ {
  /** @deprecated use `AllowIncoming$inboundSchema` instead. */
  export const inboundSchema = AllowIncoming$inboundSchema;
  /** @deprecated use `AllowIncoming$outboundSchema` instead. */
  export const outboundSchema = AllowIncoming$outboundSchema;
}

/** @internal */
export const AppBskyActorDefsProfileAssociatedChat$inboundSchema: z.ZodType<
  AppBskyActorDefsProfileAssociatedChat,
  z.ZodTypeDef,
  unknown
> = z.object({
  allowIncoming: AllowIncoming$inboundSchema,
});

/** @internal */
export type AppBskyActorDefsProfileAssociatedChat$Outbound = {
  allowIncoming: string;
};

/** @internal */
export const AppBskyActorDefsProfileAssociatedChat$outboundSchema: z.ZodType<
  AppBskyActorDefsProfileAssociatedChat$Outbound,
  z.ZodTypeDef,
  AppBskyActorDefsProfileAssociatedChat
> = z.object({
  allowIncoming: AllowIncoming$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorDefsProfileAssociatedChat$ {
  /** @deprecated use `AppBskyActorDefsProfileAssociatedChat$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorDefsProfileAssociatedChat$inboundSchema;
  /** @deprecated use `AppBskyActorDefsProfileAssociatedChat$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorDefsProfileAssociatedChat$outboundSchema;
  /** @deprecated use `AppBskyActorDefsProfileAssociatedChat$Outbound` instead. */
  export type Outbound = AppBskyActorDefsProfileAssociatedChat$Outbound;
}

export function appBskyActorDefsProfileAssociatedChatToJSON(
  appBskyActorDefsProfileAssociatedChat: AppBskyActorDefsProfileAssociatedChat,
): string {
  return JSON.stringify(
    AppBskyActorDefsProfileAssociatedChat$outboundSchema.parse(
      appBskyActorDefsProfileAssociatedChat,
    ),
  );
}

export function appBskyActorDefsProfileAssociatedChatFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyActorDefsProfileAssociatedChat, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyActorDefsProfileAssociatedChat$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyActorDefsProfileAssociatedChat' from JSON`,
  );
}
