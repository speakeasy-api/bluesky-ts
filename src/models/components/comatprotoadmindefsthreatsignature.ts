/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoAdminDefsThreatSignature = {
  property: string;
  value: string;
};

/** @internal */
export const ComAtprotoAdminDefsThreatSignature$inboundSchema: z.ZodType<
  ComAtprotoAdminDefsThreatSignature,
  z.ZodTypeDef,
  unknown
> = z.object({
  property: z.string(),
  value: z.string(),
});

/** @internal */
export type ComAtprotoAdminDefsThreatSignature$Outbound = {
  property: string;
  value: string;
};

/** @internal */
export const ComAtprotoAdminDefsThreatSignature$outboundSchema: z.ZodType<
  ComAtprotoAdminDefsThreatSignature$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminDefsThreatSignature
> = z.object({
  property: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDefsThreatSignature$ {
  /** @deprecated use `ComAtprotoAdminDefsThreatSignature$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminDefsThreatSignature$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDefsThreatSignature$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDefsThreatSignature$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDefsThreatSignature$Outbound` instead. */
  export type Outbound = ComAtprotoAdminDefsThreatSignature$Outbound;
}

export function comAtprotoAdminDefsThreatSignatureToJSON(
  comAtprotoAdminDefsThreatSignature: ComAtprotoAdminDefsThreatSignature,
): string {
  return JSON.stringify(
    ComAtprotoAdminDefsThreatSignature$outboundSchema.parse(
      comAtprotoAdminDefsThreatSignature,
    ),
  );
}

export function comAtprotoAdminDefsThreatSignatureFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoAdminDefsThreatSignature, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoAdminDefsThreatSignature$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoAdminDefsThreatSignature' from JSON`,
  );
}
