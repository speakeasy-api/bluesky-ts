/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyActorDefsProfileViewDetailed,
  AppBskyActorDefsProfileViewDetailed$inboundSchema,
  AppBskyActorDefsProfileViewDetailed$Outbound,
  AppBskyActorDefsProfileViewDetailed$outboundSchema,
} from "./appbskyactordefsprofileviewdetailed.js";

export const ToolsOzoneTeamDefsMemberRole = {
  NumberRoleAdmin: "#roleAdmin",
  NumberRoleModerator: "#roleModerator",
  NumberRoleTriage: "#roleTriage",
} as const;
export type ToolsOzoneTeamDefsMemberRole = ClosedEnum<
  typeof ToolsOzoneTeamDefsMemberRole
>;

export type ToolsOzoneTeamDefsMember = {
  did: string;
  disabled?: boolean | undefined;
  profile?: AppBskyActorDefsProfileViewDetailed | undefined;
  createdAt?: Date | undefined;
  updatedAt?: Date | undefined;
  lastUpdatedBy?: string | undefined;
  role: ToolsOzoneTeamDefsMemberRole;
};

/** @internal */
export const ToolsOzoneTeamDefsMemberRole$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamDefsMemberRole
> = z.nativeEnum(ToolsOzoneTeamDefsMemberRole);

/** @internal */
export const ToolsOzoneTeamDefsMemberRole$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamDefsMemberRole
> = ToolsOzoneTeamDefsMemberRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDefsMemberRole$ {
  /** @deprecated use `ToolsOzoneTeamDefsMemberRole$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamDefsMemberRole$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDefsMemberRole$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamDefsMemberRole$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamDefsMember$inboundSchema: z.ZodType<
  ToolsOzoneTeamDefsMember,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  disabled: z.boolean().optional(),
  profile: AppBskyActorDefsProfileViewDetailed$inboundSchema.optional(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  lastUpdatedBy: z.string().optional(),
  role: ToolsOzoneTeamDefsMemberRole$inboundSchema,
});

/** @internal */
export type ToolsOzoneTeamDefsMember$Outbound = {
  did: string;
  disabled?: boolean | undefined;
  profile?: AppBskyActorDefsProfileViewDetailed$Outbound | undefined;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
  lastUpdatedBy?: string | undefined;
  role: string;
};

/** @internal */
export const ToolsOzoneTeamDefsMember$outboundSchema: z.ZodType<
  ToolsOzoneTeamDefsMember$Outbound,
  z.ZodTypeDef,
  ToolsOzoneTeamDefsMember
> = z.object({
  did: z.string(),
  disabled: z.boolean().optional(),
  profile: AppBskyActorDefsProfileViewDetailed$outboundSchema.optional(),
  createdAt: z.date().transform(v => v.toISOString()).optional(),
  updatedAt: z.date().transform(v => v.toISOString()).optional(),
  lastUpdatedBy: z.string().optional(),
  role: ToolsOzoneTeamDefsMemberRole$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDefsMember$ {
  /** @deprecated use `ToolsOzoneTeamDefsMember$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamDefsMember$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDefsMember$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamDefsMember$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamDefsMember$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamDefsMember$Outbound;
}

export function toolsOzoneTeamDefsMemberToJSON(
  toolsOzoneTeamDefsMember: ToolsOzoneTeamDefsMember,
): string {
  return JSON.stringify(
    ToolsOzoneTeamDefsMember$outboundSchema.parse(toolsOzoneTeamDefsMember),
  );
}

export function toolsOzoneTeamDefsMemberFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneTeamDefsMember, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneTeamDefsMember$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneTeamDefsMember' from JSON`,
  );
}
