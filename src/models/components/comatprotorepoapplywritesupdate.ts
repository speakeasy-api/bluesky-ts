/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Operation which updates an existing record.
 */
export type ComAtprotoRepoApplyWritesUpdate = {
  collection: string;
  rkey: string;
  value?: any | undefined;
};

/** @internal */
export const ComAtprotoRepoApplyWritesUpdate$inboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  collection: z.string(),
  rkey: z.string(),
  value: z.any().optional(),
});

/** @internal */
export type ComAtprotoRepoApplyWritesUpdate$Outbound = {
  collection: string;
  rkey: string;
  value?: any | undefined;
};

/** @internal */
export const ComAtprotoRepoApplyWritesUpdate$outboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesUpdate$Outbound,
  z.ZodTypeDef,
  ComAtprotoRepoApplyWritesUpdate
> = z.object({
  collection: z.string(),
  rkey: z.string(),
  value: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesUpdate$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdate$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoRepoApplyWritesUpdate$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdate$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoRepoApplyWritesUpdate$outboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesUpdate$Outbound` instead. */
  export type Outbound = ComAtprotoRepoApplyWritesUpdate$Outbound;
}

export function comAtprotoRepoApplyWritesUpdateToJSON(
  comAtprotoRepoApplyWritesUpdate: ComAtprotoRepoApplyWritesUpdate,
): string {
  return JSON.stringify(
    ComAtprotoRepoApplyWritesUpdate$outboundSchema.parse(
      comAtprotoRepoApplyWritesUpdate,
    ),
  );
}

export function comAtprotoRepoApplyWritesUpdateFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoRepoApplyWritesUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoRepoApplyWritesUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoRepoApplyWritesUpdate' from JSON`,
  );
}
