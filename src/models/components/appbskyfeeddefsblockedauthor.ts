/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyActorDefsViewerState,
  AppBskyActorDefsViewerState$inboundSchema,
  AppBskyActorDefsViewerState$Outbound,
  AppBskyActorDefsViewerState$outboundSchema,
} from "./appbskyactordefsviewerstate.js";

export type AppBskyFeedDefsBlockedAuthor = {
  did: string;
  /**
   * Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests.
   */
  viewer?: AppBskyActorDefsViewerState | undefined;
};

/** @internal */
export const AppBskyFeedDefsBlockedAuthor$inboundSchema: z.ZodType<
  AppBskyFeedDefsBlockedAuthor,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  viewer: AppBskyActorDefsViewerState$inboundSchema.optional(),
});

/** @internal */
export type AppBskyFeedDefsBlockedAuthor$Outbound = {
  did: string;
  viewer?: AppBskyActorDefsViewerState$Outbound | undefined;
};

/** @internal */
export const AppBskyFeedDefsBlockedAuthor$outboundSchema: z.ZodType<
  AppBskyFeedDefsBlockedAuthor$Outbound,
  z.ZodTypeDef,
  AppBskyFeedDefsBlockedAuthor
> = z.object({
  did: z.string(),
  viewer: AppBskyActorDefsViewerState$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedDefsBlockedAuthor$ {
  /** @deprecated use `AppBskyFeedDefsBlockedAuthor$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedDefsBlockedAuthor$inboundSchema;
  /** @deprecated use `AppBskyFeedDefsBlockedAuthor$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedDefsBlockedAuthor$outboundSchema;
  /** @deprecated use `AppBskyFeedDefsBlockedAuthor$Outbound` instead. */
  export type Outbound = AppBskyFeedDefsBlockedAuthor$Outbound;
}

export function appBskyFeedDefsBlockedAuthorToJSON(
  appBskyFeedDefsBlockedAuthor: AppBskyFeedDefsBlockedAuthor,
): string {
  return JSON.stringify(
    AppBskyFeedDefsBlockedAuthor$outboundSchema.parse(
      appBskyFeedDefsBlockedAuthor,
    ),
  );
}

export function appBskyFeedDefsBlockedAuthorFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedDefsBlockedAuthor, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedDefsBlockedAuthor$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedDefsBlockedAuthor' from JSON`,
  );
}
