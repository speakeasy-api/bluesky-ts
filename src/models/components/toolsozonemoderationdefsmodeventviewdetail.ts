/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ToolsOzoneModerationDefsAccountEvent,
  ToolsOzoneModerationDefsAccountEvent$inboundSchema,
  ToolsOzoneModerationDefsAccountEvent$Outbound,
  ToolsOzoneModerationDefsAccountEvent$outboundSchema,
} from "./toolsozonemoderationdefsaccountevent.js";
import {
  ToolsOzoneModerationDefsBlobView,
  ToolsOzoneModerationDefsBlobView$inboundSchema,
  ToolsOzoneModerationDefsBlobView$Outbound,
  ToolsOzoneModerationDefsBlobView$outboundSchema,
} from "./toolsozonemoderationdefsblobview.js";
import {
  ToolsOzoneModerationDefsIdentityEvent,
  ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
  ToolsOzoneModerationDefsIdentityEvent$Outbound,
  ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
} from "./toolsozonemoderationdefsidentityevent.js";
import {
  ToolsOzoneModerationDefsModEventAcknowledge,
  ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
  ToolsOzoneModerationDefsModEventAcknowledge$Outbound,
  ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
} from "./toolsozonemoderationdefsmodeventacknowledge.js";
import {
  ToolsOzoneModerationDefsModEventComment,
  ToolsOzoneModerationDefsModEventComment$inboundSchema,
  ToolsOzoneModerationDefsModEventComment$Outbound,
  ToolsOzoneModerationDefsModEventComment$outboundSchema,
} from "./toolsozonemoderationdefsmodeventcomment.js";
import {
  ToolsOzoneModerationDefsModEventDivert,
  ToolsOzoneModerationDefsModEventDivert$inboundSchema,
  ToolsOzoneModerationDefsModEventDivert$Outbound,
  ToolsOzoneModerationDefsModEventDivert$outboundSchema,
} from "./toolsozonemoderationdefsmodeventdivert.js";
import {
  ToolsOzoneModerationDefsModEventEmail,
  ToolsOzoneModerationDefsModEventEmail$inboundSchema,
  ToolsOzoneModerationDefsModEventEmail$Outbound,
  ToolsOzoneModerationDefsModEventEmail$outboundSchema,
} from "./toolsozonemoderationdefsmodeventemail.js";
import {
  ToolsOzoneModerationDefsModEventEscalate,
  ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
  ToolsOzoneModerationDefsModEventEscalate$Outbound,
  ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
} from "./toolsozonemoderationdefsmodeventescalate.js";
import {
  ToolsOzoneModerationDefsModEventLabel,
  ToolsOzoneModerationDefsModEventLabel$inboundSchema,
  ToolsOzoneModerationDefsModEventLabel$Outbound,
  ToolsOzoneModerationDefsModEventLabel$outboundSchema,
} from "./toolsozonemoderationdefsmodeventlabel.js";
import {
  ToolsOzoneModerationDefsModEventMute,
  ToolsOzoneModerationDefsModEventMute$inboundSchema,
  ToolsOzoneModerationDefsModEventMute$Outbound,
  ToolsOzoneModerationDefsModEventMute$outboundSchema,
} from "./toolsozonemoderationdefsmodeventmute.js";
import {
  ToolsOzoneModerationDefsModEventMuteReporter,
  ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
  ToolsOzoneModerationDefsModEventMuteReporter$Outbound,
  ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
} from "./toolsozonemoderationdefsmodeventmutereporter.js";
import {
  ToolsOzoneModerationDefsModEventReport,
  ToolsOzoneModerationDefsModEventReport$inboundSchema,
  ToolsOzoneModerationDefsModEventReport$Outbound,
  ToolsOzoneModerationDefsModEventReport$outboundSchema,
} from "./toolsozonemoderationdefsmodeventreport.js";
import {
  ToolsOzoneModerationDefsModEventResolveAppeal,
  ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
  ToolsOzoneModerationDefsModEventResolveAppeal$Outbound,
  ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
} from "./toolsozonemoderationdefsmodeventresolveappeal.js";
import {
  ToolsOzoneModerationDefsModEventReverseTakedown,
  ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
  ToolsOzoneModerationDefsModEventReverseTakedown$Outbound,
  ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
} from "./toolsozonemoderationdefsmodeventreversetakedown.js";
import {
  ToolsOzoneModerationDefsModEventTag,
  ToolsOzoneModerationDefsModEventTag$inboundSchema,
  ToolsOzoneModerationDefsModEventTag$Outbound,
  ToolsOzoneModerationDefsModEventTag$outboundSchema,
} from "./toolsozonemoderationdefsmodeventtag.js";
import {
  ToolsOzoneModerationDefsModEventTakedown,
  ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
  ToolsOzoneModerationDefsModEventTakedown$Outbound,
  ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
} from "./toolsozonemoderationdefsmodeventtakedown.js";
import {
  ToolsOzoneModerationDefsModEventUnmute,
  ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
  ToolsOzoneModerationDefsModEventUnmute$Outbound,
  ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
} from "./toolsozonemoderationdefsmodeventunmute.js";
import {
  ToolsOzoneModerationDefsModEventUnmuteReporter,
  ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
  ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound,
  ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
} from "./toolsozonemoderationdefsmodeventunmutereporter.js";
import {
  ToolsOzoneModerationDefsRecordEvent,
  ToolsOzoneModerationDefsRecordEvent$inboundSchema,
  ToolsOzoneModerationDefsRecordEvent$Outbound,
  ToolsOzoneModerationDefsRecordEvent$outboundSchema,
} from "./toolsozonemoderationdefsrecordevent.js";
import {
  ToolsOzoneModerationDefsRecordView,
  ToolsOzoneModerationDefsRecordView$inboundSchema,
  ToolsOzoneModerationDefsRecordView$Outbound,
  ToolsOzoneModerationDefsRecordView$outboundSchema,
} from "./toolsozonemoderationdefsrecordview.js";
import {
  ToolsOzoneModerationDefsRecordViewNotFound,
  ToolsOzoneModerationDefsRecordViewNotFound$inboundSchema,
  ToolsOzoneModerationDefsRecordViewNotFound$Outbound,
  ToolsOzoneModerationDefsRecordViewNotFound$outboundSchema,
} from "./toolsozonemoderationdefsrecordviewnotfound.js";
import {
  ToolsOzoneModerationDefsRepoView,
  ToolsOzoneModerationDefsRepoView$inboundSchema,
  ToolsOzoneModerationDefsRepoView$Outbound,
  ToolsOzoneModerationDefsRepoView$outboundSchema,
} from "./toolsozonemoderationdefsrepoview.js";
import {
  ToolsOzoneModerationDefsRepoViewNotFound,
  ToolsOzoneModerationDefsRepoViewNotFound$inboundSchema,
  ToolsOzoneModerationDefsRepoViewNotFound$Outbound,
  ToolsOzoneModerationDefsRepoViewNotFound$outboundSchema,
} from "./toolsozonemoderationdefsrepoviewnotfound.js";

export type ToolsOzoneModerationDefsModEventViewDetailEvent =
  | ToolsOzoneModerationDefsModEventReverseTakedown
  | ToolsOzoneModerationDefsModEventAcknowledge
  | ToolsOzoneModerationDefsModEventEscalate
  | ToolsOzoneModerationDefsModEventUnmute
  | ToolsOzoneModerationDefsModEventUnmuteReporter
  | ToolsOzoneModerationDefsModEventResolveAppeal
  | ToolsOzoneModerationDefsModEventDivert
  | ToolsOzoneModerationDefsModEventComment
  | ToolsOzoneModerationDefsModEventMute
  | ToolsOzoneModerationDefsModEventMuteReporter
  | ToolsOzoneModerationDefsModEventTakedown
  | ToolsOzoneModerationDefsModEventReport
  | ToolsOzoneModerationDefsModEventLabel
  | ToolsOzoneModerationDefsModEventEmail
  | ToolsOzoneModerationDefsModEventTag
  | ToolsOzoneModerationDefsAccountEvent
  | ToolsOzoneModerationDefsRecordEvent
  | ToolsOzoneModerationDefsIdentityEvent;

export type ToolsOzoneModerationDefsModEventViewDetailSubject =
  | ToolsOzoneModerationDefsRepoViewNotFound
  | ToolsOzoneModerationDefsRecordViewNotFound
  | ToolsOzoneModerationDefsRecordView
  | ToolsOzoneModerationDefsRepoView;

export type ToolsOzoneModerationDefsModEventViewDetail = {
  id: number;
  event:
    | ToolsOzoneModerationDefsModEventReverseTakedown
    | ToolsOzoneModerationDefsModEventAcknowledge
    | ToolsOzoneModerationDefsModEventEscalate
    | ToolsOzoneModerationDefsModEventUnmute
    | ToolsOzoneModerationDefsModEventUnmuteReporter
    | ToolsOzoneModerationDefsModEventResolveAppeal
    | ToolsOzoneModerationDefsModEventDivert
    | ToolsOzoneModerationDefsModEventComment
    | ToolsOzoneModerationDefsModEventMute
    | ToolsOzoneModerationDefsModEventMuteReporter
    | ToolsOzoneModerationDefsModEventTakedown
    | ToolsOzoneModerationDefsModEventReport
    | ToolsOzoneModerationDefsModEventLabel
    | ToolsOzoneModerationDefsModEventEmail
    | ToolsOzoneModerationDefsModEventTag
    | ToolsOzoneModerationDefsAccountEvent
    | ToolsOzoneModerationDefsRecordEvent
    | ToolsOzoneModerationDefsIdentityEvent;
  subject:
    | ToolsOzoneModerationDefsRepoViewNotFound
    | ToolsOzoneModerationDefsRecordViewNotFound
    | ToolsOzoneModerationDefsRecordView
    | ToolsOzoneModerationDefsRepoView;
  subjectBlobs: Array<ToolsOzoneModerationDefsBlobView>;
  createdBy: string;
  createdAt: Date;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventViewDetailEvent$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewDetailEvent,
    z.ZodTypeDef,
    unknown
  > = z.union([
    ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
    ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
    ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
    ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
    ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
    ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
    ToolsOzoneModerationDefsModEventDivert$inboundSchema,
    ToolsOzoneModerationDefsModEventComment$inboundSchema,
    ToolsOzoneModerationDefsModEventMute$inboundSchema,
    ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
    ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
    ToolsOzoneModerationDefsModEventReport$inboundSchema,
    ToolsOzoneModerationDefsModEventLabel$inboundSchema,
    ToolsOzoneModerationDefsModEventEmail$inboundSchema,
    ToolsOzoneModerationDefsModEventTag$inboundSchema,
    ToolsOzoneModerationDefsAccountEvent$inboundSchema,
    ToolsOzoneModerationDefsRecordEvent$inboundSchema,
    ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
  ]);

/** @internal */
export type ToolsOzoneModerationDefsModEventViewDetailEvent$Outbound =
  | ToolsOzoneModerationDefsModEventReverseTakedown$Outbound
  | ToolsOzoneModerationDefsModEventAcknowledge$Outbound
  | ToolsOzoneModerationDefsModEventEscalate$Outbound
  | ToolsOzoneModerationDefsModEventUnmute$Outbound
  | ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound
  | ToolsOzoneModerationDefsModEventResolveAppeal$Outbound
  | ToolsOzoneModerationDefsModEventDivert$Outbound
  | ToolsOzoneModerationDefsModEventComment$Outbound
  | ToolsOzoneModerationDefsModEventMute$Outbound
  | ToolsOzoneModerationDefsModEventMuteReporter$Outbound
  | ToolsOzoneModerationDefsModEventTakedown$Outbound
  | ToolsOzoneModerationDefsModEventReport$Outbound
  | ToolsOzoneModerationDefsModEventLabel$Outbound
  | ToolsOzoneModerationDefsModEventEmail$Outbound
  | ToolsOzoneModerationDefsModEventTag$Outbound
  | ToolsOzoneModerationDefsAccountEvent$Outbound
  | ToolsOzoneModerationDefsRecordEvent$Outbound
  | ToolsOzoneModerationDefsIdentityEvent$Outbound;

/** @internal */
export const ToolsOzoneModerationDefsModEventViewDetailEvent$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewDetailEvent$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationDefsModEventViewDetailEvent
  > = z.union([
    ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
    ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
    ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
    ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
    ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
    ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
    ToolsOzoneModerationDefsModEventDivert$outboundSchema,
    ToolsOzoneModerationDefsModEventComment$outboundSchema,
    ToolsOzoneModerationDefsModEventMute$outboundSchema,
    ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
    ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
    ToolsOzoneModerationDefsModEventReport$outboundSchema,
    ToolsOzoneModerationDefsModEventLabel$outboundSchema,
    ToolsOzoneModerationDefsModEventEmail$outboundSchema,
    ToolsOzoneModerationDefsModEventTag$outboundSchema,
    ToolsOzoneModerationDefsAccountEvent$outboundSchema,
    ToolsOzoneModerationDefsRecordEvent$outboundSchema,
    ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventViewDetailEvent$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetailEvent$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventViewDetailEvent$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetailEvent$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventViewDetailEvent$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetailEvent$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationDefsModEventViewDetailEvent$Outbound;
}

export function toolsOzoneModerationDefsModEventViewDetailEventToJSON(
  toolsOzoneModerationDefsModEventViewDetailEvent:
    ToolsOzoneModerationDefsModEventViewDetailEvent,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventViewDetailEvent$outboundSchema.parse(
      toolsOzoneModerationDefsModEventViewDetailEvent,
    ),
  );
}

export function toolsOzoneModerationDefsModEventViewDetailEventFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsModEventViewDetailEvent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventViewDetailEvent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsModEventViewDetailEvent' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneModerationDefsModEventViewDetailSubject$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewDetailSubject,
    z.ZodTypeDef,
    unknown
  > = z.union([
    ToolsOzoneModerationDefsRepoViewNotFound$inboundSchema,
    ToolsOzoneModerationDefsRecordViewNotFound$inboundSchema,
    ToolsOzoneModerationDefsRecordView$inboundSchema,
    ToolsOzoneModerationDefsRepoView$inboundSchema,
  ]);

/** @internal */
export type ToolsOzoneModerationDefsModEventViewDetailSubject$Outbound =
  | ToolsOzoneModerationDefsRepoViewNotFound$Outbound
  | ToolsOzoneModerationDefsRecordViewNotFound$Outbound
  | ToolsOzoneModerationDefsRecordView$Outbound
  | ToolsOzoneModerationDefsRepoView$Outbound;

/** @internal */
export const ToolsOzoneModerationDefsModEventViewDetailSubject$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewDetailSubject$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationDefsModEventViewDetailSubject
  > = z.union([
    ToolsOzoneModerationDefsRepoViewNotFound$outboundSchema,
    ToolsOzoneModerationDefsRecordViewNotFound$outboundSchema,
    ToolsOzoneModerationDefsRecordView$outboundSchema,
    ToolsOzoneModerationDefsRepoView$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventViewDetailSubject$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetailSubject$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventViewDetailSubject$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetailSubject$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventViewDetailSubject$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetailSubject$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationDefsModEventViewDetailSubject$Outbound;
}

export function toolsOzoneModerationDefsModEventViewDetailSubjectToJSON(
  toolsOzoneModerationDefsModEventViewDetailSubject:
    ToolsOzoneModerationDefsModEventViewDetailSubject,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventViewDetailSubject$outboundSchema.parse(
      toolsOzoneModerationDefsModEventViewDetailSubject,
    ),
  );
}

export function toolsOzoneModerationDefsModEventViewDetailSubjectFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsModEventViewDetailSubject,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventViewDetailSubject$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsModEventViewDetailSubject' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneModerationDefsModEventViewDetail$inboundSchema:
  z.ZodType<ToolsOzoneModerationDefsModEventViewDetail, z.ZodTypeDef, unknown> =
    z.object({
      id: z.number().int(),
      event: z.union([
        ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
        ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
        ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
        ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
        ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
        ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
        ToolsOzoneModerationDefsModEventDivert$inboundSchema,
        ToolsOzoneModerationDefsModEventComment$inboundSchema,
        ToolsOzoneModerationDefsModEventMute$inboundSchema,
        ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
        ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
        ToolsOzoneModerationDefsModEventReport$inboundSchema,
        ToolsOzoneModerationDefsModEventLabel$inboundSchema,
        ToolsOzoneModerationDefsModEventEmail$inboundSchema,
        ToolsOzoneModerationDefsModEventTag$inboundSchema,
        ToolsOzoneModerationDefsAccountEvent$inboundSchema,
        ToolsOzoneModerationDefsRecordEvent$inboundSchema,
        ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
      ]),
      subject: z.union([
        ToolsOzoneModerationDefsRepoViewNotFound$inboundSchema,
        ToolsOzoneModerationDefsRecordViewNotFound$inboundSchema,
        ToolsOzoneModerationDefsRecordView$inboundSchema,
        ToolsOzoneModerationDefsRepoView$inboundSchema,
      ]),
      subjectBlobs: z.array(ToolsOzoneModerationDefsBlobView$inboundSchema),
      createdBy: z.string(),
      createdAt: z.string().datetime({ offset: true }).transform(v =>
        new Date(v)
      ),
    });

/** @internal */
export type ToolsOzoneModerationDefsModEventViewDetail$Outbound = {
  id: number;
  event:
    | ToolsOzoneModerationDefsModEventReverseTakedown$Outbound
    | ToolsOzoneModerationDefsModEventAcknowledge$Outbound
    | ToolsOzoneModerationDefsModEventEscalate$Outbound
    | ToolsOzoneModerationDefsModEventUnmute$Outbound
    | ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound
    | ToolsOzoneModerationDefsModEventResolveAppeal$Outbound
    | ToolsOzoneModerationDefsModEventDivert$Outbound
    | ToolsOzoneModerationDefsModEventComment$Outbound
    | ToolsOzoneModerationDefsModEventMute$Outbound
    | ToolsOzoneModerationDefsModEventMuteReporter$Outbound
    | ToolsOzoneModerationDefsModEventTakedown$Outbound
    | ToolsOzoneModerationDefsModEventReport$Outbound
    | ToolsOzoneModerationDefsModEventLabel$Outbound
    | ToolsOzoneModerationDefsModEventEmail$Outbound
    | ToolsOzoneModerationDefsModEventTag$Outbound
    | ToolsOzoneModerationDefsAccountEvent$Outbound
    | ToolsOzoneModerationDefsRecordEvent$Outbound
    | ToolsOzoneModerationDefsIdentityEvent$Outbound;
  subject:
    | ToolsOzoneModerationDefsRepoViewNotFound$Outbound
    | ToolsOzoneModerationDefsRecordViewNotFound$Outbound
    | ToolsOzoneModerationDefsRecordView$Outbound
    | ToolsOzoneModerationDefsRepoView$Outbound;
  subjectBlobs: Array<ToolsOzoneModerationDefsBlobView$Outbound>;
  createdBy: string;
  createdAt: string;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventViewDetail$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationDefsModEventViewDetail$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationDefsModEventViewDetail
  > = z.object({
    id: z.number().int(),
    event: z.union([
      ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
      ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
      ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
      ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
      ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
      ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
      ToolsOzoneModerationDefsModEventDivert$outboundSchema,
      ToolsOzoneModerationDefsModEventComment$outboundSchema,
      ToolsOzoneModerationDefsModEventMute$outboundSchema,
      ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
      ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
      ToolsOzoneModerationDefsModEventReport$outboundSchema,
      ToolsOzoneModerationDefsModEventLabel$outboundSchema,
      ToolsOzoneModerationDefsModEventEmail$outboundSchema,
      ToolsOzoneModerationDefsModEventTag$outboundSchema,
      ToolsOzoneModerationDefsAccountEvent$outboundSchema,
      ToolsOzoneModerationDefsRecordEvent$outboundSchema,
      ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
    ]),
    subject: z.union([
      ToolsOzoneModerationDefsRepoViewNotFound$outboundSchema,
      ToolsOzoneModerationDefsRecordViewNotFound$outboundSchema,
      ToolsOzoneModerationDefsRecordView$outboundSchema,
      ToolsOzoneModerationDefsRepoView$outboundSchema,
    ]),
    subjectBlobs: z.array(ToolsOzoneModerationDefsBlobView$outboundSchema),
    createdBy: z.string(),
    createdAt: z.date().transform(v => v.toISOString()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventViewDetail$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetail$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventViewDetail$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetail$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventViewDetail$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventViewDetail$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventViewDetail$Outbound;
}

export function toolsOzoneModerationDefsModEventViewDetailToJSON(
  toolsOzoneModerationDefsModEventViewDetail:
    ToolsOzoneModerationDefsModEventViewDetail,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventViewDetail$outboundSchema.parse(
      toolsOzoneModerationDefsModEventViewDetail,
    ),
  );
}

export function toolsOzoneModerationDefsModEventViewDetailFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsModEventViewDetail,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventViewDetail$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsModEventViewDetail' from JSON`,
  );
}
