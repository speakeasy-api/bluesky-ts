/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneServerGetConfigServiceConfig = {
  url?: string | undefined;
};

/** @internal */
export const ToolsOzoneServerGetConfigServiceConfig$inboundSchema: z.ZodType<
  ToolsOzoneServerGetConfigServiceConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string().optional(),
});

/** @internal */
export type ToolsOzoneServerGetConfigServiceConfig$Outbound = {
  url?: string | undefined;
};

/** @internal */
export const ToolsOzoneServerGetConfigServiceConfig$outboundSchema: z.ZodType<
  ToolsOzoneServerGetConfigServiceConfig$Outbound,
  z.ZodTypeDef,
  ToolsOzoneServerGetConfigServiceConfig
> = z.object({
  url: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneServerGetConfigServiceConfig$ {
  /** @deprecated use `ToolsOzoneServerGetConfigServiceConfig$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneServerGetConfigServiceConfig$inboundSchema;
  /** @deprecated use `ToolsOzoneServerGetConfigServiceConfig$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneServerGetConfigServiceConfig$outboundSchema;
  /** @deprecated use `ToolsOzoneServerGetConfigServiceConfig$Outbound` instead. */
  export type Outbound = ToolsOzoneServerGetConfigServiceConfig$Outbound;
}

export function toolsOzoneServerGetConfigServiceConfigToJSON(
  toolsOzoneServerGetConfigServiceConfig:
    ToolsOzoneServerGetConfigServiceConfig,
): string {
  return JSON.stringify(
    ToolsOzoneServerGetConfigServiceConfig$outboundSchema.parse(
      toolsOzoneServerGetConfigServiceConfig,
    ),
  );
}

export function toolsOzoneServerGetConfigServiceConfigFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneServerGetConfigServiceConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneServerGetConfigServiceConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneServerGetConfigServiceConfig' from JSON`,
  );
}
