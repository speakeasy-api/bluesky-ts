/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyEmbedRecordViewDetached = {
  uri: string;
  detached?: boolean | undefined;
};

/** @internal */
export const AppBskyEmbedRecordViewDetached$inboundSchema: z.ZodType<
  AppBskyEmbedRecordViewDetached,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  detached: z.boolean().default(true),
});

/** @internal */
export type AppBskyEmbedRecordViewDetached$Outbound = {
  uri: string;
  detached: boolean;
};

/** @internal */
export const AppBskyEmbedRecordViewDetached$outboundSchema: z.ZodType<
  AppBskyEmbedRecordViewDetached$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedRecordViewDetached
> = z.object({
  uri: z.string(),
  detached: z.boolean().default(true),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedRecordViewDetached$ {
  /** @deprecated use `AppBskyEmbedRecordViewDetached$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedRecordViewDetached$inboundSchema;
  /** @deprecated use `AppBskyEmbedRecordViewDetached$outboundSchema` instead. */
  export const outboundSchema = AppBskyEmbedRecordViewDetached$outboundSchema;
  /** @deprecated use `AppBskyEmbedRecordViewDetached$Outbound` instead. */
  export type Outbound = AppBskyEmbedRecordViewDetached$Outbound;
}

export function appBskyEmbedRecordViewDetachedToJSON(
  appBskyEmbedRecordViewDetached: AppBskyEmbedRecordViewDetached,
): string {
  return JSON.stringify(
    AppBskyEmbedRecordViewDetached$outboundSchema.parse(
      appBskyEmbedRecordViewDetached,
    ),
  );
}

export function appBskyEmbedRecordViewDetachedFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedRecordViewDetached, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedRecordViewDetached$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedRecordViewDetached' from JSON`,
  );
}
