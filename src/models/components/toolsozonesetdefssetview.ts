/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSetDefsSetView = {
  name: string;
  description?: string | undefined;
  setSize: number;
  createdAt: Date;
  updatedAt: Date;
};

/** @internal */
export const ToolsOzoneSetDefsSetView$inboundSchema: z.ZodType<
  ToolsOzoneSetDefsSetView,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  setSize: z.number().int(),
  createdAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  updatedAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
});

/** @internal */
export type ToolsOzoneSetDefsSetView$Outbound = {
  name: string;
  description?: string | undefined;
  setSize: number;
  createdAt: string;
  updatedAt: string;
};

/** @internal */
export const ToolsOzoneSetDefsSetView$outboundSchema: z.ZodType<
  ToolsOzoneSetDefsSetView$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetDefsSetView
> = z.object({
  name: z.string(),
  description: z.string().optional(),
  setSize: z.number().int(),
  createdAt: z.date().transform(v => v.toISOString()),
  updatedAt: z.date().transform(v => v.toISOString()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDefsSetView$ {
  /** @deprecated use `ToolsOzoneSetDefsSetView$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetDefsSetView$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDefsSetView$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetDefsSetView$outboundSchema;
  /** @deprecated use `ToolsOzoneSetDefsSetView$Outbound` instead. */
  export type Outbound = ToolsOzoneSetDefsSetView$Outbound;
}

export function toolsOzoneSetDefsSetViewToJSON(
  toolsOzoneSetDefsSetView: ToolsOzoneSetDefsSetView,
): string {
  return JSON.stringify(
    ToolsOzoneSetDefsSetView$outboundSchema.parse(toolsOzoneSetDefsSetView),
  );
}

export function toolsOzoneSetDefsSetViewFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetDefsSetView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetDefsSetView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetDefsSetView' from JSON`,
  );
}
