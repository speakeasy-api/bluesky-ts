/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyEmbedDefsAspectRatio,
  AppBskyEmbedDefsAspectRatio$inboundSchema,
  AppBskyEmbedDefsAspectRatio$Outbound,
  AppBskyEmbedDefsAspectRatio$outboundSchema,
} from "./appbskyembeddefsaspectratio.js";

export type AppBskyEmbedVideoView = {
  cid: string;
  playlist: string;
  thumbnail?: string | undefined;
  alt?: string | undefined;
  /**
   * width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.
   */
  aspectRatio?: AppBskyEmbedDefsAspectRatio | undefined;
};

/** @internal */
export const AppBskyEmbedVideoView$inboundSchema: z.ZodType<
  AppBskyEmbedVideoView,
  z.ZodTypeDef,
  unknown
> = z.object({
  cid: z.string(),
  playlist: z.string(),
  thumbnail: z.string().optional(),
  alt: z.string().optional(),
  aspectRatio: AppBskyEmbedDefsAspectRatio$inboundSchema.optional(),
});

/** @internal */
export type AppBskyEmbedVideoView$Outbound = {
  cid: string;
  playlist: string;
  thumbnail?: string | undefined;
  alt?: string | undefined;
  aspectRatio?: AppBskyEmbedDefsAspectRatio$Outbound | undefined;
};

/** @internal */
export const AppBskyEmbedVideoView$outboundSchema: z.ZodType<
  AppBskyEmbedVideoView$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedVideoView
> = z.object({
  cid: z.string(),
  playlist: z.string(),
  thumbnail: z.string().optional(),
  alt: z.string().optional(),
  aspectRatio: AppBskyEmbedDefsAspectRatio$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedVideoView$ {
  /** @deprecated use `AppBskyEmbedVideoView$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedVideoView$inboundSchema;
  /** @deprecated use `AppBskyEmbedVideoView$outboundSchema` instead. */
  export const outboundSchema = AppBskyEmbedVideoView$outboundSchema;
  /** @deprecated use `AppBskyEmbedVideoView$Outbound` instead. */
  export type Outbound = AppBskyEmbedVideoView$Outbound;
}

export function appBskyEmbedVideoViewToJSON(
  appBskyEmbedVideoView: AppBskyEmbedVideoView,
): string {
  return JSON.stringify(
    AppBskyEmbedVideoView$outboundSchema.parse(appBskyEmbedVideoView),
  );
}

export function appBskyEmbedVideoViewFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedVideoView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedVideoView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedVideoView' from JSON`,
  );
}
