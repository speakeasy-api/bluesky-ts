/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoDefsLogBeginConvo = {
  rev: string;
  convoId: string;
};

/** @internal */
export const ChatBskyConvoDefsLogBeginConvo$inboundSchema: z.ZodType<
  ChatBskyConvoDefsLogBeginConvo,
  z.ZodTypeDef,
  unknown
> = z.object({
  rev: z.string(),
  convoId: z.string(),
});

/** @internal */
export type ChatBskyConvoDefsLogBeginConvo$Outbound = {
  rev: string;
  convoId: string;
};

/** @internal */
export const ChatBskyConvoDefsLogBeginConvo$outboundSchema: z.ZodType<
  ChatBskyConvoDefsLogBeginConvo$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoDefsLogBeginConvo
> = z.object({
  rev: z.string(),
  convoId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoDefsLogBeginConvo$ {
  /** @deprecated use `ChatBskyConvoDefsLogBeginConvo$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoDefsLogBeginConvo$inboundSchema;
  /** @deprecated use `ChatBskyConvoDefsLogBeginConvo$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoDefsLogBeginConvo$outboundSchema;
  /** @deprecated use `ChatBskyConvoDefsLogBeginConvo$Outbound` instead. */
  export type Outbound = ChatBskyConvoDefsLogBeginConvo$Outbound;
}

export function chatBskyConvoDefsLogBeginConvoToJSON(
  chatBskyConvoDefsLogBeginConvo: ChatBskyConvoDefsLogBeginConvo,
): string {
  return JSON.stringify(
    ChatBskyConvoDefsLogBeginConvo$outboundSchema.parse(
      chatBskyConvoDefsLogBeginConvo,
    ),
  );
}

export function chatBskyConvoDefsLogBeginConvoFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoDefsLogBeginConvo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoDefsLogBeginConvo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoDefsLogBeginConvo' from JSON`,
  );
}
