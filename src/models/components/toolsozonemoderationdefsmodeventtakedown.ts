/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Take down a subject permanently or temporarily
 */
export type ToolsOzoneModerationDefsModEventTakedown = {
  comment?: string | undefined;
  durationInHours?: number | undefined;
  /**
   * If true, all other reports on content authored by this account will be resolved (acknowledged).
   */
  acknowledgeAccountSubjects?: boolean | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventTakedown$inboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventTakedown,
  z.ZodTypeDef,
  unknown
> = z.object({
  comment: z.string().optional(),
  durationInHours: z.number().int().optional(),
  acknowledgeAccountSubjects: z.boolean().optional(),
});

/** @internal */
export type ToolsOzoneModerationDefsModEventTakedown$Outbound = {
  comment?: string | undefined;
  durationInHours?: number | undefined;
  acknowledgeAccountSubjects?: boolean | undefined;
};

/** @internal */
export const ToolsOzoneModerationDefsModEventTakedown$outboundSchema: z.ZodType<
  ToolsOzoneModerationDefsModEventTakedown$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationDefsModEventTakedown
> = z.object({
  comment: z.string().optional(),
  durationInHours: z.number().int().optional(),
  acknowledgeAccountSubjects: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationDefsModEventTakedown$ {
  /** @deprecated use `ToolsOzoneModerationDefsModEventTakedown$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationDefsModEventTakedown$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventTakedown$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationDefsModEventTakedown$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationDefsModEventTakedown$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationDefsModEventTakedown$Outbound;
}

export function toolsOzoneModerationDefsModEventTakedownToJSON(
  toolsOzoneModerationDefsModEventTakedown:
    ToolsOzoneModerationDefsModEventTakedown,
): string {
  return JSON.stringify(
    ToolsOzoneModerationDefsModEventTakedown$outboundSchema.parse(
      toolsOzoneModerationDefsModEventTakedown,
    ),
  );
}

export function toolsOzoneModerationDefsModEventTakedownFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationDefsModEventTakedown,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationDefsModEventTakedown$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationDefsModEventTakedown' from JSON`,
  );
}
