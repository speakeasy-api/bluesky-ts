/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyEmbedExternalView,
  AppBskyEmbedExternalView$inboundSchema,
  AppBskyEmbedExternalView$Outbound,
  AppBskyEmbedExternalView$outboundSchema,
} from "./appbskyembedexternalview.js";
import {
  AppBskyEmbedImagesView,
  AppBskyEmbedImagesView$inboundSchema,
  AppBskyEmbedImagesView$Outbound,
  AppBskyEmbedImagesView$outboundSchema,
} from "./appbskyembedimagesview.js";
import {
  AppBskyEmbedRecordView,
  AppBskyEmbedRecordView$inboundSchema,
  AppBskyEmbedRecordView$Outbound,
  AppBskyEmbedRecordView$outboundSchema,
} from "./appbskyembedrecordview.js";
import {
  AppBskyEmbedVideoView,
  AppBskyEmbedVideoView$inboundSchema,
  AppBskyEmbedVideoView$Outbound,
  AppBskyEmbedVideoView$outboundSchema,
} from "./appbskyembedvideoview.js";

export type Media =
  | AppBskyEmbedImagesView
  | AppBskyEmbedExternalView
  | AppBskyEmbedVideoView;

export type AppBskyEmbedRecordWithMediaView = {
  record: AppBskyEmbedRecordView;
  media:
    | AppBskyEmbedImagesView
    | AppBskyEmbedExternalView
    | AppBskyEmbedVideoView;
};

/** @internal */
export const Media$inboundSchema: z.ZodType<Media, z.ZodTypeDef, unknown> = z
  .union([
    AppBskyEmbedImagesView$inboundSchema,
    AppBskyEmbedExternalView$inboundSchema,
    AppBskyEmbedVideoView$inboundSchema,
  ]);

/** @internal */
export type Media$Outbound =
  | AppBskyEmbedImagesView$Outbound
  | AppBskyEmbedExternalView$Outbound
  | AppBskyEmbedVideoView$Outbound;

/** @internal */
export const Media$outboundSchema: z.ZodType<
  Media$Outbound,
  z.ZodTypeDef,
  Media
> = z.union([
  AppBskyEmbedImagesView$outboundSchema,
  AppBskyEmbedExternalView$outboundSchema,
  AppBskyEmbedVideoView$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Media$ {
  /** @deprecated use `Media$inboundSchema` instead. */
  export const inboundSchema = Media$inboundSchema;
  /** @deprecated use `Media$outboundSchema` instead. */
  export const outboundSchema = Media$outboundSchema;
  /** @deprecated use `Media$Outbound` instead. */
  export type Outbound = Media$Outbound;
}

export function mediaToJSON(media: Media): string {
  return JSON.stringify(Media$outboundSchema.parse(media));
}

export function mediaFromJSON(
  jsonString: string,
): SafeParseResult<Media, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Media$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Media' from JSON`,
  );
}

/** @internal */
export const AppBskyEmbedRecordWithMediaView$inboundSchema: z.ZodType<
  AppBskyEmbedRecordWithMediaView,
  z.ZodTypeDef,
  unknown
> = z.object({
  record: z.lazy(() => AppBskyEmbedRecordView$inboundSchema),
  media: z.union([
    AppBskyEmbedImagesView$inboundSchema,
    AppBskyEmbedExternalView$inboundSchema,
    AppBskyEmbedVideoView$inboundSchema,
  ]),
});

/** @internal */
export type AppBskyEmbedRecordWithMediaView$Outbound = {
  record: AppBskyEmbedRecordView$Outbound;
  media:
    | AppBskyEmbedImagesView$Outbound
    | AppBskyEmbedExternalView$Outbound
    | AppBskyEmbedVideoView$Outbound;
};

/** @internal */
export const AppBskyEmbedRecordWithMediaView$outboundSchema: z.ZodType<
  AppBskyEmbedRecordWithMediaView$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedRecordWithMediaView
> = z.object({
  record: z.lazy(() => AppBskyEmbedRecordView$outboundSchema),
  media: z.union([
    AppBskyEmbedImagesView$outboundSchema,
    AppBskyEmbedExternalView$outboundSchema,
    AppBskyEmbedVideoView$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedRecordWithMediaView$ {
  /** @deprecated use `AppBskyEmbedRecordWithMediaView$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedRecordWithMediaView$inboundSchema;
  /** @deprecated use `AppBskyEmbedRecordWithMediaView$outboundSchema` instead. */
  export const outboundSchema = AppBskyEmbedRecordWithMediaView$outboundSchema;
  /** @deprecated use `AppBskyEmbedRecordWithMediaView$Outbound` instead. */
  export type Outbound = AppBskyEmbedRecordWithMediaView$Outbound;
}

export function appBskyEmbedRecordWithMediaViewToJSON(
  appBskyEmbedRecordWithMediaView: AppBskyEmbedRecordWithMediaView,
): string {
  return JSON.stringify(
    AppBskyEmbedRecordWithMediaView$outboundSchema.parse(
      appBskyEmbedRecordWithMediaView,
    ),
  );
}

export function appBskyEmbedRecordWithMediaViewFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedRecordWithMediaView, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedRecordWithMediaView$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedRecordWithMediaView' from JSON`,
  );
}
