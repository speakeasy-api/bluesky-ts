/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ComAtprotoRepoStrongRef,
  ComAtprotoRepoStrongRef$inboundSchema,
  ComAtprotoRepoStrongRef$Outbound,
  ComAtprotoRepoStrongRef$outboundSchema,
} from "./comatprotorepostrongref.js";

export type AppBskyEmbedRecord = {
  record: ComAtprotoRepoStrongRef;
};

/** @internal */
export const AppBskyEmbedRecord$inboundSchema: z.ZodType<
  AppBskyEmbedRecord,
  z.ZodTypeDef,
  unknown
> = z.object({
  record: ComAtprotoRepoStrongRef$inboundSchema,
});

/** @internal */
export type AppBskyEmbedRecord$Outbound = {
  record: ComAtprotoRepoStrongRef$Outbound;
};

/** @internal */
export const AppBskyEmbedRecord$outboundSchema: z.ZodType<
  AppBskyEmbedRecord$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedRecord
> = z.object({
  record: ComAtprotoRepoStrongRef$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedRecord$ {
  /** @deprecated use `AppBskyEmbedRecord$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedRecord$inboundSchema;
  /** @deprecated use `AppBskyEmbedRecord$outboundSchema` instead. */
  export const outboundSchema = AppBskyEmbedRecord$outboundSchema;
  /** @deprecated use `AppBskyEmbedRecord$Outbound` instead. */
  export type Outbound = AppBskyEmbedRecord$Outbound;
}

export function appBskyEmbedRecordToJSON(
  appBskyEmbedRecord: AppBskyEmbedRecord,
): string {
  return JSON.stringify(
    AppBskyEmbedRecord$outboundSchema.parse(appBskyEmbedRecord),
  );
}

export function appBskyEmbedRecordFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedRecord, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedRecord$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedRecord' from JSON`,
  );
}
