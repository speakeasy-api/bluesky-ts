/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)
 */
export type AppBskyGraphDefsRelationship = {
  did: string;
  /**
   * if the actor follows this DID, this is the AT-URI of the follow record
   */
  following?: string | undefined;
  /**
   * if the actor is followed by this DID, contains the AT-URI of the follow record
   */
  followedBy?: string | undefined;
};

/** @internal */
export const AppBskyGraphDefsRelationship$inboundSchema: z.ZodType<
  AppBskyGraphDefsRelationship,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  following: z.string().optional(),
  followedBy: z.string().optional(),
});

/** @internal */
export type AppBskyGraphDefsRelationship$Outbound = {
  did: string;
  following?: string | undefined;
  followedBy?: string | undefined;
};

/** @internal */
export const AppBskyGraphDefsRelationship$outboundSchema: z.ZodType<
  AppBskyGraphDefsRelationship$Outbound,
  z.ZodTypeDef,
  AppBskyGraphDefsRelationship
> = z.object({
  did: z.string(),
  following: z.string().optional(),
  followedBy: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphDefsRelationship$ {
  /** @deprecated use `AppBskyGraphDefsRelationship$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphDefsRelationship$inboundSchema;
  /** @deprecated use `AppBskyGraphDefsRelationship$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphDefsRelationship$outboundSchema;
  /** @deprecated use `AppBskyGraphDefsRelationship$Outbound` instead. */
  export type Outbound = AppBskyGraphDefsRelationship$Outbound;
}

export function appBskyGraphDefsRelationshipToJSON(
  appBskyGraphDefsRelationship: AppBskyGraphDefsRelationship,
): string {
  return JSON.stringify(
    AppBskyGraphDefsRelationship$outboundSchema.parse(
      appBskyGraphDefsRelationship,
    ),
  );
}

export function appBskyGraphDefsRelationshipFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyGraphDefsRelationship, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyGraphDefsRelationship$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyGraphDefsRelationship' from JSON`,
  );
}
