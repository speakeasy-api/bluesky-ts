/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyEmbedExternalViewExternal = {
  uri: string;
  title: string;
  description: string;
  thumb?: string | undefined;
};

/** @internal */
export const AppBskyEmbedExternalViewExternal$inboundSchema: z.ZodType<
  AppBskyEmbedExternalViewExternal,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  title: z.string(),
  description: z.string(),
  thumb: z.string().optional(),
});

/** @internal */
export type AppBskyEmbedExternalViewExternal$Outbound = {
  uri: string;
  title: string;
  description: string;
  thumb?: string | undefined;
};

/** @internal */
export const AppBskyEmbedExternalViewExternal$outboundSchema: z.ZodType<
  AppBskyEmbedExternalViewExternal$Outbound,
  z.ZodTypeDef,
  AppBskyEmbedExternalViewExternal
> = z.object({
  uri: z.string(),
  title: z.string(),
  description: z.string(),
  thumb: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyEmbedExternalViewExternal$ {
  /** @deprecated use `AppBskyEmbedExternalViewExternal$inboundSchema` instead. */
  export const inboundSchema = AppBskyEmbedExternalViewExternal$inboundSchema;
  /** @deprecated use `AppBskyEmbedExternalViewExternal$outboundSchema` instead. */
  export const outboundSchema = AppBskyEmbedExternalViewExternal$outboundSchema;
  /** @deprecated use `AppBskyEmbedExternalViewExternal$Outbound` instead. */
  export type Outbound = AppBskyEmbedExternalViewExternal$Outbound;
}

export function appBskyEmbedExternalViewExternalToJSON(
  appBskyEmbedExternalViewExternal: AppBskyEmbedExternalViewExternal,
): string {
  return JSON.stringify(
    AppBskyEmbedExternalViewExternal$outboundSchema.parse(
      appBskyEmbedExternalViewExternal,
    ),
  );
}

export function appBskyEmbedExternalViewExternalFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyEmbedExternalViewExternal, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyEmbedExternalViewExternal$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyEmbedExternalViewExternal' from JSON`,
  );
}
