/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoDefsLogLeaveConvo = {
  rev: string;
  convoId: string;
};

/** @internal */
export const ChatBskyConvoDefsLogLeaveConvo$inboundSchema: z.ZodType<
  ChatBskyConvoDefsLogLeaveConvo,
  z.ZodTypeDef,
  unknown
> = z.object({
  rev: z.string(),
  convoId: z.string(),
});

/** @internal */
export type ChatBskyConvoDefsLogLeaveConvo$Outbound = {
  rev: string;
  convoId: string;
};

/** @internal */
export const ChatBskyConvoDefsLogLeaveConvo$outboundSchema: z.ZodType<
  ChatBskyConvoDefsLogLeaveConvo$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoDefsLogLeaveConvo
> = z.object({
  rev: z.string(),
  convoId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoDefsLogLeaveConvo$ {
  /** @deprecated use `ChatBskyConvoDefsLogLeaveConvo$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoDefsLogLeaveConvo$inboundSchema;
  /** @deprecated use `ChatBskyConvoDefsLogLeaveConvo$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoDefsLogLeaveConvo$outboundSchema;
  /** @deprecated use `ChatBskyConvoDefsLogLeaveConvo$Outbound` instead. */
  export type Outbound = ChatBskyConvoDefsLogLeaveConvo$Outbound;
}

export function chatBskyConvoDefsLogLeaveConvoToJSON(
  chatBskyConvoDefsLogLeaveConvo: ChatBskyConvoDefsLogLeaveConvo,
): string {
  return JSON.stringify(
    ChatBskyConvoDefsLogLeaveConvo$outboundSchema.parse(
      chatBskyConvoDefsLogLeaveConvo,
    ),
  );
}

export function chatBskyConvoDefsLogLeaveConvoFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoDefsLogLeaveConvo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoDefsLogLeaveConvo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoDefsLogLeaveConvo' from JSON`,
  );
}
