/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyFeedDefsBlockedPost,
  AppBskyFeedDefsBlockedPost$inboundSchema,
  AppBskyFeedDefsBlockedPost$Outbound,
  AppBskyFeedDefsBlockedPost$outboundSchema,
} from "./appbskyfeeddefsblockedpost.js";
import {
  AppBskyFeedDefsNotFoundPost,
  AppBskyFeedDefsNotFoundPost$inboundSchema,
  AppBskyFeedDefsNotFoundPost$Outbound,
  AppBskyFeedDefsNotFoundPost$outboundSchema,
} from "./appbskyfeeddefsnotfoundpost.js";
import {
  AppBskyFeedDefsPostView,
  AppBskyFeedDefsPostView$inboundSchema,
  AppBskyFeedDefsPostView$Outbound,
  AppBskyFeedDefsPostView$outboundSchema,
} from "./appbskyfeeddefspostview.js";

export type AppBskyFeedDefsThreadViewPostParent =
  | AppBskyFeedDefsBlockedPost
  | AppBskyFeedDefsThreadViewPost
  | AppBskyFeedDefsNotFoundPost;

export type Reply =
  | AppBskyFeedDefsBlockedPost
  | AppBskyFeedDefsThreadViewPost
  | AppBskyFeedDefsNotFoundPost;

export type AppBskyFeedDefsThreadViewPost = {
  post: AppBskyFeedDefsPostView;
  parent?:
    | AppBskyFeedDefsBlockedPost
    | AppBskyFeedDefsThreadViewPost
    | AppBskyFeedDefsNotFoundPost
    | undefined;
  replies?:
    | Array<
      | AppBskyFeedDefsBlockedPost
      | AppBskyFeedDefsThreadViewPost
      | AppBskyFeedDefsNotFoundPost
    >
    | undefined;
};

/** @internal */
export const AppBskyFeedDefsThreadViewPostParent$inboundSchema: z.ZodType<
  AppBskyFeedDefsThreadViewPostParent,
  z.ZodTypeDef,
  unknown
> = z.union([
  AppBskyFeedDefsBlockedPost$inboundSchema,
  z.lazy(() => AppBskyFeedDefsThreadViewPost$inboundSchema),
  AppBskyFeedDefsNotFoundPost$inboundSchema,
]);

/** @internal */
export type AppBskyFeedDefsThreadViewPostParent$Outbound =
  | AppBskyFeedDefsBlockedPost$Outbound
  | AppBskyFeedDefsThreadViewPost$Outbound
  | AppBskyFeedDefsNotFoundPost$Outbound;

/** @internal */
export const AppBskyFeedDefsThreadViewPostParent$outboundSchema: z.ZodType<
  AppBskyFeedDefsThreadViewPostParent$Outbound,
  z.ZodTypeDef,
  AppBskyFeedDefsThreadViewPostParent
> = z.union([
  AppBskyFeedDefsBlockedPost$outboundSchema,
  z.lazy(() => AppBskyFeedDefsThreadViewPost$outboundSchema),
  AppBskyFeedDefsNotFoundPost$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedDefsThreadViewPostParent$ {
  /** @deprecated use `AppBskyFeedDefsThreadViewPostParent$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedDefsThreadViewPostParent$inboundSchema;
  /** @deprecated use `AppBskyFeedDefsThreadViewPostParent$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedDefsThreadViewPostParent$outboundSchema;
  /** @deprecated use `AppBskyFeedDefsThreadViewPostParent$Outbound` instead. */
  export type Outbound = AppBskyFeedDefsThreadViewPostParent$Outbound;
}

export function appBskyFeedDefsThreadViewPostParentToJSON(
  appBskyFeedDefsThreadViewPostParent: AppBskyFeedDefsThreadViewPostParent,
): string {
  return JSON.stringify(
    AppBskyFeedDefsThreadViewPostParent$outboundSchema.parse(
      appBskyFeedDefsThreadViewPostParent,
    ),
  );
}

export function appBskyFeedDefsThreadViewPostParentFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedDefsThreadViewPostParent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyFeedDefsThreadViewPostParent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedDefsThreadViewPostParent' from JSON`,
  );
}

/** @internal */
export const Reply$inboundSchema: z.ZodType<Reply, z.ZodTypeDef, unknown> = z
  .union([
    AppBskyFeedDefsBlockedPost$inboundSchema,
    z.lazy(() => AppBskyFeedDefsThreadViewPost$inboundSchema),
    AppBskyFeedDefsNotFoundPost$inboundSchema,
  ]);

/** @internal */
export type Reply$Outbound =
  | AppBskyFeedDefsBlockedPost$Outbound
  | AppBskyFeedDefsThreadViewPost$Outbound
  | AppBskyFeedDefsNotFoundPost$Outbound;

/** @internal */
export const Reply$outboundSchema: z.ZodType<
  Reply$Outbound,
  z.ZodTypeDef,
  Reply
> = z.union([
  AppBskyFeedDefsBlockedPost$outboundSchema,
  z.lazy(() => AppBskyFeedDefsThreadViewPost$outboundSchema),
  AppBskyFeedDefsNotFoundPost$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Reply$ {
  /** @deprecated use `Reply$inboundSchema` instead. */
  export const inboundSchema = Reply$inboundSchema;
  /** @deprecated use `Reply$outboundSchema` instead. */
  export const outboundSchema = Reply$outboundSchema;
  /** @deprecated use `Reply$Outbound` instead. */
  export type Outbound = Reply$Outbound;
}

export function replyToJSON(reply: Reply): string {
  return JSON.stringify(Reply$outboundSchema.parse(reply));
}

export function replyFromJSON(
  jsonString: string,
): SafeParseResult<Reply, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Reply$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Reply' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedDefsThreadViewPost$inboundSchema: z.ZodType<
  AppBskyFeedDefsThreadViewPost,
  z.ZodTypeDef,
  unknown
> = z.object({
  post: AppBskyFeedDefsPostView$inboundSchema,
  parent: z.union([
    AppBskyFeedDefsBlockedPost$inboundSchema,
    z.lazy(() => AppBskyFeedDefsThreadViewPost$inboundSchema),
    AppBskyFeedDefsNotFoundPost$inboundSchema,
  ]).optional(),
  replies: z.array(
    z.union([
      AppBskyFeedDefsBlockedPost$inboundSchema,
      z.lazy(() => AppBskyFeedDefsThreadViewPost$inboundSchema),
      AppBskyFeedDefsNotFoundPost$inboundSchema,
    ]),
  ).optional(),
});

/** @internal */
export type AppBskyFeedDefsThreadViewPost$Outbound = {
  post: AppBskyFeedDefsPostView$Outbound;
  parent?:
    | AppBskyFeedDefsBlockedPost$Outbound
    | AppBskyFeedDefsThreadViewPost$Outbound
    | AppBskyFeedDefsNotFoundPost$Outbound
    | undefined;
  replies?:
    | Array<
      | AppBskyFeedDefsBlockedPost$Outbound
      | AppBskyFeedDefsThreadViewPost$Outbound
      | AppBskyFeedDefsNotFoundPost$Outbound
    >
    | undefined;
};

/** @internal */
export const AppBskyFeedDefsThreadViewPost$outboundSchema: z.ZodType<
  AppBskyFeedDefsThreadViewPost$Outbound,
  z.ZodTypeDef,
  AppBskyFeedDefsThreadViewPost
> = z.object({
  post: AppBskyFeedDefsPostView$outboundSchema,
  parent: z.union([
    AppBskyFeedDefsBlockedPost$outboundSchema,
    z.lazy(() => AppBskyFeedDefsThreadViewPost$outboundSchema),
    AppBskyFeedDefsNotFoundPost$outboundSchema,
  ]).optional(),
  replies: z.array(
    z.union([
      AppBskyFeedDefsBlockedPost$outboundSchema,
      z.lazy(() => AppBskyFeedDefsThreadViewPost$outboundSchema),
      AppBskyFeedDefsNotFoundPost$outboundSchema,
    ]),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedDefsThreadViewPost$ {
  /** @deprecated use `AppBskyFeedDefsThreadViewPost$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedDefsThreadViewPost$inboundSchema;
  /** @deprecated use `AppBskyFeedDefsThreadViewPost$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedDefsThreadViewPost$outboundSchema;
  /** @deprecated use `AppBskyFeedDefsThreadViewPost$Outbound` instead. */
  export type Outbound = AppBskyFeedDefsThreadViewPost$Outbound;
}

export function appBskyFeedDefsThreadViewPostToJSON(
  appBskyFeedDefsThreadViewPost: AppBskyFeedDefsThreadViewPost,
): string {
  return JSON.stringify(
    AppBskyFeedDefsThreadViewPost$outboundSchema.parse(
      appBskyFeedDefsThreadViewPost,
    ),
  );
}

export function appBskyFeedDefsThreadViewPostFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedDefsThreadViewPost, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedDefsThreadViewPost$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedDefsThreadViewPost' from JSON`,
  );
}
