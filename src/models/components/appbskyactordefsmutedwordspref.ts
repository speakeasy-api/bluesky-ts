/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppBskyActorDefsMutedWord,
  AppBskyActorDefsMutedWord$inboundSchema,
  AppBskyActorDefsMutedWord$Outbound,
  AppBskyActorDefsMutedWord$outboundSchema,
} from "./appbskyactordefsmutedword.js";

export type AppBskyActorDefsMutedWordsPref = {
  items: Array<AppBskyActorDefsMutedWord>;
};

/** @internal */
export const AppBskyActorDefsMutedWordsPref$inboundSchema: z.ZodType<
  AppBskyActorDefsMutedWordsPref,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(AppBskyActorDefsMutedWord$inboundSchema),
});

/** @internal */
export type AppBskyActorDefsMutedWordsPref$Outbound = {
  items: Array<AppBskyActorDefsMutedWord$Outbound>;
};

/** @internal */
export const AppBskyActorDefsMutedWordsPref$outboundSchema: z.ZodType<
  AppBskyActorDefsMutedWordsPref$Outbound,
  z.ZodTypeDef,
  AppBskyActorDefsMutedWordsPref
> = z.object({
  items: z.array(AppBskyActorDefsMutedWord$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorDefsMutedWordsPref$ {
  /** @deprecated use `AppBskyActorDefsMutedWordsPref$inboundSchema` instead. */
  export const inboundSchema = AppBskyActorDefsMutedWordsPref$inboundSchema;
  /** @deprecated use `AppBskyActorDefsMutedWordsPref$outboundSchema` instead. */
  export const outboundSchema = AppBskyActorDefsMutedWordsPref$outboundSchema;
  /** @deprecated use `AppBskyActorDefsMutedWordsPref$Outbound` instead. */
  export type Outbound = AppBskyActorDefsMutedWordsPref$Outbound;
}

export function appBskyActorDefsMutedWordsPrefToJSON(
  appBskyActorDefsMutedWordsPref: AppBskyActorDefsMutedWordsPref,
): string {
  return JSON.stringify(
    AppBskyActorDefsMutedWordsPref$outboundSchema.parse(
      appBskyActorDefsMutedWordsPref,
    ),
  );
}

export function appBskyActorDefsMutedWordsPrefFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyActorDefsMutedWordsPref, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyActorDefsMutedWordsPref$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyActorDefsMutedWordsPref' from JSON`,
  );
}
