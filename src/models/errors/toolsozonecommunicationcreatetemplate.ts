/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneCommunicationCreateTemplateAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneCommunicationCreateTemplateAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneCommunicationCreateTemplateAuthMissingErrorData;

  constructor(
    err: ToolsOzoneCommunicationCreateTemplateAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneCommunicationCreateTemplateAuthMissingError";
  }
}

export const ToolsOzoneCommunicationCreateTemplateError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  DuplicateTemplateName: "DuplicateTemplateName",
} as const;
export type ToolsOzoneCommunicationCreateTemplateError = ClosedEnum<
  typeof ToolsOzoneCommunicationCreateTemplateError
>;

/**
 * Bad Request
 */
export type ToolsOzoneCommunicationCreateTemplateBadRequestErrorData = {
  error: ToolsOzoneCommunicationCreateTemplateError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneCommunicationCreateTemplateBadRequestError
  extends BlueskyError
{
  error: ToolsOzoneCommunicationCreateTemplateError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneCommunicationCreateTemplateBadRequestErrorData;

  constructor(
    err: ToolsOzoneCommunicationCreateTemplateBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneCommunicationCreateTemplateBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneCommunicationCreateTemplateAuthMissingError$inboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationCreateTemplateAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneCommunicationCreateTemplateAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneCommunicationCreateTemplateAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneCommunicationCreateTemplateAuthMissingError$outboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationCreateTemplateAuthMissingError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneCommunicationCreateTemplateAuthMissingError
  > = z.instanceof(ToolsOzoneCommunicationCreateTemplateAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationCreateTemplateAuthMissingError$ {
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationCreateTemplateAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationCreateTemplateAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateAuthMissingError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneCommunicationCreateTemplateAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneCommunicationCreateTemplateError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneCommunicationCreateTemplateError> = z
    .nativeEnum(ToolsOzoneCommunicationCreateTemplateError);

/** @internal */
export const ToolsOzoneCommunicationCreateTemplateError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneCommunicationCreateTemplateError> =
    ToolsOzoneCommunicationCreateTemplateError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationCreateTemplateError$ {
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationCreateTemplateError$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationCreateTemplateError$outboundSchema;
}

/** @internal */
export const ToolsOzoneCommunicationCreateTemplateBadRequestError$inboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationCreateTemplateBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneCommunicationCreateTemplateError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneCommunicationCreateTemplateBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneCommunicationCreateTemplateBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneCommunicationCreateTemplateBadRequestError$outboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationCreateTemplateBadRequestError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneCommunicationCreateTemplateBadRequestError
  > = z.instanceof(ToolsOzoneCommunicationCreateTemplateBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneCommunicationCreateTemplateError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationCreateTemplateBadRequestError$ {
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationCreateTemplateBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationCreateTemplateBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationCreateTemplateBadRequestError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneCommunicationCreateTemplateBadRequestError$Outbound;
}
