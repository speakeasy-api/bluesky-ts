/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyConvoGetMessagesResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyConvoGetMessagesResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyConvoGetMessagesResponseBodyErrorData;

  constructor(err: UnauthorizedChatBskyConvoGetMessagesResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedChatBskyConvoGetMessagesResponseBodyError";
  }
}

export const ChatBskyConvoGetMessagesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoGetMessagesError = ClosedEnum<
  typeof ChatBskyConvoGetMessagesError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyConvoGetMessagesResponseBodyErrorData = {
  error: ChatBskyConvoGetMessagesError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestChatBskyConvoGetMessagesResponseBodyError extends Error {
  error: ChatBskyConvoGetMessagesError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyConvoGetMessagesResponseBodyErrorData;

  constructor(err: BadRequestChatBskyConvoGetMessagesResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestChatBskyConvoGetMessagesResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyConvoGetMessagesResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoGetMessagesResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyConvoGetMessagesResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedChatBskyConvoGetMessagesResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedChatBskyConvoGetMessagesResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoGetMessagesResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyConvoGetMessagesResponseBodyError
  > = z.instanceof(UnauthorizedChatBskyConvoGetMessagesResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyConvoGetMessagesResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyConvoGetMessagesResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyConvoGetMessagesResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoGetMessagesResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyConvoGetMessagesResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoGetMessagesResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyConvoGetMessagesResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyConvoGetMessagesError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoGetMessagesError
> = z.nativeEnum(ChatBskyConvoGetMessagesError);

/** @internal */
export const ChatBskyConvoGetMessagesError$outboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoGetMessagesError
> = ChatBskyConvoGetMessagesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetMessagesError$ {
  /** @deprecated use `ChatBskyConvoGetMessagesError$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoGetMessagesError$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetMessagesError$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoGetMessagesError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyConvoGetMessagesResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoGetMessagesResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoGetMessagesError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyConvoGetMessagesResponseBodyError(v);
    });

/** @internal */
export type BadRequestChatBskyConvoGetMessagesResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestChatBskyConvoGetMessagesResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoGetMessagesResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyConvoGetMessagesResponseBodyError
  > = z.instanceof(BadRequestChatBskyConvoGetMessagesResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoGetMessagesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyConvoGetMessagesResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyConvoGetMessagesResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyConvoGetMessagesResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoGetMessagesResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyConvoGetMessagesResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoGetMessagesResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyConvoGetMessagesResponseBodyError$Outbound;
}
