/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncGetRepoStatusAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncGetRepoStatusAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetRepoStatusAuthMissingErrorData;

  constructor(
    err: ComAtprotoSyncGetRepoStatusAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncGetRepoStatusAuthMissingError";
  }
}

export const ComAtprotoSyncGetRepoStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RepoNotFound: "RepoNotFound",
} as const;
export type ComAtprotoSyncGetRepoStatusError = ClosedEnum<
  typeof ComAtprotoSyncGetRepoStatusError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncGetRepoStatusBadRequestErrorData = {
  error: ComAtprotoSyncGetRepoStatusError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncGetRepoStatusBadRequestError extends BlueskyError {
  error: ComAtprotoSyncGetRepoStatusError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetRepoStatusBadRequestErrorData;

  constructor(
    err: ComAtprotoSyncGetRepoStatusBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncGetRepoStatusBadRequestError";
  }
}

/** @internal */
export const ComAtprotoSyncGetRepoStatusAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoSyncGetRepoStatusAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncGetRepoStatusAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoSyncGetRepoStatusAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetRepoStatusAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetRepoStatusAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetRepoStatusAuthMissingError
  > = z.instanceof(ComAtprotoSyncGetRepoStatusAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoStatusAuthMissingError$ {
  /** @deprecated use `ComAtprotoSyncGetRepoStatusAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetRepoStatusAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRepoStatusAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRepoStatusAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoSyncGetRepoStatusError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoStatusError
> = z.nativeEnum(ComAtprotoSyncGetRepoStatusError);

/** @internal */
export const ComAtprotoSyncGetRepoStatusError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoStatusError
> = ComAtprotoSyncGetRepoStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoStatusError$ {
  /** @deprecated use `ComAtprotoSyncGetRepoStatusError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRepoStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetRepoStatusError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncGetRepoStatusBadRequestError$inboundSchema:
  z.ZodType<ComAtprotoSyncGetRepoStatusBadRequestError, z.ZodTypeDef, unknown> =
    z.object({
      error: ComAtprotoSyncGetRepoStatusError$inboundSchema,
      message: z.string(),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new ComAtprotoSyncGetRepoStatusBadRequestError(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type ComAtprotoSyncGetRepoStatusBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetRepoStatusBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetRepoStatusBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetRepoStatusBadRequestError
  > = z.instanceof(ComAtprotoSyncGetRepoStatusBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoSyncGetRepoStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoStatusBadRequestError$ {
  /** @deprecated use `ComAtprotoSyncGetRepoStatusBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetRepoStatusBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRepoStatusBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRepoStatusBadRequestError$Outbound;
}
