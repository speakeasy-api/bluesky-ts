/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError";
  }
}

export const ComAtprotoSyncGetRepoStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RepoNotFound: "RepoNotFound",
} as const;
export type ComAtprotoSyncGetRepoStatusError = ClosedEnum<
  typeof ComAtprotoSyncGetRepoStatusError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoSyncGetRepoStatusResponseBodyErrorData = {
  error: ComAtprotoSyncGetRepoStatusError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoSyncGetRepoStatusResponseBodyError
  extends Error
{
  error: ComAtprotoSyncGetRepoStatusError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoSyncGetRepoStatusResponseBodyErrorData;

  constructor(err: BadRequestComAtprotoSyncGetRepoStatusResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoSyncGetRepoStatusResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoSyncGetRepoStatusResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoSyncGetRepoStatusError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoStatusError
> = z.nativeEnum(ComAtprotoSyncGetRepoStatusError);

/** @internal */
export const ComAtprotoSyncGetRepoStatusError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoStatusError
> = ComAtprotoSyncGetRepoStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoStatusError$ {
  /** @deprecated use `ComAtprotoSyncGetRepoStatusError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRepoStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetRepoStatusError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoSyncGetRepoStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoSyncGetRepoStatusError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoSyncGetRepoStatusResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoSyncGetRepoStatusResponseBodyError
  > = z.instanceof(BadRequestComAtprotoSyncGetRepoStatusResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoSyncGetRepoStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoSyncGetRepoStatusResponseBodyError$Outbound;
}
