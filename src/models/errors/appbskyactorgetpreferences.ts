/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyActorGetPreferencesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyActorGetPreferencesAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorGetPreferencesAuthMissingErrorData;

  constructor(
    err: AppBskyActorGetPreferencesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorGetPreferencesAuthMissingError";
  }
}

export const AppBskyActorGetPreferencesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyActorGetPreferencesError = ClosedEnum<
  typeof AppBskyActorGetPreferencesError
>;

/**
 * Bad Request
 */
export type AppBskyActorGetPreferencesBadRequestErrorData = {
  error: AppBskyActorGetPreferencesError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyActorGetPreferencesBadRequestError extends BlueskyError {
  error: AppBskyActorGetPreferencesError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorGetPreferencesBadRequestErrorData;

  constructor(
    err: AppBskyActorGetPreferencesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorGetPreferencesBadRequestError";
  }
}

/** @internal */
export const AppBskyActorGetPreferencesAuthMissingError$inboundSchema:
  z.ZodType<AppBskyActorGetPreferencesAuthMissingError, z.ZodTypeDef, unknown> =
    z.object({
      error: z.literal("AuthMissing").default("AuthMissing"),
      message: z.string(),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new AppBskyActorGetPreferencesAuthMissingError(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type AppBskyActorGetPreferencesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyActorGetPreferencesAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyActorGetPreferencesAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyActorGetPreferencesAuthMissingError
  > = z.instanceof(AppBskyActorGetPreferencesAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetPreferencesAuthMissingError$ {
  /** @deprecated use `AppBskyActorGetPreferencesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorGetPreferencesAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetPreferencesAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyActorGetPreferencesAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyActorGetPreferencesError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyActorGetPreferencesError
> = z.nativeEnum(AppBskyActorGetPreferencesError);

/** @internal */
export const AppBskyActorGetPreferencesError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyActorGetPreferencesError
> = AppBskyActorGetPreferencesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetPreferencesError$ {
  /** @deprecated use `AppBskyActorGetPreferencesError$inboundSchema` instead. */
  export const inboundSchema = AppBskyActorGetPreferencesError$inboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesError$outboundSchema` instead. */
  export const outboundSchema = AppBskyActorGetPreferencesError$outboundSchema;
}

/** @internal */
export const AppBskyActorGetPreferencesBadRequestError$inboundSchema: z.ZodType<
  AppBskyActorGetPreferencesBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyActorGetPreferencesError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyActorGetPreferencesBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyActorGetPreferencesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyActorGetPreferencesBadRequestError$outboundSchema:
  z.ZodType<
    AppBskyActorGetPreferencesBadRequestError$Outbound,
    z.ZodTypeDef,
    AppBskyActorGetPreferencesBadRequestError
  > = z.instanceof(AppBskyActorGetPreferencesBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyActorGetPreferencesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetPreferencesBadRequestError$ {
  /** @deprecated use `AppBskyActorGetPreferencesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorGetPreferencesBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetPreferencesBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyActorGetPreferencesBadRequestError$Outbound;
}
