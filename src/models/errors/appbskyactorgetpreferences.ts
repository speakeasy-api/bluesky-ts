/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyActorGetPreferencesAppBskyActorResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyActorGetPreferencesAppBskyActorResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorGetPreferencesAppBskyActorResponseBodyData;

  constructor(err: AppBskyActorGetPreferencesAppBskyActorResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyActorGetPreferencesAppBskyActorResponseBody";
  }
}

export const ErrorT = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ErrorT = ClosedEnum<typeof ErrorT>;

/**
 * Bad Request
 */
export type AppBskyActorGetPreferencesResponseBodyData = {
  error: ErrorT;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyActorGetPreferencesResponseBody extends Error {
  error: ErrorT;

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorGetPreferencesResponseBodyData;

  constructor(err: AppBskyActorGetPreferencesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyActorGetPreferencesResponseBody";
  }
}

/** @internal */
export const AppBskyActorGetPreferencesAppBskyActorResponseBody$inboundSchema:
  z.ZodType<
    AppBskyActorGetPreferencesAppBskyActorResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyActorGetPreferencesAppBskyActorResponseBody(v);
    });

/** @internal */
export type AppBskyActorGetPreferencesAppBskyActorResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyActorGetPreferencesAppBskyActorResponseBody$outboundSchema:
  z.ZodType<
    AppBskyActorGetPreferencesAppBskyActorResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyActorGetPreferencesAppBskyActorResponseBody
  > = z.instanceof(AppBskyActorGetPreferencesAppBskyActorResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetPreferencesAppBskyActorResponseBody$ {
  /** @deprecated use `AppBskyActorGetPreferencesAppBskyActorResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorGetPreferencesAppBskyActorResponseBody$inboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesAppBskyActorResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetPreferencesAppBskyActorResponseBody$outboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesAppBskyActorResponseBody$Outbound` instead. */
  export type Outbound =
    AppBskyActorGetPreferencesAppBskyActorResponseBody$Outbound;
}

/** @internal */
export const ErrorT$inboundSchema: z.ZodNativeEnum<typeof ErrorT> = z
  .nativeEnum(ErrorT);

/** @internal */
export const ErrorT$outboundSchema: z.ZodNativeEnum<typeof ErrorT> =
  ErrorT$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ErrorT$ {
  /** @deprecated use `ErrorT$inboundSchema` instead. */
  export const inboundSchema = ErrorT$inboundSchema;
  /** @deprecated use `ErrorT$outboundSchema` instead. */
  export const outboundSchema = ErrorT$outboundSchema;
}

/** @internal */
export const AppBskyActorGetPreferencesResponseBody$inboundSchema: z.ZodType<
  AppBskyActorGetPreferencesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ErrorT$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyActorGetPreferencesResponseBody(v);
  });

/** @internal */
export type AppBskyActorGetPreferencesResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyActorGetPreferencesResponseBody$outboundSchema: z.ZodType<
  AppBskyActorGetPreferencesResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyActorGetPreferencesResponseBody
> = z.instanceof(AppBskyActorGetPreferencesResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ErrorT$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetPreferencesResponseBody$ {
  /** @deprecated use `AppBskyActorGetPreferencesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorGetPreferencesResponseBody$inboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetPreferencesResponseBody$outboundSchema;
  /** @deprecated use `AppBskyActorGetPreferencesResponseBody$Outbound` instead. */
  export type Outbound = AppBskyActorGetPreferencesResponseBody$Outbound;
}
