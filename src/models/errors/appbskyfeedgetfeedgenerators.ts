/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetFeedGeneratorsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetFeedGeneratorsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetFeedGeneratorsAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetFeedGeneratorsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetFeedGeneratorsAuthMissingError";
  }
}

export const AppBskyFeedGetFeedGeneratorsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetFeedGeneratorsError = ClosedEnum<
  typeof AppBskyFeedGetFeedGeneratorsError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetFeedGeneratorsBadRequestErrorData = {
  error: AppBskyFeedGetFeedGeneratorsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetFeedGeneratorsBadRequestError extends BlueskyError {
  error: AppBskyFeedGetFeedGeneratorsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetFeedGeneratorsBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetFeedGeneratorsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetFeedGeneratorsBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetFeedGeneratorsAuthMissingError$inboundSchema:
  z.ZodType<
    AppBskyFeedGetFeedGeneratorsAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyFeedGetFeedGeneratorsAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyFeedGetFeedGeneratorsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetFeedGeneratorsAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyFeedGetFeedGeneratorsAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyFeedGetFeedGeneratorsAuthMissingError
  > = z.instanceof(AppBskyFeedGetFeedGeneratorsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedGeneratorsAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetFeedGeneratorsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetFeedGeneratorsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedGeneratorsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetFeedGeneratorsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetFeedGeneratorsError
> = z.nativeEnum(AppBskyFeedGetFeedGeneratorsError);

/** @internal */
export const AppBskyFeedGetFeedGeneratorsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetFeedGeneratorsError
> = AppBskyFeedGetFeedGeneratorsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedGeneratorsError$ {
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetFeedGeneratorsError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetFeedGeneratorsError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetFeedGeneratorsBadRequestError$inboundSchema:
  z.ZodType<
    AppBskyFeedGetFeedGeneratorsBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyFeedGetFeedGeneratorsError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyFeedGetFeedGeneratorsBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyFeedGetFeedGeneratorsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetFeedGeneratorsBadRequestError$outboundSchema:
  z.ZodType<
    AppBskyFeedGetFeedGeneratorsBadRequestError$Outbound,
    z.ZodTypeDef,
    AppBskyFeedGetFeedGeneratorsBadRequestError
  > = z.instanceof(AppBskyFeedGetFeedGeneratorsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyFeedGetFeedGeneratorsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedGeneratorsBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetFeedGeneratorsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetFeedGeneratorsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedGeneratorsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedGeneratorsBadRequestError$Outbound;
}
