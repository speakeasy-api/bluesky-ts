/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminDisableAccountInvitesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminDisableAccountInvitesAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDisableAccountInvitesAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminDisableAccountInvitesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminDisableAccountInvitesAuthMissingError";
  }
}

export const ComAtprotoAdminDisableAccountInvitesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminDisableAccountInvitesError = ClosedEnum<
  typeof ComAtprotoAdminDisableAccountInvitesError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminDisableAccountInvitesBadRequestErrorData = {
  error: ComAtprotoAdminDisableAccountInvitesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminDisableAccountInvitesBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminDisableAccountInvitesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDisableAccountInvitesBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminDisableAccountInvitesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminDisableAccountInvitesBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminDisableAccountInvitesAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableAccountInvitesAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminDisableAccountInvitesAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminDisableAccountInvitesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminDisableAccountInvitesAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableAccountInvitesAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminDisableAccountInvitesAuthMissingError
  > = z.instanceof(ComAtprotoAdminDisableAccountInvitesAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDisableAccountInvitesAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDisableAccountInvitesAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDisableAccountInvitesAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminDisableAccountInvitesAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminDisableAccountInvitesError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminDisableAccountInvitesError> = z
    .nativeEnum(ComAtprotoAdminDisableAccountInvitesError);

/** @internal */
export const ComAtprotoAdminDisableAccountInvitesError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminDisableAccountInvitesError> =
    ComAtprotoAdminDisableAccountInvitesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDisableAccountInvitesError$ {
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDisableAccountInvitesError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDisableAccountInvitesError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminDisableAccountInvitesBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableAccountInvitesBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminDisableAccountInvitesError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminDisableAccountInvitesBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminDisableAccountInvitesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminDisableAccountInvitesBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableAccountInvitesBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminDisableAccountInvitesBadRequestError
  > = z.instanceof(ComAtprotoAdminDisableAccountInvitesBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminDisableAccountInvitesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDisableAccountInvitesBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDisableAccountInvitesBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDisableAccountInvitesBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableAccountInvitesBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminDisableAccountInvitesBadRequestError$Outbound;
}
