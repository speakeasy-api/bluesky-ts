/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneTeamDeleteMemberAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneTeamDeleteMemberAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamDeleteMemberAuthMissingErrorData;

  constructor(
    err: ToolsOzoneTeamDeleteMemberAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneTeamDeleteMemberAuthMissingError";
  }
}

export const ToolsOzoneTeamDeleteMemberError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  MemberNotFound: "MemberNotFound",
  CannotDeleteSelf: "CannotDeleteSelf",
} as const;
export type ToolsOzoneTeamDeleteMemberError = ClosedEnum<
  typeof ToolsOzoneTeamDeleteMemberError
>;

/**
 * Bad Request
 */
export type ToolsOzoneTeamDeleteMemberBadRequestErrorData = {
  error: ToolsOzoneTeamDeleteMemberError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneTeamDeleteMemberBadRequestError extends BlueskyError {
  error: ToolsOzoneTeamDeleteMemberError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamDeleteMemberBadRequestErrorData;

  constructor(
    err: ToolsOzoneTeamDeleteMemberBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneTeamDeleteMemberBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneTeamDeleteMemberAuthMissingError$inboundSchema:
  z.ZodType<ToolsOzoneTeamDeleteMemberAuthMissingError, z.ZodTypeDef, unknown> =
    z.object({
      error: z.literal("AuthMissing").default("AuthMissing"),
      message: z.string(),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new ToolsOzoneTeamDeleteMemberAuthMissingError(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type ToolsOzoneTeamDeleteMemberAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneTeamDeleteMemberAuthMissingError$outboundSchema:
  z.ZodType<
    ToolsOzoneTeamDeleteMemberAuthMissingError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneTeamDeleteMemberAuthMissingError
  > = z.instanceof(ToolsOzoneTeamDeleteMemberAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDeleteMemberAuthMissingError$ {
  /** @deprecated use `ToolsOzoneTeamDeleteMemberAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamDeleteMemberAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamDeleteMemberAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberAuthMissingError$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamDeleteMemberAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneTeamDeleteMemberError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamDeleteMemberError
> = z.nativeEnum(ToolsOzoneTeamDeleteMemberError);

/** @internal */
export const ToolsOzoneTeamDeleteMemberError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamDeleteMemberError
> = ToolsOzoneTeamDeleteMemberError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDeleteMemberError$ {
  /** @deprecated use `ToolsOzoneTeamDeleteMemberError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamDeleteMemberError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamDeleteMemberError$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamDeleteMemberBadRequestError$inboundSchema: z.ZodType<
  ToolsOzoneTeamDeleteMemberBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneTeamDeleteMemberError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneTeamDeleteMemberBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ToolsOzoneTeamDeleteMemberBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneTeamDeleteMemberBadRequestError$outboundSchema:
  z.ZodType<
    ToolsOzoneTeamDeleteMemberBadRequestError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneTeamDeleteMemberBadRequestError
  > = z.instanceof(ToolsOzoneTeamDeleteMemberBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneTeamDeleteMemberError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDeleteMemberBadRequestError$ {
  /** @deprecated use `ToolsOzoneTeamDeleteMemberBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamDeleteMemberBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamDeleteMemberBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberBadRequestError$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamDeleteMemberBadRequestError$Outbound;
}
