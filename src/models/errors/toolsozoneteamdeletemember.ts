/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBodyData;

  constructor(err: ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody";
  }
}

export const ToolsOzoneTeamDeleteMemberError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  MemberNotFound: "MemberNotFound",
  CannotDeleteSelf: "CannotDeleteSelf",
} as const;
export type ToolsOzoneTeamDeleteMemberError = ClosedEnum<
  typeof ToolsOzoneTeamDeleteMemberError
>;

/**
 * Bad Request
 */
export type ToolsOzoneTeamDeleteMemberResponseBodyData = {
  error: ToolsOzoneTeamDeleteMemberError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneTeamDeleteMemberResponseBody extends Error {
  error: ToolsOzoneTeamDeleteMemberError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamDeleteMemberResponseBodyData;

  constructor(err: ToolsOzoneTeamDeleteMemberResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneTeamDeleteMemberResponseBody";
  }
}

/** @internal */
export const ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody(v);
    });

/** @internal */
export type ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody
  > = z.instanceof(ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$ {
  /** @deprecated use `ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneTeamDeleteMemberToolsOzoneTeamResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneTeamDeleteMemberError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamDeleteMemberError
> = z.nativeEnum(ToolsOzoneTeamDeleteMemberError);

/** @internal */
export const ToolsOzoneTeamDeleteMemberError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamDeleteMemberError
> = ToolsOzoneTeamDeleteMemberError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDeleteMemberError$ {
  /** @deprecated use `ToolsOzoneTeamDeleteMemberError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamDeleteMemberError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamDeleteMemberError$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamDeleteMemberResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneTeamDeleteMemberResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneTeamDeleteMemberError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneTeamDeleteMemberResponseBody(v);
  });

/** @internal */
export type ToolsOzoneTeamDeleteMemberResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneTeamDeleteMemberResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneTeamDeleteMemberResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneTeamDeleteMemberResponseBody
> = z.instanceof(ToolsOzoneTeamDeleteMemberResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ToolsOzoneTeamDeleteMemberError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamDeleteMemberResponseBody$ {
  /** @deprecated use `ToolsOzoneTeamDeleteMemberResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamDeleteMemberResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamDeleteMemberResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamDeleteMemberResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamDeleteMemberResponseBody$Outbound;
}
