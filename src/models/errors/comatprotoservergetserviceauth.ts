/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerGetServiceAuthComAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetServiceAuthComAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerGetServiceAuthComAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerGetServiceAuthError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BadExpiration: "BadExpiration",
} as const;
export type ComAtprotoServerGetServiceAuthError = ClosedEnum<
  typeof ComAtprotoServerGetServiceAuthError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerGetServiceAuthResponseBodyData = {
  error: ComAtprotoServerGetServiceAuthError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerGetServiceAuthResponseBody extends Error {
  error: ComAtprotoServerGetServiceAuthError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetServiceAuthResponseBodyData;

  constructor(err: ComAtprotoServerGetServiceAuthResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerGetServiceAuthResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerGetServiceAuthComAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerGetServiceAuthError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerGetServiceAuthError
> = z.nativeEnum(ComAtprotoServerGetServiceAuthError);

/** @internal */
export const ComAtprotoServerGetServiceAuthError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerGetServiceAuthError> =
    ComAtprotoServerGetServiceAuthError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetServiceAuthError$ {
  /** @deprecated use `ComAtprotoServerGetServiceAuthError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetServiceAuthError$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetServiceAuthError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerGetServiceAuthResponseBody$inboundSchema:
  z.ZodType<ComAtprotoServerGetServiceAuthResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: ComAtprotoServerGetServiceAuthError$inboundSchema,
      message: z.string(),
    })
      .transform((v) => {
        return new ComAtprotoServerGetServiceAuthResponseBody(v);
      });

/** @internal */
export type ComAtprotoServerGetServiceAuthResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerGetServiceAuthResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetServiceAuthResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetServiceAuthResponseBody
  > = z.instanceof(ComAtprotoServerGetServiceAuthResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerGetServiceAuthError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetServiceAuthResponseBody$ {
  /** @deprecated use `ComAtprotoServerGetServiceAuthResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetServiceAuthResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetServiceAuthResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerGetServiceAuthResponseBody$Outbound;
}
