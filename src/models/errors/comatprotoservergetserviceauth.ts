/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerGetServiceAuthAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerGetServiceAuthAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetServiceAuthAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerGetServiceAuthAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerGetServiceAuthAuthMissingError";
  }
}

export const ComAtprotoServerGetServiceAuthError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BadExpiration: "BadExpiration",
} as const;
export type ComAtprotoServerGetServiceAuthError = ClosedEnum<
  typeof ComAtprotoServerGetServiceAuthError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerGetServiceAuthBadRequestErrorData = {
  error: ComAtprotoServerGetServiceAuthError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerGetServiceAuthBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerGetServiceAuthError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetServiceAuthBadRequestErrorData;

  constructor(
    err: ComAtprotoServerGetServiceAuthBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerGetServiceAuthBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerGetServiceAuthAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetServiceAuthAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerGetServiceAuthAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerGetServiceAuthAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerGetServiceAuthAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetServiceAuthAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetServiceAuthAuthMissingError
  > = z.instanceof(ComAtprotoServerGetServiceAuthAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetServiceAuthAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerGetServiceAuthAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetServiceAuthAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetServiceAuthAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerGetServiceAuthAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerGetServiceAuthError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerGetServiceAuthError
> = z.nativeEnum(ComAtprotoServerGetServiceAuthError);

/** @internal */
export const ComAtprotoServerGetServiceAuthError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerGetServiceAuthError> =
    ComAtprotoServerGetServiceAuthError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetServiceAuthError$ {
  /** @deprecated use `ComAtprotoServerGetServiceAuthError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetServiceAuthError$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetServiceAuthError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerGetServiceAuthBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetServiceAuthBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerGetServiceAuthError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerGetServiceAuthBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerGetServiceAuthBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerGetServiceAuthBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetServiceAuthBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetServiceAuthBadRequestError
  > = z.instanceof(ComAtprotoServerGetServiceAuthBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerGetServiceAuthError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetServiceAuthBadRequestError$ {
  /** @deprecated use `ComAtprotoServerGetServiceAuthBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetServiceAuthBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetServiceAuthBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetServiceAuthBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoServerGetServiceAuthBadRequestError$Outbound;
}
