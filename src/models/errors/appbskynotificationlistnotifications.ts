/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedAppBskyNotificationListNotificationsResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedAppBskyNotificationListNotificationsResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedAppBskyNotificationListNotificationsResponseBodyErrorData;

  constructor(
    err: UnauthorizedAppBskyNotificationListNotificationsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedAppBskyNotificationListNotificationsResponseBodyError";
  }
}

export const AppBskyNotificationListNotificationsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyNotificationListNotificationsError = ClosedEnum<
  typeof AppBskyNotificationListNotificationsError
>;

/**
 * Bad Request
 */
export type BadRequestAppBskyNotificationListNotificationsResponseBodyErrorData =
  {
    error: AppBskyNotificationListNotificationsError;
    message: string;
  };

/**
 * Bad Request
 */
export class BadRequestAppBskyNotificationListNotificationsResponseBodyError
  extends Error
{
  error: AppBskyNotificationListNotificationsError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestAppBskyNotificationListNotificationsResponseBodyErrorData;

  constructor(
    err: BadRequestAppBskyNotificationListNotificationsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "BadRequestAppBskyNotificationListNotificationsResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedAppBskyNotificationListNotificationsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedAppBskyNotificationListNotificationsResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedAppBskyNotificationListNotificationsResponseBodyError
  > = z.instanceof(
    UnauthorizedAppBskyNotificationListNotificationsResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$ {
  /** @deprecated use `UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedAppBskyNotificationListNotificationsResponseBodyError$Outbound;
}

/** @internal */
export const AppBskyNotificationListNotificationsError$inboundSchema:
  z.ZodNativeEnum<typeof AppBskyNotificationListNotificationsError> = z
    .nativeEnum(AppBskyNotificationListNotificationsError);

/** @internal */
export const AppBskyNotificationListNotificationsError$outboundSchema:
  z.ZodNativeEnum<typeof AppBskyNotificationListNotificationsError> =
    AppBskyNotificationListNotificationsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationListNotificationsError$ {
  /** @deprecated use `AppBskyNotificationListNotificationsError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationListNotificationsError$inboundSchema;
  /** @deprecated use `AppBskyNotificationListNotificationsError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationListNotificationsError$outboundSchema;
}

/** @internal */
export const BadRequestAppBskyNotificationListNotificationsResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestAppBskyNotificationListNotificationsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyNotificationListNotificationsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestAppBskyNotificationListNotificationsResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestAppBskyNotificationListNotificationsResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestAppBskyNotificationListNotificationsResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestAppBskyNotificationListNotificationsResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestAppBskyNotificationListNotificationsResponseBodyError
  > = z.instanceof(
    BadRequestAppBskyNotificationListNotificationsResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyNotificationListNotificationsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestAppBskyNotificationListNotificationsResponseBodyError$ {
  /** @deprecated use `BadRequestAppBskyNotificationListNotificationsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestAppBskyNotificationListNotificationsResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestAppBskyNotificationListNotificationsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestAppBskyNotificationListNotificationsResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestAppBskyNotificationListNotificationsResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestAppBskyNotificationListNotificationsResponseBodyError$Outbound;
}
