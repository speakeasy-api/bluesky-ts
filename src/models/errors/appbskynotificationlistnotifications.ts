/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyNotificationListNotificationsNotificationResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyNotificationListNotificationsNotificationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyNotificationListNotificationsNotificationResponseBodyData;

  constructor(
    err: AppBskyNotificationListNotificationsNotificationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyNotificationListNotificationsNotificationResponseBody";
  }
}

export const AppBskyNotificationListNotificationsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyNotificationListNotificationsError = ClosedEnum<
  typeof AppBskyNotificationListNotificationsError
>;

/**
 * Bad Request
 */
export type AppBskyNotificationListNotificationsResponseBodyData = {
  error: AppBskyNotificationListNotificationsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyNotificationListNotificationsResponseBody extends Error {
  error: AppBskyNotificationListNotificationsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyNotificationListNotificationsResponseBodyData;

  constructor(err: AppBskyNotificationListNotificationsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyNotificationListNotificationsResponseBody";
  }
}

/** @internal */
export const AppBskyNotificationListNotificationsNotificationResponseBody$inboundSchema:
  z.ZodType<
    AppBskyNotificationListNotificationsNotificationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyNotificationListNotificationsNotificationResponseBody(
        v,
      );
    });

/** @internal */
export type AppBskyNotificationListNotificationsNotificationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const AppBskyNotificationListNotificationsNotificationResponseBody$outboundSchema:
  z.ZodType<
    AppBskyNotificationListNotificationsNotificationResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationListNotificationsNotificationResponseBody
  > = z.instanceof(AppBskyNotificationListNotificationsNotificationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationListNotificationsNotificationResponseBody$ {
  /** @deprecated use `AppBskyNotificationListNotificationsNotificationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationListNotificationsNotificationResponseBody$inboundSchema;
  /** @deprecated use `AppBskyNotificationListNotificationsNotificationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationListNotificationsNotificationResponseBody$outboundSchema;
  /** @deprecated use `AppBskyNotificationListNotificationsNotificationResponseBody$Outbound` instead. */
  export type Outbound =
    AppBskyNotificationListNotificationsNotificationResponseBody$Outbound;
}

/** @internal */
export const AppBskyNotificationListNotificationsError$inboundSchema:
  z.ZodNativeEnum<typeof AppBskyNotificationListNotificationsError> = z
    .nativeEnum(AppBskyNotificationListNotificationsError);

/** @internal */
export const AppBskyNotificationListNotificationsError$outboundSchema:
  z.ZodNativeEnum<typeof AppBskyNotificationListNotificationsError> =
    AppBskyNotificationListNotificationsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationListNotificationsError$ {
  /** @deprecated use `AppBskyNotificationListNotificationsError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationListNotificationsError$inboundSchema;
  /** @deprecated use `AppBskyNotificationListNotificationsError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationListNotificationsError$outboundSchema;
}

/** @internal */
export const AppBskyNotificationListNotificationsResponseBody$inboundSchema:
  z.ZodType<
    AppBskyNotificationListNotificationsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyNotificationListNotificationsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyNotificationListNotificationsResponseBody(v);
    });

/** @internal */
export type AppBskyNotificationListNotificationsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyNotificationListNotificationsResponseBody$outboundSchema:
  z.ZodType<
    AppBskyNotificationListNotificationsResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationListNotificationsResponseBody
  > = z.instanceof(AppBskyNotificationListNotificationsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyNotificationListNotificationsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationListNotificationsResponseBody$ {
  /** @deprecated use `AppBskyNotificationListNotificationsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationListNotificationsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyNotificationListNotificationsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationListNotificationsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyNotificationListNotificationsResponseBody$Outbound` instead. */
  export type Outbound =
    AppBskyNotificationListNotificationsResponseBody$Outbound;
}
