/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedToolsOzoneModerationGetRepoResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedToolsOzoneModerationGetRepoResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedToolsOzoneModerationGetRepoResponseBodyErrorData;

  constructor(
    err: UnauthorizedToolsOzoneModerationGetRepoResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedToolsOzoneModerationGetRepoResponseBodyError";
  }
}

export const ToolsOzoneModerationGetRepoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RepoNotFound: "RepoNotFound",
} as const;
export type ToolsOzoneModerationGetRepoError = ClosedEnum<
  typeof ToolsOzoneModerationGetRepoError
>;

/**
 * Bad Request
 */
export type BadRequestToolsOzoneModerationGetRepoResponseBodyErrorData = {
  error: ToolsOzoneModerationGetRepoError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestToolsOzoneModerationGetRepoResponseBodyError
  extends Error
{
  error: ToolsOzoneModerationGetRepoError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestToolsOzoneModerationGetRepoResponseBodyErrorData;

  constructor(err: BadRequestToolsOzoneModerationGetRepoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestToolsOzoneModerationGetRepoResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneModerationGetRepoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedToolsOzoneModerationGetRepoResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedToolsOzoneModerationGetRepoResponseBodyError
  > = z.instanceof(UnauthorizedToolsOzoneModerationGetRepoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$ {
  /** @deprecated use `UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedToolsOzoneModerationGetRepoResponseBodyError$Outbound;
}

/** @internal */
export const ToolsOzoneModerationGetRepoError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneModerationGetRepoError
> = z.nativeEnum(ToolsOzoneModerationGetRepoError);

/** @internal */
export const ToolsOzoneModerationGetRepoError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneModerationGetRepoError
> = ToolsOzoneModerationGetRepoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetRepoError$ {
  /** @deprecated use `ToolsOzoneModerationGetRepoError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneModerationGetRepoError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRepoError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneModerationGetRepoError$outboundSchema;
}

/** @internal */
export const BadRequestToolsOzoneModerationGetRepoResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestToolsOzoneModerationGetRepoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationGetRepoError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestToolsOzoneModerationGetRepoResponseBodyError(v);
    });

/** @internal */
export type BadRequestToolsOzoneModerationGetRepoResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestToolsOzoneModerationGetRepoResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestToolsOzoneModerationGetRepoResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestToolsOzoneModerationGetRepoResponseBodyError
  > = z.instanceof(BadRequestToolsOzoneModerationGetRepoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationGetRepoError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestToolsOzoneModerationGetRepoResponseBodyError$ {
  /** @deprecated use `BadRequestToolsOzoneModerationGetRepoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestToolsOzoneModerationGetRepoResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestToolsOzoneModerationGetRepoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestToolsOzoneModerationGetRepoResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestToolsOzoneModerationGetRepoResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestToolsOzoneModerationGetRepoResponseBodyError$Outbound;
}
