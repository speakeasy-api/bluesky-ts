/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBodyData;

  constructor(
    err: ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody";
  }
}

export const ToolsOzoneModerationGetRepoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RepoNotFound: "RepoNotFound",
} as const;
export type ToolsOzoneModerationGetRepoError = ClosedEnum<
  typeof ToolsOzoneModerationGetRepoError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationGetRepoResponseBodyData = {
  error: ToolsOzoneModerationGetRepoError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationGetRepoResponseBody extends Error {
  error: ToolsOzoneModerationGetRepoError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationGetRepoResponseBodyData;

  constructor(err: ToolsOzoneModerationGetRepoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationGetRepoResponseBody";
  }
}

/** @internal */
export const ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody(v);
    });

/** @internal */
export type ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody
  > = z.instanceof(ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationGetRepoToolsOzoneModerationResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneModerationGetRepoError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneModerationGetRepoError
> = z.nativeEnum(ToolsOzoneModerationGetRepoError);

/** @internal */
export const ToolsOzoneModerationGetRepoError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneModerationGetRepoError
> = ToolsOzoneModerationGetRepoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetRepoError$ {
  /** @deprecated use `ToolsOzoneModerationGetRepoError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneModerationGetRepoError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRepoError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneModerationGetRepoError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationGetRepoResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneModerationGetRepoResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneModerationGetRepoError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneModerationGetRepoResponseBody(v);
  });

/** @internal */
export type ToolsOzoneModerationGetRepoResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationGetRepoResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneModerationGetRepoResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationGetRepoResponseBody
> = z.instanceof(ToolsOzoneModerationGetRepoResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ToolsOzoneModerationGetRepoError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetRepoResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationGetRepoResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationGetRepoResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRepoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationGetRepoResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRepoResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationGetRepoResponseBody$Outbound;
}
