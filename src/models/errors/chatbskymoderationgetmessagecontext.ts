/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyModerationGetMessageContextResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyModerationGetMessageContextResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyModerationGetMessageContextResponseBodyErrorData;

  constructor(
    err: UnauthorizedChatBskyModerationGetMessageContextResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedChatBskyModerationGetMessageContextResponseBodyError";
  }
}

export const ChatBskyModerationGetMessageContextError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyModerationGetMessageContextError = ClosedEnum<
  typeof ChatBskyModerationGetMessageContextError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyModerationGetMessageContextResponseBodyErrorData =
  {
    error: ChatBskyModerationGetMessageContextError;
    message: string;
  };

/**
 * Bad Request
 */
export class BadRequestChatBskyModerationGetMessageContextResponseBodyError
  extends Error
{
  error: ChatBskyModerationGetMessageContextError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyModerationGetMessageContextResponseBodyErrorData;

  constructor(
    err: BadRequestChatBskyModerationGetMessageContextResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "BadRequestChatBskyModerationGetMessageContextResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyModerationGetMessageContextResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyModerationGetMessageContextResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyModerationGetMessageContextResponseBodyError
  > = z.instanceof(
    UnauthorizedChatBskyModerationGetMessageContextResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyModerationGetMessageContextResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyModerationGetMessageContextError$inboundSchema:
  z.ZodNativeEnum<typeof ChatBskyModerationGetMessageContextError> = z
    .nativeEnum(ChatBskyModerationGetMessageContextError);

/** @internal */
export const ChatBskyModerationGetMessageContextError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyModerationGetMessageContextError> =
    ChatBskyModerationGetMessageContextError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationGetMessageContextError$ {
  /** @deprecated use `ChatBskyModerationGetMessageContextError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationGetMessageContextError$inboundSchema;
  /** @deprecated use `ChatBskyModerationGetMessageContextError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationGetMessageContextError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyModerationGetMessageContextResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyModerationGetMessageContextResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyModerationGetMessageContextError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyModerationGetMessageContextResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestChatBskyModerationGetMessageContextResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestChatBskyModerationGetMessageContextResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyModerationGetMessageContextResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyModerationGetMessageContextResponseBodyError
  > = z.instanceof(
    BadRequestChatBskyModerationGetMessageContextResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyModerationGetMessageContextError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyModerationGetMessageContextResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyModerationGetMessageContextResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyModerationGetMessageContextResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyModerationGetMessageContextResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyModerationGetMessageContextResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyModerationGetMessageContextResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyModerationGetMessageContextResponseBodyError$Outbound;
}
