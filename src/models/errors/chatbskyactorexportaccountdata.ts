/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ChatBskyActorExportAccountDataAccountResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ChatBskyActorExportAccountDataAccountResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ChatBskyActorExportAccountDataAccountResponseBodyData;

  constructor(err: ChatBskyActorExportAccountDataAccountResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyActorExportAccountDataAccountResponseBody";
  }
}

export const ChatBskyActorExportAccountDataError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyActorExportAccountDataError = ClosedEnum<
  typeof ChatBskyActorExportAccountDataError
>;

/**
 * Bad Request
 */
export type ChatBskyActorExportAccountDataResponseBodyData = {
  error: ChatBskyActorExportAccountDataError;
  message: string;
};

/**
 * Bad Request
 */
export class ChatBskyActorExportAccountDataResponseBody extends Error {
  error: ChatBskyActorExportAccountDataError;

  /** The original data that was passed to this error instance. */
  data$: ChatBskyActorExportAccountDataResponseBodyData;

  constructor(err: ChatBskyActorExportAccountDataResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyActorExportAccountDataResponseBody";
  }
}

/** @internal */
export const ChatBskyActorExportAccountDataAccountResponseBody$inboundSchema:
  z.ZodType<
    ChatBskyActorExportAccountDataAccountResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ChatBskyActorExportAccountDataAccountResponseBody(v);
    });

/** @internal */
export type ChatBskyActorExportAccountDataAccountResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ChatBskyActorExportAccountDataAccountResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyActorExportAccountDataAccountResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyActorExportAccountDataAccountResponseBody
  > = z.instanceof(ChatBskyActorExportAccountDataAccountResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyActorExportAccountDataAccountResponseBody$ {
  /** @deprecated use `ChatBskyActorExportAccountDataAccountResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyActorExportAccountDataAccountResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyActorExportAccountDataAccountResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyActorExportAccountDataAccountResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyActorExportAccountDataAccountResponseBody$Outbound` instead. */
  export type Outbound =
    ChatBskyActorExportAccountDataAccountResponseBody$Outbound;
}

/** @internal */
export const ChatBskyActorExportAccountDataError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyActorExportAccountDataError
> = z.nativeEnum(ChatBskyActorExportAccountDataError);

/** @internal */
export const ChatBskyActorExportAccountDataError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyActorExportAccountDataError> =
    ChatBskyActorExportAccountDataError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyActorExportAccountDataError$ {
  /** @deprecated use `ChatBskyActorExportAccountDataError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyActorExportAccountDataError$inboundSchema;
  /** @deprecated use `ChatBskyActorExportAccountDataError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyActorExportAccountDataError$outboundSchema;
}

/** @internal */
export const ChatBskyActorExportAccountDataResponseBody$inboundSchema:
  z.ZodType<ChatBskyActorExportAccountDataResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: ChatBskyActorExportAccountDataError$inboundSchema,
      message: z.string(),
    })
      .transform((v) => {
        return new ChatBskyActorExportAccountDataResponseBody(v);
      });

/** @internal */
export type ChatBskyActorExportAccountDataResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ChatBskyActorExportAccountDataResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyActorExportAccountDataResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyActorExportAccountDataResponseBody
  > = z.instanceof(ChatBskyActorExportAccountDataResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyActorExportAccountDataError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyActorExportAccountDataResponseBody$ {
  /** @deprecated use `ChatBskyActorExportAccountDataResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyActorExportAccountDataResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyActorExportAccountDataResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyActorExportAccountDataResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyActorExportAccountDataResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyActorExportAccountDataResponseBody$Outbound;
}
