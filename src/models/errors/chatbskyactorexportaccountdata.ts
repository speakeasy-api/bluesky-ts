/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyActorExportAccountDataResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyActorExportAccountDataResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyActorExportAccountDataResponseBodyErrorData;

  constructor(
    err: UnauthorizedChatBskyActorExportAccountDataResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedChatBskyActorExportAccountDataResponseBodyError";
  }
}

export const ChatBskyActorExportAccountDataError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyActorExportAccountDataError = ClosedEnum<
  typeof ChatBskyActorExportAccountDataError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyActorExportAccountDataResponseBodyErrorData = {
  error: ChatBskyActorExportAccountDataError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestChatBskyActorExportAccountDataResponseBodyError
  extends Error
{
  error: ChatBskyActorExportAccountDataError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyActorExportAccountDataResponseBodyErrorData;

  constructor(
    err: BadRequestChatBskyActorExportAccountDataResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestChatBskyActorExportAccountDataResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyActorExportAccountDataResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyActorExportAccountDataResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyActorExportAccountDataResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedChatBskyActorExportAccountDataResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedChatBskyActorExportAccountDataResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyActorExportAccountDataResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyActorExportAccountDataResponseBodyError
  > = z.instanceof(UnauthorizedChatBskyActorExportAccountDataResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyActorExportAccountDataResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyActorExportAccountDataResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyActorExportAccountDataResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyActorExportAccountDataResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyActorExportAccountDataResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyActorExportAccountDataResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyActorExportAccountDataResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyActorExportAccountDataError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyActorExportAccountDataError
> = z.nativeEnum(ChatBskyActorExportAccountDataError);

/** @internal */
export const ChatBskyActorExportAccountDataError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyActorExportAccountDataError> =
    ChatBskyActorExportAccountDataError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyActorExportAccountDataError$ {
  /** @deprecated use `ChatBskyActorExportAccountDataError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyActorExportAccountDataError$inboundSchema;
  /** @deprecated use `ChatBskyActorExportAccountDataError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyActorExportAccountDataError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyActorExportAccountDataResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyActorExportAccountDataResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyActorExportAccountDataError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyActorExportAccountDataResponseBodyError(v);
    });

/** @internal */
export type BadRequestChatBskyActorExportAccountDataResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestChatBskyActorExportAccountDataResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyActorExportAccountDataResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyActorExportAccountDataResponseBodyError
  > = z.instanceof(BadRequestChatBskyActorExportAccountDataResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyActorExportAccountDataError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyActorExportAccountDataResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyActorExportAccountDataResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyActorExportAccountDataResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyActorExportAccountDataResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyActorExportAccountDataResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyActorExportAccountDataResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyActorExportAccountDataResponseBodyError$Outbound;
}
