/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetRepostedByAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetRepostedByAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetRepostedByAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetRepostedByAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetRepostedByAuthMissingError";
  }
}

export const AppBskyFeedGetRepostedByError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetRepostedByError = ClosedEnum<
  typeof AppBskyFeedGetRepostedByError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetRepostedByBadRequestErrorData = {
  error: AppBskyFeedGetRepostedByError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetRepostedByBadRequestError extends BlueskyError {
  error: AppBskyFeedGetRepostedByError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetRepostedByBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetRepostedByBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetRepostedByBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetRepostedByAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetRepostedByAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetRepostedByAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetRepostedByAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetRepostedByAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetRepostedByAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetRepostedByAuthMissingError
> = z.instanceof(AppBskyFeedGetRepostedByAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetRepostedByAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetRepostedByAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetRepostedByAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetRepostedByAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetRepostedByAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetRepostedByAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetRepostedByAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetRepostedByError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetRepostedByError
> = z.nativeEnum(AppBskyFeedGetRepostedByError);

/** @internal */
export const AppBskyFeedGetRepostedByError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetRepostedByError
> = AppBskyFeedGetRepostedByError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetRepostedByError$ {
  /** @deprecated use `AppBskyFeedGetRepostedByError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetRepostedByError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetRepostedByError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetRepostedByError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetRepostedByBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetRepostedByBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetRepostedByError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetRepostedByBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetRepostedByBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetRepostedByBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetRepostedByBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetRepostedByBadRequestError
> = z.instanceof(AppBskyFeedGetRepostedByBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetRepostedByError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetRepostedByBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetRepostedByBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetRepostedByBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetRepostedByBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetRepostedByBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetRepostedByBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetRepostedByBadRequestError$Outbound;
}
