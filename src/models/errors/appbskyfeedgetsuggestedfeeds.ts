/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetSuggestedFeedsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetSuggestedFeedsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetSuggestedFeedsAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetSuggestedFeedsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetSuggestedFeedsAuthMissingError";
  }
}

export const AppBskyFeedGetSuggestedFeedsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetSuggestedFeedsError = ClosedEnum<
  typeof AppBskyFeedGetSuggestedFeedsError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetSuggestedFeedsBadRequestErrorData = {
  error: AppBskyFeedGetSuggestedFeedsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetSuggestedFeedsBadRequestError extends BlueskyError {
  error: AppBskyFeedGetSuggestedFeedsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetSuggestedFeedsBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetSuggestedFeedsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetSuggestedFeedsBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetSuggestedFeedsAuthMissingError$inboundSchema:
  z.ZodType<
    AppBskyFeedGetSuggestedFeedsAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyFeedGetSuggestedFeedsAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyFeedGetSuggestedFeedsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetSuggestedFeedsAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyFeedGetSuggestedFeedsAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyFeedGetSuggestedFeedsAuthMissingError
  > = z.instanceof(AppBskyFeedGetSuggestedFeedsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetSuggestedFeedsAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetSuggestedFeedsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetSuggestedFeedsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetSuggestedFeedsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetSuggestedFeedsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetSuggestedFeedsError
> = z.nativeEnum(AppBskyFeedGetSuggestedFeedsError);

/** @internal */
export const AppBskyFeedGetSuggestedFeedsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetSuggestedFeedsError
> = AppBskyFeedGetSuggestedFeedsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetSuggestedFeedsError$ {
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetSuggestedFeedsError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetSuggestedFeedsError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetSuggestedFeedsBadRequestError$inboundSchema:
  z.ZodType<
    AppBskyFeedGetSuggestedFeedsBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyFeedGetSuggestedFeedsError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyFeedGetSuggestedFeedsBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyFeedGetSuggestedFeedsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetSuggestedFeedsBadRequestError$outboundSchema:
  z.ZodType<
    AppBskyFeedGetSuggestedFeedsBadRequestError$Outbound,
    z.ZodTypeDef,
    AppBskyFeedGetSuggestedFeedsBadRequestError
  > = z.instanceof(AppBskyFeedGetSuggestedFeedsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyFeedGetSuggestedFeedsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetSuggestedFeedsBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetSuggestedFeedsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetSuggestedFeedsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetSuggestedFeedsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetSuggestedFeedsBadRequestError$Outbound;
}
