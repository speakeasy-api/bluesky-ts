/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyErrorData;

  constructor(
    err: UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError";
  }
}

export const ToolsOzoneSettingRemoveOptionsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneSettingRemoveOptionsError = ClosedEnum<
  typeof ToolsOzoneSettingRemoveOptionsError
>;

/**
 * Bad Request
 */
export type BadRequestToolsOzoneSettingRemoveOptionsResponseBodyErrorData = {
  error: ToolsOzoneSettingRemoveOptionsError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError
  extends Error
{
  error: ToolsOzoneSettingRemoveOptionsError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestToolsOzoneSettingRemoveOptionsResponseBodyErrorData;

  constructor(
    err: BadRequestToolsOzoneSettingRemoveOptionsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError
  > = z.instanceof(UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$ {
  /** @deprecated use `UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound;
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSettingRemoveOptionsError
> = z.nativeEnum(ToolsOzoneSettingRemoveOptionsError);

/** @internal */
export const ToolsOzoneSettingRemoveOptionsError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneSettingRemoveOptionsError> =
    ToolsOzoneSettingRemoveOptionsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsError$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsError$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsError$outboundSchema;
}

/** @internal */
export const BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneSettingRemoveOptionsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError(v);
    });

/** @internal */
export type BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError
  > = z.instanceof(BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneSettingRemoveOptionsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$ {
  /** @deprecated use `BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestToolsOzoneSettingRemoveOptionsResponseBodyError$Outbound;
}
