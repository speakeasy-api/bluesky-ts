/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneSettingRemoveOptionsSettingResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneSettingRemoveOptionsSettingResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSettingRemoveOptionsSettingResponseBodyData;

  constructor(err: ToolsOzoneSettingRemoveOptionsSettingResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneSettingRemoveOptionsSettingResponseBody";
  }
}

export const ToolsOzoneSettingRemoveOptionsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneSettingRemoveOptionsError = ClosedEnum<
  typeof ToolsOzoneSettingRemoveOptionsError
>;

/**
 * Bad Request
 */
export type ToolsOzoneSettingRemoveOptionsResponseBodyData = {
  error: ToolsOzoneSettingRemoveOptionsError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneSettingRemoveOptionsResponseBody extends Error {
  error: ToolsOzoneSettingRemoveOptionsError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSettingRemoveOptionsResponseBodyData;

  constructor(err: ToolsOzoneSettingRemoveOptionsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneSettingRemoveOptionsResponseBody";
  }
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsSettingResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneSettingRemoveOptionsSettingResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneSettingRemoveOptionsSettingResponseBody(v);
    });

/** @internal */
export type ToolsOzoneSettingRemoveOptionsSettingResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsSettingResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSettingRemoveOptionsSettingResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSettingRemoveOptionsSettingResponseBody
  > = z.instanceof(ToolsOzoneSettingRemoveOptionsSettingResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsSettingResponseBody$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsSettingResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsSettingResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsSettingResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsSettingResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsSettingResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneSettingRemoveOptionsSettingResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSettingRemoveOptionsError
> = z.nativeEnum(ToolsOzoneSettingRemoveOptionsError);

/** @internal */
export const ToolsOzoneSettingRemoveOptionsError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneSettingRemoveOptionsError> =
    ToolsOzoneSettingRemoveOptionsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsError$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsError$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsError$outboundSchema;
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema:
  z.ZodType<ToolsOzoneSettingRemoveOptionsResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: ToolsOzoneSettingRemoveOptionsError$inboundSchema,
      message: z.string(),
    })
      .transform((v) => {
        return new ToolsOzoneSettingRemoveOptionsResponseBody(v);
      });

/** @internal */
export type ToolsOzoneSettingRemoveOptionsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSettingRemoveOptionsResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSettingRemoveOptionsResponseBody
  > = z.instanceof(ToolsOzoneSettingRemoveOptionsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneSettingRemoveOptionsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsResponseBody$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSettingRemoveOptionsResponseBody$Outbound;
}
