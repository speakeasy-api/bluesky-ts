/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedAppBskyVideoUploadVideoResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedAppBskyVideoUploadVideoResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedAppBskyVideoUploadVideoResponseBodyErrorData;

  constructor(err: UnauthorizedAppBskyVideoUploadVideoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedAppBskyVideoUploadVideoResponseBodyError";
  }
}

export const AppBskyVideoUploadVideoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyVideoUploadVideoError = ClosedEnum<
  typeof AppBskyVideoUploadVideoError
>;

/**
 * Bad Request
 */
export type BadRequestAppBskyVideoUploadVideoResponseBodyErrorData = {
  error: AppBskyVideoUploadVideoError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestAppBskyVideoUploadVideoResponseBodyError extends Error {
  error: AppBskyVideoUploadVideoError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestAppBskyVideoUploadVideoResponseBodyErrorData;

  constructor(err: BadRequestAppBskyVideoUploadVideoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestAppBskyVideoUploadVideoResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedAppBskyVideoUploadVideoResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedAppBskyVideoUploadVideoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedAppBskyVideoUploadVideoResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedAppBskyVideoUploadVideoResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedAppBskyVideoUploadVideoResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedAppBskyVideoUploadVideoResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedAppBskyVideoUploadVideoResponseBodyError
  > = z.instanceof(UnauthorizedAppBskyVideoUploadVideoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedAppBskyVideoUploadVideoResponseBodyError$ {
  /** @deprecated use `UnauthorizedAppBskyVideoUploadVideoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedAppBskyVideoUploadVideoResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedAppBskyVideoUploadVideoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedAppBskyVideoUploadVideoResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedAppBskyVideoUploadVideoResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedAppBskyVideoUploadVideoResponseBodyError$Outbound;
}

/** @internal */
export const AppBskyVideoUploadVideoError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoUploadVideoError
> = z.nativeEnum(AppBskyVideoUploadVideoError);

/** @internal */
export const AppBskyVideoUploadVideoError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoUploadVideoError
> = AppBskyVideoUploadVideoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoUploadVideoError$ {
  /** @deprecated use `AppBskyVideoUploadVideoError$inboundSchema` instead. */
  export const inboundSchema = AppBskyVideoUploadVideoError$inboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoError$outboundSchema` instead. */
  export const outboundSchema = AppBskyVideoUploadVideoError$outboundSchema;
}

/** @internal */
export const BadRequestAppBskyVideoUploadVideoResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestAppBskyVideoUploadVideoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyVideoUploadVideoError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestAppBskyVideoUploadVideoResponseBodyError(v);
    });

/** @internal */
export type BadRequestAppBskyVideoUploadVideoResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestAppBskyVideoUploadVideoResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestAppBskyVideoUploadVideoResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestAppBskyVideoUploadVideoResponseBodyError
  > = z.instanceof(BadRequestAppBskyVideoUploadVideoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyVideoUploadVideoError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestAppBskyVideoUploadVideoResponseBodyError$ {
  /** @deprecated use `BadRequestAppBskyVideoUploadVideoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestAppBskyVideoUploadVideoResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestAppBskyVideoUploadVideoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestAppBskyVideoUploadVideoResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestAppBskyVideoUploadVideoResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestAppBskyVideoUploadVideoResponseBodyError$Outbound;
}
