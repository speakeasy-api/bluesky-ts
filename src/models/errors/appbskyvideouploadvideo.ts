/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyVideoUploadVideoAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyVideoUploadVideoAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyVideoUploadVideoAuthMissingErrorData;

  constructor(
    err: AppBskyVideoUploadVideoAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyVideoUploadVideoAuthMissingError";
  }
}

export const AppBskyVideoUploadVideoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyVideoUploadVideoError = ClosedEnum<
  typeof AppBskyVideoUploadVideoError
>;

/**
 * Bad Request
 */
export type AppBskyVideoUploadVideoBadRequestErrorData = {
  error: AppBskyVideoUploadVideoError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyVideoUploadVideoBadRequestError extends BlueskyError {
  error: AppBskyVideoUploadVideoError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyVideoUploadVideoBadRequestErrorData;

  constructor(
    err: AppBskyVideoUploadVideoBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyVideoUploadVideoBadRequestError";
  }
}

/** @internal */
export const AppBskyVideoUploadVideoAuthMissingError$inboundSchema: z.ZodType<
  AppBskyVideoUploadVideoAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyVideoUploadVideoAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyVideoUploadVideoAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyVideoUploadVideoAuthMissingError$outboundSchema: z.ZodType<
  AppBskyVideoUploadVideoAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyVideoUploadVideoAuthMissingError
> = z.instanceof(AppBskyVideoUploadVideoAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoUploadVideoAuthMissingError$ {
  /** @deprecated use `AppBskyVideoUploadVideoAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyVideoUploadVideoAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyVideoUploadVideoAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyVideoUploadVideoAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyVideoUploadVideoError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoUploadVideoError
> = z.nativeEnum(AppBskyVideoUploadVideoError);

/** @internal */
export const AppBskyVideoUploadVideoError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoUploadVideoError
> = AppBskyVideoUploadVideoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoUploadVideoError$ {
  /** @deprecated use `AppBskyVideoUploadVideoError$inboundSchema` instead. */
  export const inboundSchema = AppBskyVideoUploadVideoError$inboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoError$outboundSchema` instead. */
  export const outboundSchema = AppBskyVideoUploadVideoError$outboundSchema;
}

/** @internal */
export const AppBskyVideoUploadVideoBadRequestError$inboundSchema: z.ZodType<
  AppBskyVideoUploadVideoBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyVideoUploadVideoError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyVideoUploadVideoBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyVideoUploadVideoBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyVideoUploadVideoBadRequestError$outboundSchema: z.ZodType<
  AppBskyVideoUploadVideoBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyVideoUploadVideoBadRequestError
> = z.instanceof(AppBskyVideoUploadVideoBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyVideoUploadVideoError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoUploadVideoBadRequestError$ {
  /** @deprecated use `AppBskyVideoUploadVideoBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyVideoUploadVideoBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyVideoUploadVideoBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyVideoUploadVideoBadRequestError$Outbound;
}
