/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCreateSessionAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerCreateSessionAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateSessionAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerCreateSessionAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateSessionAuthMissingError";
  }
}

export const ComAtprotoServerCreateSessionError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
  AuthFactorTokenRequired: "AuthFactorTokenRequired",
} as const;
export type ComAtprotoServerCreateSessionError = ClosedEnum<
  typeof ComAtprotoServerCreateSessionError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCreateSessionBadRequestErrorData = {
  error: ComAtprotoServerCreateSessionError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCreateSessionBadRequestError extends BlueskyError {
  error: ComAtprotoServerCreateSessionError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateSessionBadRequestErrorData;

  constructor(
    err: ComAtprotoServerCreateSessionBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateSessionBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerCreateSessionAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateSessionAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateSessionAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateSessionAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateSessionAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateSessionAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateSessionAuthMissingError
  > = z.instanceof(ComAtprotoServerCreateSessionAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateSessionAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerCreateSessionAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateSessionAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateSessionAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateSessionAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateSessionAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateSessionAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateSessionError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerCreateSessionError
> = z.nativeEnum(ComAtprotoServerCreateSessionError);

/** @internal */
export const ComAtprotoServerCreateSessionError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerCreateSessionError
> = ComAtprotoServerCreateSessionError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateSessionError$ {
  /** @deprecated use `ComAtprotoServerCreateSessionError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerCreateSessionError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateSessionError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateSessionError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCreateSessionBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateSessionBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateSessionError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateSessionBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateSessionBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateSessionBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateSessionBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateSessionBadRequestError
  > = z.instanceof(ComAtprotoServerCreateSessionBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateSessionError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateSessionBadRequestError$ {
  /** @deprecated use `ComAtprotoServerCreateSessionBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateSessionBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateSessionBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateSessionBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateSessionBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateSessionBadRequestError$Outbound;
}
