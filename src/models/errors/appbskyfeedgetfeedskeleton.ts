/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetFeedSkeletonFeedResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetFeedSkeletonFeedResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetFeedSkeletonFeedResponseBodyData;

  constructor(err: AppBskyFeedGetFeedSkeletonFeedResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedGetFeedSkeletonFeedResponseBody";
  }
}

export const AppBskyFeedGetFeedSkeletonError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  UnknownFeed: "UnknownFeed",
} as const;
export type AppBskyFeedGetFeedSkeletonError = ClosedEnum<
  typeof AppBskyFeedGetFeedSkeletonError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetFeedSkeletonResponseBodyData = {
  error: AppBskyFeedGetFeedSkeletonError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetFeedSkeletonResponseBody extends Error {
  error: AppBskyFeedGetFeedSkeletonError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetFeedSkeletonResponseBodyData;

  constructor(err: AppBskyFeedGetFeedSkeletonResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedGetFeedSkeletonResponseBody";
  }
}

/** @internal */
export const AppBskyFeedGetFeedSkeletonFeedResponseBody$inboundSchema:
  z.ZodType<AppBskyFeedGetFeedSkeletonFeedResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: z.literal("AuthMissing"),
      message: z.string(),
    })
      .transform((v) => {
        return new AppBskyFeedGetFeedSkeletonFeedResponseBody(v);
      });

/** @internal */
export type AppBskyFeedGetFeedSkeletonFeedResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetFeedSkeletonFeedResponseBody$outboundSchema:
  z.ZodType<
    AppBskyFeedGetFeedSkeletonFeedResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyFeedGetFeedSkeletonFeedResponseBody
  > = z.instanceof(AppBskyFeedGetFeedSkeletonFeedResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedSkeletonFeedResponseBody$ {
  /** @deprecated use `AppBskyFeedGetFeedSkeletonFeedResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetFeedSkeletonFeedResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonFeedResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetFeedSkeletonFeedResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonFeedResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedSkeletonFeedResponseBody$Outbound;
}

/** @internal */
export const AppBskyFeedGetFeedSkeletonError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetFeedSkeletonError
> = z.nativeEnum(AppBskyFeedGetFeedSkeletonError);

/** @internal */
export const AppBskyFeedGetFeedSkeletonError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetFeedSkeletonError
> = AppBskyFeedGetFeedSkeletonError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedSkeletonError$ {
  /** @deprecated use `AppBskyFeedGetFeedSkeletonError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetFeedSkeletonError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetFeedSkeletonError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetFeedSkeletonResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetFeedSkeletonResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetFeedSkeletonError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetFeedSkeletonResponseBody(v);
  });

/** @internal */
export type AppBskyFeedGetFeedSkeletonResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetFeedSkeletonResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetFeedSkeletonResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetFeedSkeletonResponseBody
> = z.instanceof(AppBskyFeedGetFeedSkeletonResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetFeedSkeletonError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedSkeletonResponseBody$ {
  /** @deprecated use `AppBskyFeedGetFeedSkeletonResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetFeedSkeletonResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetFeedSkeletonResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedSkeletonResponseBody$Outbound;
}
