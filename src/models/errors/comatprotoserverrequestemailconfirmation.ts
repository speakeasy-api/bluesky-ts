/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$:
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyErrorData;

  constructor(
    err:
      UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError";
  }
}

export const ComAtprotoServerRequestEmailConfirmationError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerRequestEmailConfirmationError = ClosedEnum<
  typeof ComAtprotoServerRequestEmailConfirmationError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyErrorData =
  {
    error: ComAtprotoServerRequestEmailConfirmationError;
    message: string;
  };

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError
  extends Error
{
  error: ComAtprotoServerRequestEmailConfirmationError;

  /** The original data that was passed to this error instance. */
  data$:
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyErrorData;

  constructor(
    err:
      BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError
  > = z.instanceof(
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailConfirmationError> = z
    .nativeEnum(ComAtprotoServerRequestEmailConfirmationError);

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailConfirmationError> =
    ComAtprotoServerRequestEmailConfirmationError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailConfirmationError$ {
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailConfirmationError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailConfirmationError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRequestEmailConfirmationError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError
  > = z.instanceof(
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRequestEmailConfirmationError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerRequestEmailConfirmationResponseBodyError$Outbound;
}
