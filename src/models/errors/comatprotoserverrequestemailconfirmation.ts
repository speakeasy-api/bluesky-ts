/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerRequestEmailConfirmationError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerRequestEmailConfirmationError = ClosedEnum<
  typeof ComAtprotoServerRequestEmailConfirmationError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerRequestEmailConfirmationResponseBodyData = {
  error: ComAtprotoServerRequestEmailConfirmationError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerRequestEmailConfirmationResponseBody
  extends Error
{
  error: ComAtprotoServerRequestEmailConfirmationError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestEmailConfirmationResponseBodyData;

  constructor(err: ComAtprotoServerRequestEmailConfirmationResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerRequestEmailConfirmationResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody(
        v,
      );
    });

/** @internal */
export type ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody
  > = z.instanceof(
    ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestEmailConfirmationAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailConfirmationError> = z
    .nativeEnum(ComAtprotoServerRequestEmailConfirmationError);

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailConfirmationError> =
    ComAtprotoServerRequestEmailConfirmationError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailConfirmationError$ {
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailConfirmationError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailConfirmationError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailConfirmationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRequestEmailConfirmationError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestEmailConfirmationResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerRequestEmailConfirmationResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerRequestEmailConfirmationResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailConfirmationResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestEmailConfirmationResponseBody
  > = z.instanceof(ComAtprotoServerRequestEmailConfirmationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRequestEmailConfirmationError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailConfirmationResponseBody$ {
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailConfirmationResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailConfirmationResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailConfirmationResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestEmailConfirmationResponseBody$Outbound;
}
