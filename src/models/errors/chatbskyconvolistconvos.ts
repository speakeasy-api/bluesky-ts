/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ChatBskyConvoListConvosChatConvoResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ChatBskyConvoListConvosChatConvoResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoListConvosChatConvoResponseBodyData;

  constructor(err: ChatBskyConvoListConvosChatConvoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyConvoListConvosChatConvoResponseBody";
  }
}

export const ChatBskyConvoListConvosError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoListConvosError = ClosedEnum<
  typeof ChatBskyConvoListConvosError
>;

/**
 * Bad Request
 */
export type ChatBskyConvoListConvosResponseBodyData = {
  error: ChatBskyConvoListConvosError;
  message: string;
};

/**
 * Bad Request
 */
export class ChatBskyConvoListConvosResponseBody extends Error {
  error: ChatBskyConvoListConvosError;

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoListConvosResponseBodyData;

  constructor(err: ChatBskyConvoListConvosResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyConvoListConvosResponseBody";
  }
}

/** @internal */
export const ChatBskyConvoListConvosChatConvoResponseBody$inboundSchema:
  z.ZodType<
    ChatBskyConvoListConvosChatConvoResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoListConvosChatConvoResponseBody(v);
    });

/** @internal */
export type ChatBskyConvoListConvosChatConvoResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ChatBskyConvoListConvosChatConvoResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyConvoListConvosChatConvoResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoListConvosChatConvoResponseBody
  > = z.instanceof(ChatBskyConvoListConvosChatConvoResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoListConvosChatConvoResponseBody$ {
  /** @deprecated use `ChatBskyConvoListConvosChatConvoResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoListConvosChatConvoResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoListConvosChatConvoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoListConvosChatConvoResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoListConvosChatConvoResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoListConvosChatConvoResponseBody$Outbound;
}

/** @internal */
export const ChatBskyConvoListConvosError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoListConvosError
> = z.nativeEnum(ChatBskyConvoListConvosError);

/** @internal */
export const ChatBskyConvoListConvosError$outboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoListConvosError
> = ChatBskyConvoListConvosError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoListConvosError$ {
  /** @deprecated use `ChatBskyConvoListConvosError$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoListConvosError$inboundSchema;
  /** @deprecated use `ChatBskyConvoListConvosError$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoListConvosError$outboundSchema;
}

/** @internal */
export const ChatBskyConvoListConvosResponseBody$inboundSchema: z.ZodType<
  ChatBskyConvoListConvosResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ChatBskyConvoListConvosError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ChatBskyConvoListConvosResponseBody(v);
  });

/** @internal */
export type ChatBskyConvoListConvosResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ChatBskyConvoListConvosResponseBody$outboundSchema: z.ZodType<
  ChatBskyConvoListConvosResponseBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoListConvosResponseBody
> = z.instanceof(ChatBskyConvoListConvosResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ChatBskyConvoListConvosError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoListConvosResponseBody$ {
  /** @deprecated use `ChatBskyConvoListConvosResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoListConvosResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoListConvosResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoListConvosResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoListConvosResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoListConvosResponseBody$Outbound;
}
