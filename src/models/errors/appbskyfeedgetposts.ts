/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetPostsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetPostsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetPostsAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetPostsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetPostsAuthMissingError";
  }
}

export const AppBskyFeedGetPostsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetPostsError = ClosedEnum<
  typeof AppBskyFeedGetPostsError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetPostsBadRequestErrorData = {
  error: AppBskyFeedGetPostsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetPostsBadRequestError extends BlueskyError {
  error: AppBskyFeedGetPostsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetPostsBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetPostsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetPostsBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetPostsAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetPostsAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetPostsAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetPostsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetPostsAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetPostsAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetPostsAuthMissingError
> = z.instanceof(AppBskyFeedGetPostsAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostsAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetPostsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetPostsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetPostsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetPostsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetPostsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetPostsError
> = z.nativeEnum(AppBskyFeedGetPostsError);

/** @internal */
export const AppBskyFeedGetPostsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetPostsError
> = AppBskyFeedGetPostsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostsError$ {
  /** @deprecated use `AppBskyFeedGetPostsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetPostsError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetPostsError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetPostsBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetPostsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetPostsError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetPostsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetPostsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetPostsBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetPostsBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetPostsBadRequestError
> = z.instanceof(AppBskyFeedGetPostsBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetPostsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostsBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetPostsBadRequestError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetPostsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetPostsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetPostsBadRequestError$Outbound;
}
