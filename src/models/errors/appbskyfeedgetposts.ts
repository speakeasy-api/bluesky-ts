/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetPostsFeedResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetPostsFeedResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetPostsFeedResponseBodyData;

  constructor(err: AppBskyFeedGetPostsFeedResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedGetPostsFeedResponseBody";
  }
}

export const AppBskyFeedGetPostsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetPostsError = ClosedEnum<
  typeof AppBskyFeedGetPostsError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetPostsResponseBodyData = {
  error: AppBskyFeedGetPostsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetPostsResponseBody extends Error {
  error: AppBskyFeedGetPostsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetPostsResponseBodyData;

  constructor(err: AppBskyFeedGetPostsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedGetPostsResponseBody";
  }
}

/** @internal */
export const AppBskyFeedGetPostsFeedResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetPostsFeedResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing"),
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetPostsFeedResponseBody(v);
  });

/** @internal */
export type AppBskyFeedGetPostsFeedResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetPostsFeedResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetPostsFeedResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetPostsFeedResponseBody
> = z.instanceof(AppBskyFeedGetPostsFeedResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostsFeedResponseBody$ {
  /** @deprecated use `AppBskyFeedGetPostsFeedResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetPostsFeedResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsFeedResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetPostsFeedResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsFeedResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetPostsFeedResponseBody$Outbound;
}

/** @internal */
export const AppBskyFeedGetPostsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetPostsError
> = z.nativeEnum(AppBskyFeedGetPostsError);

/** @internal */
export const AppBskyFeedGetPostsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetPostsError
> = AppBskyFeedGetPostsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostsError$ {
  /** @deprecated use `AppBskyFeedGetPostsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetPostsError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetPostsError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetPostsResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetPostsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetPostsError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetPostsResponseBody(v);
  });

/** @internal */
export type AppBskyFeedGetPostsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetPostsResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetPostsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetPostsResponseBody
> = z.instanceof(AppBskyFeedGetPostsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetPostsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostsResponseBody$ {
  /** @deprecated use `AppBskyFeedGetPostsResponseBody$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetPostsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsResponseBody$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetPostsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetPostsResponseBody$Outbound;
}
