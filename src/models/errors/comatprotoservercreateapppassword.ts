/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCreateAppPasswordAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerCreateAppPasswordAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateAppPasswordAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerCreateAppPasswordAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateAppPasswordAuthMissingError";
  }
}

export const ComAtprotoServerCreateAppPasswordError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
} as const;
export type ComAtprotoServerCreateAppPasswordError = ClosedEnum<
  typeof ComAtprotoServerCreateAppPasswordError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCreateAppPasswordBadRequestErrorData = {
  error: ComAtprotoServerCreateAppPasswordError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCreateAppPasswordBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerCreateAppPasswordError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateAppPasswordBadRequestErrorData;

  constructor(
    err: ComAtprotoServerCreateAppPasswordBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateAppPasswordBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerCreateAppPasswordAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateAppPasswordAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateAppPasswordAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateAppPasswordAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateAppPasswordAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateAppPasswordAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateAppPasswordAuthMissingError
  > = z.instanceof(ComAtprotoServerCreateAppPasswordAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAppPasswordAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerCreateAppPasswordAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateAppPasswordAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAppPasswordAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateAppPasswordAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateAppPasswordError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateAppPasswordError> = z.nativeEnum(
    ComAtprotoServerCreateAppPasswordError,
  );

/** @internal */
export const ComAtprotoServerCreateAppPasswordError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateAppPasswordError> =
    ComAtprotoServerCreateAppPasswordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAppPasswordError$ {
  /** @deprecated use `ComAtprotoServerCreateAppPasswordError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateAppPasswordError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAppPasswordError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCreateAppPasswordBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateAppPasswordBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateAppPasswordError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateAppPasswordBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateAppPasswordBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateAppPasswordBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateAppPasswordBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateAppPasswordBadRequestError
  > = z.instanceof(ComAtprotoServerCreateAppPasswordBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateAppPasswordError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAppPasswordBadRequestError$ {
  /** @deprecated use `ComAtprotoServerCreateAppPasswordBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateAppPasswordBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAppPasswordBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateAppPasswordBadRequestError$Outbound;
}
