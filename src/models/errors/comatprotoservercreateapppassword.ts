/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError";
  }
}

export const ComAtprotoServerCreateAppPasswordError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
} as const;
export type ComAtprotoServerCreateAppPasswordError = ClosedEnum<
  typeof ComAtprotoServerCreateAppPasswordError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerCreateAppPasswordResponseBodyErrorData = {
  error: ComAtprotoServerCreateAppPasswordError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerCreateAppPasswordResponseBodyError
  extends Error
{
  error: ComAtprotoServerCreateAppPasswordError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerCreateAppPasswordResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerCreateAppPasswordResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerCreateAppPasswordResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError
  > = z.instanceof(
    UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerCreateAppPasswordResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateAppPasswordError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateAppPasswordError> = z.nativeEnum(
    ComAtprotoServerCreateAppPasswordError,
  );

/** @internal */
export const ComAtprotoServerCreateAppPasswordError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateAppPasswordError> =
    ComAtprotoServerCreateAppPasswordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAppPasswordError$ {
  /** @deprecated use `ComAtprotoServerCreateAppPasswordError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateAppPasswordError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAppPasswordError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerCreateAppPasswordResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateAppPasswordError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerCreateAppPasswordResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerCreateAppPasswordResponseBodyError
  > = z.instanceof(BadRequestComAtprotoServerCreateAppPasswordResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateAppPasswordError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerCreateAppPasswordResponseBodyError$Outbound;
}
