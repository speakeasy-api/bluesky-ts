/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphGetBlocksAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphGetBlocksAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetBlocksAuthMissingErrorData;

  constructor(
    err: AppBskyGraphGetBlocksAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetBlocksAuthMissingError";
  }
}

export const AppBskyGraphGetBlocksError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphGetBlocksError = ClosedEnum<
  typeof AppBskyGraphGetBlocksError
>;

/**
 * Bad Request
 */
export type AppBskyGraphGetBlocksBadRequestErrorData = {
  error: AppBskyGraphGetBlocksError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphGetBlocksBadRequestError extends BlueskyError {
  error: AppBskyGraphGetBlocksError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetBlocksBadRequestErrorData;

  constructor(
    err: AppBskyGraphGetBlocksBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetBlocksBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphGetBlocksAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphGetBlocksAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetBlocksAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetBlocksAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphGetBlocksAuthMissingError$outboundSchema: z.ZodType<
  AppBskyGraphGetBlocksAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetBlocksAuthMissingError
> = z.instanceof(AppBskyGraphGetBlocksAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetBlocksAuthMissingError$ {
  /** @deprecated use `AppBskyGraphGetBlocksAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetBlocksAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetBlocksAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetBlocksAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetBlocksAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetBlocksAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphGetBlocksError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetBlocksError
> = z.nativeEnum(AppBskyGraphGetBlocksError);

/** @internal */
export const AppBskyGraphGetBlocksError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetBlocksError
> = AppBskyGraphGetBlocksError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetBlocksError$ {
  /** @deprecated use `AppBskyGraphGetBlocksError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetBlocksError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetBlocksError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphGetBlocksError$outboundSchema;
}

/** @internal */
export const AppBskyGraphGetBlocksBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphGetBlocksBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphGetBlocksError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetBlocksBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetBlocksBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphGetBlocksBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphGetBlocksBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetBlocksBadRequestError
> = z.instanceof(AppBskyGraphGetBlocksBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphGetBlocksError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetBlocksBadRequestError$ {
  /** @deprecated use `AppBskyGraphGetBlocksBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetBlocksBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetBlocksBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetBlocksBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetBlocksBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetBlocksBadRequestError$Outbound;
}
