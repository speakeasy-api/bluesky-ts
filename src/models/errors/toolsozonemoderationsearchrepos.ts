/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationSearchReposOzoneModerationResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationSearchReposOzoneModerationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationSearchReposOzoneModerationResponseBodyData;

  constructor(
    err: ToolsOzoneModerationSearchReposOzoneModerationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationSearchReposOzoneModerationResponseBody";
  }
}

export const ToolsOzoneModerationSearchReposError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneModerationSearchReposError = ClosedEnum<
  typeof ToolsOzoneModerationSearchReposError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationSearchReposResponseBodyData = {
  error: ToolsOzoneModerationSearchReposError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationSearchReposResponseBody extends Error {
  error: ToolsOzoneModerationSearchReposError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationSearchReposResponseBodyData;

  constructor(err: ToolsOzoneModerationSearchReposResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationSearchReposResponseBody";
  }
}

/** @internal */
export const ToolsOzoneModerationSearchReposOzoneModerationResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposOzoneModerationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationSearchReposOzoneModerationResponseBody(v);
    });

/** @internal */
export type ToolsOzoneModerationSearchReposOzoneModerationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ToolsOzoneModerationSearchReposOzoneModerationResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposOzoneModerationResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationSearchReposOzoneModerationResponseBody
  > = z.instanceof(ToolsOzoneModerationSearchReposOzoneModerationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationSearchReposOzoneModerationResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationSearchReposOzoneModerationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationSearchReposOzoneModerationResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposOzoneModerationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationSearchReposOzoneModerationResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposOzoneModerationResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationSearchReposOzoneModerationResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneModerationSearchReposError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationSearchReposError> = z.nativeEnum(
    ToolsOzoneModerationSearchReposError,
  );

/** @internal */
export const ToolsOzoneModerationSearchReposError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationSearchReposError> =
    ToolsOzoneModerationSearchReposError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationSearchReposError$ {
  /** @deprecated use `ToolsOzoneModerationSearchReposError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationSearchReposError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationSearchReposError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationSearchReposResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationSearchReposError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationSearchReposResponseBody(v);
    });

/** @internal */
export type ToolsOzoneModerationSearchReposResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationSearchReposResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationSearchReposResponseBody
  > = z.instanceof(ToolsOzoneModerationSearchReposResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationSearchReposError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationSearchReposResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationSearchReposResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationSearchReposResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationSearchReposResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationSearchReposResponseBody$Outbound;
}
