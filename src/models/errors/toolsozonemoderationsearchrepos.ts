/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationSearchReposAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationSearchReposAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationSearchReposAuthMissingErrorData;

  constructor(
    err: ToolsOzoneModerationSearchReposAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationSearchReposAuthMissingError";
  }
}

export const ToolsOzoneModerationSearchReposError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneModerationSearchReposError = ClosedEnum<
  typeof ToolsOzoneModerationSearchReposError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationSearchReposBadRequestErrorData = {
  error: ToolsOzoneModerationSearchReposError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationSearchReposBadRequestError
  extends BlueskyError
{
  error: ToolsOzoneModerationSearchReposError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationSearchReposBadRequestErrorData;

  constructor(
    err: ToolsOzoneModerationSearchReposBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationSearchReposBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneModerationSearchReposAuthMissingError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationSearchReposAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationSearchReposAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneModerationSearchReposAuthMissingError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposAuthMissingError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationSearchReposAuthMissingError
  > = z.instanceof(ToolsOzoneModerationSearchReposAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationSearchReposAuthMissingError$ {
  /** @deprecated use `ToolsOzoneModerationSearchReposAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationSearchReposAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationSearchReposAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposAuthMissingError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationSearchReposAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneModerationSearchReposError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationSearchReposError> = z.nativeEnum(
    ToolsOzoneModerationSearchReposError,
  );

/** @internal */
export const ToolsOzoneModerationSearchReposError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationSearchReposError> =
    ToolsOzoneModerationSearchReposError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationSearchReposError$ {
  /** @deprecated use `ToolsOzoneModerationSearchReposError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationSearchReposError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationSearchReposError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationSearchReposBadRequestError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationSearchReposError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationSearchReposBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationSearchReposBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationSearchReposBadRequestError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationSearchReposBadRequestError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationSearchReposBadRequestError
  > = z.instanceof(ToolsOzoneModerationSearchReposBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationSearchReposError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationSearchReposBadRequestError$ {
  /** @deprecated use `ToolsOzoneModerationSearchReposBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationSearchReposBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationSearchReposBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationSearchReposBadRequestError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationSearchReposBadRequestError$Outbound;
}
