/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError";
  }
}

export const ComAtprotoAdminUpdateSubjectStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminUpdateSubjectStatusError = ClosedEnum<
  typeof ComAtprotoAdminUpdateSubjectStatusError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyErrorData =
  {
    error: ComAtprotoAdminUpdateSubjectStatusError;
    message: string;
  };

/**
 * Bad Request
 */
export class BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError
  extends Error
{
  error: ComAtprotoAdminUpdateSubjectStatusError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError
  > = z.instanceof(
    UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateSubjectStatusError> = z
    .nativeEnum(ComAtprotoAdminUpdateSubjectStatusError);

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateSubjectStatusError> =
    ComAtprotoAdminUpdateSubjectStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateSubjectStatusError$ {
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateSubjectStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateSubjectStatusError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminUpdateSubjectStatusError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError
  > = z.instanceof(
    BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminUpdateSubjectStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoAdminUpdateSubjectStatusResponseBodyError$Outbound;
}
