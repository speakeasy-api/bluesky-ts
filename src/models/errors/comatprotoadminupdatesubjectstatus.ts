/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminUpdateSubjectStatusAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminUpdateSubjectStatusAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateSubjectStatusAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminUpdateSubjectStatusAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateSubjectStatusAuthMissingError";
  }
}

export const ComAtprotoAdminUpdateSubjectStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminUpdateSubjectStatusError = ClosedEnum<
  typeof ComAtprotoAdminUpdateSubjectStatusError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminUpdateSubjectStatusBadRequestErrorData = {
  error: ComAtprotoAdminUpdateSubjectStatusError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminUpdateSubjectStatusBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminUpdateSubjectStatusError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateSubjectStatusBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminUpdateSubjectStatusBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateSubjectStatusBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateSubjectStatusAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateSubjectStatusAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateSubjectStatusAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateSubjectStatusAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateSubjectStatusAuthMissingError
  > = z.instanceof(ComAtprotoAdminUpdateSubjectStatusAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateSubjectStatusAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateSubjectStatusAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateSubjectStatusAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateSubjectStatusAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateSubjectStatusError> = z
    .nativeEnum(ComAtprotoAdminUpdateSubjectStatusError);

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateSubjectStatusError> =
    ComAtprotoAdminUpdateSubjectStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateSubjectStatusError$ {
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateSubjectStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateSubjectStatusError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateSubjectStatusBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminUpdateSubjectStatusError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateSubjectStatusBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateSubjectStatusBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateSubjectStatusBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateSubjectStatusBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateSubjectStatusBadRequestError
  > = z.instanceof(ComAtprotoAdminUpdateSubjectStatusBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminUpdateSubjectStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateSubjectStatusBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateSubjectStatusBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateSubjectStatusBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateSubjectStatusBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateSubjectStatusBadRequestError$Outbound;
}
