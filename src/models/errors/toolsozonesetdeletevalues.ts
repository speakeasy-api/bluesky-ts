/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBodyData;

  constructor(err: ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody";
  }
}

export const ToolsOzoneSetDeleteValuesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  SetNotFound: "SetNotFound",
} as const;
export type ToolsOzoneSetDeleteValuesError = ClosedEnum<
  typeof ToolsOzoneSetDeleteValuesError
>;

/**
 * Bad Request
 */
export type ToolsOzoneSetDeleteValuesResponseBodyData = {
  error: ToolsOzoneSetDeleteValuesError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneSetDeleteValuesResponseBody extends Error {
  error: ToolsOzoneSetDeleteValuesError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSetDeleteValuesResponseBodyData;

  constructor(err: ToolsOzoneSetDeleteValuesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneSetDeleteValuesResponseBody";
  }
}

/** @internal */
export const ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody(v);
    });

/** @internal */
export type ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody
  > = z.instanceof(ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$ {
  /** @deprecated use `ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneSetDeleteValuesToolsOzoneSetResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneSetDeleteValuesError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSetDeleteValuesError
> = z.nativeEnum(ToolsOzoneSetDeleteValuesError);

/** @internal */
export const ToolsOzoneSetDeleteValuesError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSetDeleteValuesError
> = ToolsOzoneSetDeleteValuesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDeleteValuesError$ {
  /** @deprecated use `ToolsOzoneSetDeleteValuesError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetDeleteValuesError$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteValuesError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetDeleteValuesError$outboundSchema;
}

/** @internal */
export const ToolsOzoneSetDeleteValuesResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneSetDeleteValuesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneSetDeleteValuesError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneSetDeleteValuesResponseBody(v);
  });

/** @internal */
export type ToolsOzoneSetDeleteValuesResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneSetDeleteValuesResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneSetDeleteValuesResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetDeleteValuesResponseBody
> = z.instanceof(ToolsOzoneSetDeleteValuesResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ToolsOzoneSetDeleteValuesError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDeleteValuesResponseBody$ {
  /** @deprecated use `ToolsOzoneSetDeleteValuesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSetDeleteValuesResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteValuesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetDeleteValuesResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteValuesResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSetDeleteValuesResponseBody$Outbound;
}
