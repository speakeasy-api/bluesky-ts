/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoSyncRequestCrawlResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoSyncRequestCrawlResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoSyncRequestCrawlResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError";
  }
}

export const ComAtprotoSyncRequestCrawlError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoSyncRequestCrawlError = ClosedEnum<
  typeof ComAtprotoSyncRequestCrawlError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoSyncRequestCrawlResponseBodyErrorData = {
  error: ComAtprotoSyncRequestCrawlError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoSyncRequestCrawlResponseBodyError
  extends Error
{
  error: ComAtprotoSyncRequestCrawlError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoSyncRequestCrawlResponseBodyErrorData;

  constructor(err: BadRequestComAtprotoSyncRequestCrawlResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoSyncRequestCrawlResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoSyncRequestCrawlResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoSyncRequestCrawlError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncRequestCrawlError
> = z.nativeEnum(ComAtprotoSyncRequestCrawlError);

/** @internal */
export const ComAtprotoSyncRequestCrawlError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncRequestCrawlError
> = ComAtprotoSyncRequestCrawlError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncRequestCrawlError$ {
  /** @deprecated use `ComAtprotoSyncRequestCrawlError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncRequestCrawlError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncRequestCrawlError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncRequestCrawlError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoSyncRequestCrawlResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoSyncRequestCrawlResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoSyncRequestCrawlError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoSyncRequestCrawlResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoSyncRequestCrawlResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestComAtprotoSyncRequestCrawlResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoSyncRequestCrawlResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoSyncRequestCrawlResponseBodyError
  > = z.instanceof(BadRequestComAtprotoSyncRequestCrawlResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoSyncRequestCrawlError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoSyncRequestCrawlResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoSyncRequestCrawlResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoSyncRequestCrawlResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoSyncRequestCrawlResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoSyncRequestCrawlResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoSyncRequestCrawlResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoSyncRequestCrawlResponseBodyError$Outbound;
}
