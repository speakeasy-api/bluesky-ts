/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoRepoApplyWritesComAtprotoRepoResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoRepoApplyWritesComAtprotoRepoResponseBodyData;

  constructor(err: ComAtprotoRepoApplyWritesComAtprotoRepoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody";
  }
}

export const ComAtprotoRepoApplyWritesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  InvalidSwap: "InvalidSwap",
} as const;
export type ComAtprotoRepoApplyWritesError = ClosedEnum<
  typeof ComAtprotoRepoApplyWritesError
>;

/**
 * Bad Request
 */
export type ComAtprotoRepoApplyWritesResponseBodyData = {
  error: ComAtprotoRepoApplyWritesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoRepoApplyWritesResponseBody extends Error {
  error: ComAtprotoRepoApplyWritesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoRepoApplyWritesResponseBodyData;

  constructor(err: ComAtprotoRepoApplyWritesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoRepoApplyWritesResponseBody";
  }
}

/** @internal */
export const ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody(v);
    });

/** @internal */
export type ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody
  > = z.instanceof(ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoRepoApplyWritesComAtprotoRepoResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoRepoApplyWritesError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoRepoApplyWritesError
> = z.nativeEnum(ComAtprotoRepoApplyWritesError);

/** @internal */
export const ComAtprotoRepoApplyWritesError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoRepoApplyWritesError
> = ComAtprotoRepoApplyWritesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesError$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoRepoApplyWritesError$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoRepoApplyWritesError$outboundSchema;
}

/** @internal */
export const ComAtprotoRepoApplyWritesResponseBody$inboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoRepoApplyWritesError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoRepoApplyWritesResponseBody(v);
  });

/** @internal */
export type ComAtprotoRepoApplyWritesResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoRepoApplyWritesResponseBody$outboundSchema: z.ZodType<
  ComAtprotoRepoApplyWritesResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoRepoApplyWritesResponseBody
> = z.instanceof(ComAtprotoRepoApplyWritesResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoRepoApplyWritesError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoApplyWritesResponseBody$ {
  /** @deprecated use `ComAtprotoRepoApplyWritesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoRepoApplyWritesResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoRepoApplyWritesResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoRepoApplyWritesResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoRepoApplyWritesResponseBody$Outbound;
}
