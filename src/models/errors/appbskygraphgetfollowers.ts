/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphGetFollowersAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphGetFollowersAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetFollowersAuthMissingErrorData;

  constructor(
    err: AppBskyGraphGetFollowersAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetFollowersAuthMissingError";
  }
}

export const AppBskyGraphGetFollowersError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphGetFollowersError = ClosedEnum<
  typeof AppBskyGraphGetFollowersError
>;

/**
 * Bad Request
 */
export type AppBskyGraphGetFollowersBadRequestErrorData = {
  error: AppBskyGraphGetFollowersError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphGetFollowersBadRequestError extends BlueskyError {
  error: AppBskyGraphGetFollowersError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetFollowersBadRequestErrorData;

  constructor(
    err: AppBskyGraphGetFollowersBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetFollowersBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphGetFollowersAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphGetFollowersAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetFollowersAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetFollowersAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphGetFollowersAuthMissingError$outboundSchema: z.ZodType<
  AppBskyGraphGetFollowersAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetFollowersAuthMissingError
> = z.instanceof(AppBskyGraphGetFollowersAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetFollowersAuthMissingError$ {
  /** @deprecated use `AppBskyGraphGetFollowersAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetFollowersAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowersAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetFollowersAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowersAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetFollowersAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphGetFollowersError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetFollowersError
> = z.nativeEnum(AppBskyGraphGetFollowersError);

/** @internal */
export const AppBskyGraphGetFollowersError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetFollowersError
> = AppBskyGraphGetFollowersError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetFollowersError$ {
  /** @deprecated use `AppBskyGraphGetFollowersError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetFollowersError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowersError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphGetFollowersError$outboundSchema;
}

/** @internal */
export const AppBskyGraphGetFollowersBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphGetFollowersBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphGetFollowersError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetFollowersBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetFollowersBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphGetFollowersBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphGetFollowersBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetFollowersBadRequestError
> = z.instanceof(AppBskyGraphGetFollowersBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphGetFollowersError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetFollowersBadRequestError$ {
  /** @deprecated use `AppBskyGraphGetFollowersBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetFollowersBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowersBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetFollowersBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowersBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetFollowersBadRequestError$Outbound;
}
