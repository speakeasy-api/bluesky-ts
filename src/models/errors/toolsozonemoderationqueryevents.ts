/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationQueryEventsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationQueryEventsAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryEventsAuthMissingErrorData;

  constructor(
    err: ToolsOzoneModerationQueryEventsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationQueryEventsAuthMissingError";
  }
}

export const ToolsOzoneModerationQueryEventsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneModerationQueryEventsError = ClosedEnum<
  typeof ToolsOzoneModerationQueryEventsError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationQueryEventsBadRequestErrorData = {
  error: ToolsOzoneModerationQueryEventsError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationQueryEventsBadRequestError
  extends BlueskyError
{
  error: ToolsOzoneModerationQueryEventsError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryEventsBadRequestErrorData;

  constructor(
    err: ToolsOzoneModerationQueryEventsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationQueryEventsBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneModerationQueryEventsAuthMissingError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryEventsAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationQueryEventsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneModerationQueryEventsAuthMissingError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsAuthMissingError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryEventsAuthMissingError
  > = z.instanceof(ToolsOzoneModerationQueryEventsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryEventsAuthMissingError$ {
  /** @deprecated use `ToolsOzoneModerationQueryEventsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryEventsAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryEventsAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsAuthMissingError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationQueryEventsAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneModerationQueryEventsError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryEventsError> = z.nativeEnum(
    ToolsOzoneModerationQueryEventsError,
  );

/** @internal */
export const ToolsOzoneModerationQueryEventsError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryEventsError> =
    ToolsOzoneModerationQueryEventsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryEventsError$ {
  /** @deprecated use `ToolsOzoneModerationQueryEventsError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryEventsError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryEventsError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationQueryEventsBadRequestError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationQueryEventsError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryEventsBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationQueryEventsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationQueryEventsBadRequestError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsBadRequestError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryEventsBadRequestError
  > = z.instanceof(ToolsOzoneModerationQueryEventsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationQueryEventsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryEventsBadRequestError$ {
  /** @deprecated use `ToolsOzoneModerationQueryEventsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryEventsBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryEventsBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsBadRequestError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationQueryEventsBadRequestError$Outbound;
}
