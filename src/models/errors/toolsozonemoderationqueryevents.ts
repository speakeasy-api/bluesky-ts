/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationQueryEventsModerationResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationQueryEventsModerationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryEventsModerationResponseBodyData;

  constructor(err: ToolsOzoneModerationQueryEventsModerationResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationQueryEventsModerationResponseBody";
  }
}

export const ToolsOzoneModerationQueryEventsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneModerationQueryEventsError = ClosedEnum<
  typeof ToolsOzoneModerationQueryEventsError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationQueryEventsResponseBodyData = {
  error: ToolsOzoneModerationQueryEventsError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationQueryEventsResponseBody extends Error {
  error: ToolsOzoneModerationQueryEventsError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryEventsResponseBodyData;

  constructor(err: ToolsOzoneModerationQueryEventsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationQueryEventsResponseBody";
  }
}

/** @internal */
export const ToolsOzoneModerationQueryEventsModerationResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsModerationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryEventsModerationResponseBody(v);
    });

/** @internal */
export type ToolsOzoneModerationQueryEventsModerationResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneModerationQueryEventsModerationResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsModerationResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryEventsModerationResponseBody
  > = z.instanceof(ToolsOzoneModerationQueryEventsModerationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryEventsModerationResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationQueryEventsModerationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryEventsModerationResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsModerationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryEventsModerationResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsModerationResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationQueryEventsModerationResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneModerationQueryEventsError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryEventsError> = z.nativeEnum(
    ToolsOzoneModerationQueryEventsError,
  );

/** @internal */
export const ToolsOzoneModerationQueryEventsError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryEventsError> =
    ToolsOzoneModerationQueryEventsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryEventsError$ {
  /** @deprecated use `ToolsOzoneModerationQueryEventsError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryEventsError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryEventsError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationQueryEventsResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationQueryEventsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryEventsResponseBody(v);
    });

/** @internal */
export type ToolsOzoneModerationQueryEventsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationQueryEventsResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryEventsResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryEventsResponseBody
  > = z.instanceof(ToolsOzoneModerationQueryEventsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationQueryEventsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryEventsResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationQueryEventsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryEventsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryEventsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryEventsResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationQueryEventsResponseBody$Outbound;
}
