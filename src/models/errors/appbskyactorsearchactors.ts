/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyActorSearchActorsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyActorSearchActorsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorSearchActorsAuthMissingErrorData;

  constructor(
    err: AppBskyActorSearchActorsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorSearchActorsAuthMissingError";
  }
}

export const AppBskyActorSearchActorsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyActorSearchActorsError = ClosedEnum<
  typeof AppBskyActorSearchActorsError
>;

/**
 * Bad Request
 */
export type AppBskyActorSearchActorsBadRequestErrorData = {
  error: AppBskyActorSearchActorsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyActorSearchActorsBadRequestError extends BlueskyError {
  error: AppBskyActorSearchActorsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorSearchActorsBadRequestErrorData;

  constructor(
    err: AppBskyActorSearchActorsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorSearchActorsBadRequestError";
  }
}

/** @internal */
export const AppBskyActorSearchActorsAuthMissingError$inboundSchema: z.ZodType<
  AppBskyActorSearchActorsAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyActorSearchActorsAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyActorSearchActorsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyActorSearchActorsAuthMissingError$outboundSchema: z.ZodType<
  AppBskyActorSearchActorsAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyActorSearchActorsAuthMissingError
> = z.instanceof(AppBskyActorSearchActorsAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsAuthMissingError$ {
  /** @deprecated use `AppBskyActorSearchActorsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorSearchActorsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorSearchActorsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyActorSearchActorsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyActorSearchActorsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyActorSearchActorsError
> = z.nativeEnum(AppBskyActorSearchActorsError);

/** @internal */
export const AppBskyActorSearchActorsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyActorSearchActorsError
> = AppBskyActorSearchActorsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsError$ {
  /** @deprecated use `AppBskyActorSearchActorsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyActorSearchActorsError$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyActorSearchActorsError$outboundSchema;
}

/** @internal */
export const AppBskyActorSearchActorsBadRequestError$inboundSchema: z.ZodType<
  AppBskyActorSearchActorsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyActorSearchActorsError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyActorSearchActorsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyActorSearchActorsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyActorSearchActorsBadRequestError$outboundSchema: z.ZodType<
  AppBskyActorSearchActorsBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyActorSearchActorsBadRequestError
> = z.instanceof(AppBskyActorSearchActorsBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyActorSearchActorsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsBadRequestError$ {
  /** @deprecated use `AppBskyActorSearchActorsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorSearchActorsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorSearchActorsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyActorSearchActorsBadRequestError$Outbound;
}
