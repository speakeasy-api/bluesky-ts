/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncListBlobsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncListBlobsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncListBlobsAuthMissingErrorData;

  constructor(
    err: ComAtprotoSyncListBlobsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncListBlobsAuthMissingError";
  }
}

export const ComAtprotoSyncListBlobsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RepoNotFound: "RepoNotFound",
  RepoTakendown: "RepoTakendown",
  RepoSuspended: "RepoSuspended",
  RepoDeactivated: "RepoDeactivated",
} as const;
export type ComAtprotoSyncListBlobsError = ClosedEnum<
  typeof ComAtprotoSyncListBlobsError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncListBlobsBadRequestErrorData = {
  error: ComAtprotoSyncListBlobsError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncListBlobsBadRequestError extends BlueskyError {
  error: ComAtprotoSyncListBlobsError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncListBlobsBadRequestErrorData;

  constructor(
    err: ComAtprotoSyncListBlobsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncListBlobsBadRequestError";
  }
}

/** @internal */
export const ComAtprotoSyncListBlobsAuthMissingError$inboundSchema: z.ZodType<
  ComAtprotoSyncListBlobsAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncListBlobsAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ComAtprotoSyncListBlobsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncListBlobsAuthMissingError$outboundSchema: z.ZodType<
  ComAtprotoSyncListBlobsAuthMissingError$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncListBlobsAuthMissingError
> = z.instanceof(ComAtprotoSyncListBlobsAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListBlobsAuthMissingError$ {
  /** @deprecated use `ComAtprotoSyncListBlobsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncListBlobsAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListBlobsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncListBlobsAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListBlobsAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncListBlobsAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoSyncListBlobsError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncListBlobsError
> = z.nativeEnum(ComAtprotoSyncListBlobsError);

/** @internal */
export const ComAtprotoSyncListBlobsError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncListBlobsError
> = ComAtprotoSyncListBlobsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListBlobsError$ {
  /** @deprecated use `ComAtprotoSyncListBlobsError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncListBlobsError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListBlobsError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncListBlobsError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncListBlobsBadRequestError$inboundSchema: z.ZodType<
  ComAtprotoSyncListBlobsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoSyncListBlobsError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncListBlobsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ComAtprotoSyncListBlobsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncListBlobsBadRequestError$outboundSchema: z.ZodType<
  ComAtprotoSyncListBlobsBadRequestError$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncListBlobsBadRequestError
> = z.instanceof(ComAtprotoSyncListBlobsBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoSyncListBlobsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListBlobsBadRequestError$ {
  /** @deprecated use `ComAtprotoSyncListBlobsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncListBlobsBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListBlobsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncListBlobsBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListBlobsBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncListBlobsBadRequestError$Outbound;
}
