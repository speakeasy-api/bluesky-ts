/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBodyData;

  constructor(
    err: ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody";
  }
}

export const ComAtprotoIdentitySubmitPlcOperationError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoIdentitySubmitPlcOperationError = ClosedEnum<
  typeof ComAtprotoIdentitySubmitPlcOperationError
>;

/**
 * Bad Request
 */
export type ComAtprotoIdentitySubmitPlcOperationResponseBodyData = {
  error: ComAtprotoIdentitySubmitPlcOperationError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoIdentitySubmitPlcOperationResponseBody extends Error {
  error: ComAtprotoIdentitySubmitPlcOperationError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoIdentitySubmitPlcOperationResponseBodyData;

  constructor(err: ComAtprotoIdentitySubmitPlcOperationResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoIdentitySubmitPlcOperationResponseBody";
  }
}

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody(
        v,
      );
    });

/** @internal */
export type ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody
  > = z.instanceof(
    ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$ {
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoIdentitySubmitPlcOperationAtprotoIdentityResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentitySubmitPlcOperationError> = z
    .nativeEnum(ComAtprotoIdentitySubmitPlcOperationError);

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentitySubmitPlcOperationError> =
    ComAtprotoIdentitySubmitPlcOperationError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentitySubmitPlcOperationError$ {
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentitySubmitPlcOperationError$inboundSchema;
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentitySubmitPlcOperationError$outboundSchema;
}

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoIdentitySubmitPlcOperationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoIdentitySubmitPlcOperationError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoIdentitySubmitPlcOperationResponseBody(v);
    });

/** @internal */
export type ComAtprotoIdentitySubmitPlcOperationResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentitySubmitPlcOperationResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentitySubmitPlcOperationResponseBody
  > = z.instanceof(ComAtprotoIdentitySubmitPlcOperationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoIdentitySubmitPlcOperationError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentitySubmitPlcOperationResponseBody$ {
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentitySubmitPlcOperationResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentitySubmitPlcOperationResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoIdentitySubmitPlcOperationResponseBody$Outbound;
}
