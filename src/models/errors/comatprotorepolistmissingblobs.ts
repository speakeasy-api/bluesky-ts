/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError";
  }
}

export const ComAtprotoRepoListMissingBlobsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoRepoListMissingBlobsError = ClosedEnum<
  typeof ComAtprotoRepoListMissingBlobsError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoRepoListMissingBlobsResponseBodyErrorData = {
  error: ComAtprotoRepoListMissingBlobsError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoRepoListMissingBlobsResponseBodyError
  extends Error
{
  error: ComAtprotoRepoListMissingBlobsError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoRepoListMissingBlobsResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoRepoListMissingBlobsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoRepoListMissingBlobsResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoRepoListMissingBlobsResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoRepoListMissingBlobsError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoRepoListMissingBlobsError
> = z.nativeEnum(ComAtprotoRepoListMissingBlobsError);

/** @internal */
export const ComAtprotoRepoListMissingBlobsError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoRepoListMissingBlobsError> =
    ComAtprotoRepoListMissingBlobsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoListMissingBlobsError$ {
  /** @deprecated use `ComAtprotoRepoListMissingBlobsError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoRepoListMissingBlobsError$inboundSchema;
  /** @deprecated use `ComAtprotoRepoListMissingBlobsError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoRepoListMissingBlobsError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoRepoListMissingBlobsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoRepoListMissingBlobsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoRepoListMissingBlobsResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoRepoListMissingBlobsResponseBodyError
  > = z.instanceof(BadRequestComAtprotoRepoListMissingBlobsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoRepoListMissingBlobsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoRepoListMissingBlobsResponseBodyError$Outbound;
}
