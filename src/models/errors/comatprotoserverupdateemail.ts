/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerUpdateEmailComAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerUpdateEmailComAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerUpdateEmailComAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerUpdateEmailComAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerUpdateEmailComAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerUpdateEmailError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  TokenRequired: "TokenRequired",
} as const;
export type ComAtprotoServerUpdateEmailError = ClosedEnum<
  typeof ComAtprotoServerUpdateEmailError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerUpdateEmailResponseBodyData = {
  error: ComAtprotoServerUpdateEmailError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerUpdateEmailResponseBody extends Error {
  error: ComAtprotoServerUpdateEmailError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerUpdateEmailResponseBodyData;

  constructor(err: ComAtprotoServerUpdateEmailResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerUpdateEmailResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerUpdateEmailComAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerUpdateEmailComAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerUpdateEmailComAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerUpdateEmailComAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerUpdateEmailComAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerUpdateEmailError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerUpdateEmailError
> = z.nativeEnum(ComAtprotoServerUpdateEmailError);

/** @internal */
export const ComAtprotoServerUpdateEmailError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerUpdateEmailError
> = ComAtprotoServerUpdateEmailError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerUpdateEmailError$ {
  /** @deprecated use `ComAtprotoServerUpdateEmailError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerUpdateEmailError$inboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoServerUpdateEmailError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerUpdateEmailResponseBody$inboundSchema: z.ZodType<
  ComAtprotoServerUpdateEmailResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoServerUpdateEmailError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoServerUpdateEmailResponseBody(v);
  });

/** @internal */
export type ComAtprotoServerUpdateEmailResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerUpdateEmailResponseBody$outboundSchema: z.ZodType<
  ComAtprotoServerUpdateEmailResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerUpdateEmailResponseBody
> = z.instanceof(ComAtprotoServerUpdateEmailResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoServerUpdateEmailError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerUpdateEmailResponseBody$ {
  /** @deprecated use `ComAtprotoServerUpdateEmailResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerUpdateEmailResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerUpdateEmailResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerUpdateEmailResponseBody$Outbound;
}
