/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerUpdateEmailAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerUpdateEmailAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerUpdateEmailAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerUpdateEmailAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerUpdateEmailAuthMissingError";
  }
}

export const ComAtprotoServerUpdateEmailError = {
  ExpiredToken: "ExpiredToken",
  InvalidRequest: "InvalidRequest",
  InvalidToken: "InvalidToken",
  TokenRequired: "TokenRequired",
} as const;
export type ComAtprotoServerUpdateEmailError = ClosedEnum<
  typeof ComAtprotoServerUpdateEmailError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerUpdateEmailBadRequestErrorData = {
  error: ComAtprotoServerUpdateEmailError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerUpdateEmailBadRequestError extends BlueskyError {
  error: ComAtprotoServerUpdateEmailError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerUpdateEmailBadRequestErrorData;

  constructor(
    err: ComAtprotoServerUpdateEmailBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerUpdateEmailBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerUpdateEmailAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerUpdateEmailAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerUpdateEmailAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerUpdateEmailAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerUpdateEmailAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerUpdateEmailAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerUpdateEmailAuthMissingError
  > = z.instanceof(ComAtprotoServerUpdateEmailAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerUpdateEmailAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerUpdateEmailAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerUpdateEmailAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerUpdateEmailAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoServerUpdateEmailAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerUpdateEmailError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerUpdateEmailError
> = z.nativeEnum(ComAtprotoServerUpdateEmailError);

/** @internal */
export const ComAtprotoServerUpdateEmailError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerUpdateEmailError
> = ComAtprotoServerUpdateEmailError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerUpdateEmailError$ {
  /** @deprecated use `ComAtprotoServerUpdateEmailError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerUpdateEmailError$inboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoServerUpdateEmailError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerUpdateEmailBadRequestError$inboundSchema:
  z.ZodType<ComAtprotoServerUpdateEmailBadRequestError, z.ZodTypeDef, unknown> =
    z.object({
      error: ComAtprotoServerUpdateEmailError$inboundSchema,
      message: z.string(),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new ComAtprotoServerUpdateEmailBadRequestError(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type ComAtprotoServerUpdateEmailBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerUpdateEmailBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerUpdateEmailBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerUpdateEmailBadRequestError
  > = z.instanceof(ComAtprotoServerUpdateEmailBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerUpdateEmailError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerUpdateEmailBadRequestError$ {
  /** @deprecated use `ComAtprotoServerUpdateEmailBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerUpdateEmailBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerUpdateEmailBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoServerUpdateEmailBadRequestError$Outbound;
}
