/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphGetMutesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphGetMutesAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetMutesAuthMissingErrorData;

  constructor(
    err: AppBskyGraphGetMutesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetMutesAuthMissingError";
  }
}

export const AppBskyGraphGetMutesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphGetMutesError = ClosedEnum<
  typeof AppBskyGraphGetMutesError
>;

/**
 * Bad Request
 */
export type AppBskyGraphGetMutesBadRequestErrorData = {
  error: AppBskyGraphGetMutesError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphGetMutesBadRequestError extends BlueskyError {
  error: AppBskyGraphGetMutesError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetMutesBadRequestErrorData;

  constructor(
    err: AppBskyGraphGetMutesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetMutesBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphGetMutesAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphGetMutesAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetMutesAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetMutesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphGetMutesAuthMissingError$outboundSchema: z.ZodType<
  AppBskyGraphGetMutesAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetMutesAuthMissingError
> = z.instanceof(AppBskyGraphGetMutesAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetMutesAuthMissingError$ {
  /** @deprecated use `AppBskyGraphGetMutesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetMutesAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetMutesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetMutesAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetMutesAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetMutesAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphGetMutesError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetMutesError
> = z.nativeEnum(AppBskyGraphGetMutesError);

/** @internal */
export const AppBskyGraphGetMutesError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetMutesError
> = AppBskyGraphGetMutesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetMutesError$ {
  /** @deprecated use `AppBskyGraphGetMutesError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetMutesError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetMutesError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphGetMutesError$outboundSchema;
}

/** @internal */
export const AppBskyGraphGetMutesBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphGetMutesBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphGetMutesError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetMutesBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetMutesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphGetMutesBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphGetMutesBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetMutesBadRequestError
> = z.instanceof(AppBskyGraphGetMutesBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphGetMutesError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetMutesBadRequestError$ {
  /** @deprecated use `AppBskyGraphGetMutesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetMutesBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetMutesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetMutesBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetMutesBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetMutesBadRequestError$Outbound;
}
