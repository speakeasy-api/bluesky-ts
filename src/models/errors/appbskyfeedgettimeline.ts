/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetTimelineAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetTimelineAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetTimelineAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetTimelineAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetTimelineAuthMissingError";
  }
}

export const AppBskyFeedGetTimelineError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetTimelineError = ClosedEnum<
  typeof AppBskyFeedGetTimelineError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetTimelineBadRequestErrorData = {
  error: AppBskyFeedGetTimelineError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetTimelineBadRequestError extends BlueskyError {
  error: AppBskyFeedGetTimelineError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetTimelineBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetTimelineBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetTimelineBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetTimelineAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetTimelineAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetTimelineAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetTimelineAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetTimelineAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetTimelineAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetTimelineAuthMissingError
> = z.instanceof(AppBskyFeedGetTimelineAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetTimelineAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetTimelineAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetTimelineAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetTimelineAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetTimelineAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetTimelineAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetTimelineAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetTimelineError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetTimelineError
> = z.nativeEnum(AppBskyFeedGetTimelineError);

/** @internal */
export const AppBskyFeedGetTimelineError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetTimelineError
> = AppBskyFeedGetTimelineError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetTimelineError$ {
  /** @deprecated use `AppBskyFeedGetTimelineError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetTimelineError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetTimelineError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetTimelineError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetTimelineBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetTimelineBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetTimelineError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetTimelineBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetTimelineBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetTimelineBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetTimelineBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetTimelineBadRequestError
> = z.instanceof(AppBskyFeedGetTimelineBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetTimelineError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetTimelineBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetTimelineBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetTimelineBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetTimelineBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetTimelineBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetTimelineBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetTimelineBadRequestError$Outbound;
}
