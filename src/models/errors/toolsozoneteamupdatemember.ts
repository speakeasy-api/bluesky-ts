/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneTeamUpdateMemberAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneTeamUpdateMemberAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamUpdateMemberAuthMissingErrorData;

  constructor(
    err: ToolsOzoneTeamUpdateMemberAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneTeamUpdateMemberAuthMissingError";
  }
}

export const ToolsOzoneTeamUpdateMemberError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  MemberNotFound: "MemberNotFound",
} as const;
export type ToolsOzoneTeamUpdateMemberError = ClosedEnum<
  typeof ToolsOzoneTeamUpdateMemberError
>;

/**
 * Bad Request
 */
export type ToolsOzoneTeamUpdateMemberBadRequestErrorData = {
  error: ToolsOzoneTeamUpdateMemberError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneTeamUpdateMemberBadRequestError extends BlueskyError {
  error: ToolsOzoneTeamUpdateMemberError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamUpdateMemberBadRequestErrorData;

  constructor(
    err: ToolsOzoneTeamUpdateMemberBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneTeamUpdateMemberBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberAuthMissingError$inboundSchema:
  z.ZodType<ToolsOzoneTeamUpdateMemberAuthMissingError, z.ZodTypeDef, unknown> =
    z.object({
      error: z.literal("AuthMissing").default("AuthMissing"),
      message: z.string(),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new ToolsOzoneTeamUpdateMemberAuthMissingError(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type ToolsOzoneTeamUpdateMemberAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneTeamUpdateMemberAuthMissingError$outboundSchema:
  z.ZodType<
    ToolsOzoneTeamUpdateMemberAuthMissingError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneTeamUpdateMemberAuthMissingError
  > = z.instanceof(ToolsOzoneTeamUpdateMemberAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberAuthMissingError$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamUpdateMemberAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamUpdateMemberAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberAuthMissingError$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamUpdateMemberAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberError
> = z.nativeEnum(ToolsOzoneTeamUpdateMemberError);

/** @internal */
export const ToolsOzoneTeamUpdateMemberError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberError
> = ToolsOzoneTeamUpdateMemberError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberError$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamUpdateMemberError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamUpdateMemberError$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberBadRequestError$inboundSchema: z.ZodType<
  ToolsOzoneTeamUpdateMemberBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneTeamUpdateMemberError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneTeamUpdateMemberBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ToolsOzoneTeamUpdateMemberBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneTeamUpdateMemberBadRequestError$outboundSchema:
  z.ZodType<
    ToolsOzoneTeamUpdateMemberBadRequestError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneTeamUpdateMemberBadRequestError
  > = z.instanceof(ToolsOzoneTeamUpdateMemberBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneTeamUpdateMemberError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberBadRequestError$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamUpdateMemberBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamUpdateMemberBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberBadRequestError$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamUpdateMemberBadRequestError$Outbound;
}
