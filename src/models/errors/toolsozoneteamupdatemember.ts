/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBodyData;

  constructor(err: ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody";
  }
}

export const ToolsOzoneTeamUpdateMemberError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  MemberNotFound: "MemberNotFound",
} as const;
export type ToolsOzoneTeamUpdateMemberError = ClosedEnum<
  typeof ToolsOzoneTeamUpdateMemberError
>;

/**
 * Bad Request
 */
export type ToolsOzoneTeamUpdateMemberResponseBodyData = {
  error: ToolsOzoneTeamUpdateMemberError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneTeamUpdateMemberResponseBody extends Error {
  error: ToolsOzoneTeamUpdateMemberError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamUpdateMemberResponseBodyData;

  constructor(err: ToolsOzoneTeamUpdateMemberResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneTeamUpdateMemberResponseBody";
  }
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody(v);
    });

/** @internal */
export type ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody
  > = z.instanceof(ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneTeamUpdateMemberToolsOzoneTeamResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberError
> = z.nativeEnum(ToolsOzoneTeamUpdateMemberError);

/** @internal */
export const ToolsOzoneTeamUpdateMemberError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberError
> = ToolsOzoneTeamUpdateMemberError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberError$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamUpdateMemberError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamUpdateMemberError$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneTeamUpdateMemberResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneTeamUpdateMemberError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneTeamUpdateMemberResponseBody(v);
  });

/** @internal */
export type ToolsOzoneTeamUpdateMemberResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneTeamUpdateMemberResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneTeamUpdateMemberResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneTeamUpdateMemberResponseBody
> = z.instanceof(ToolsOzoneTeamUpdateMemberResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ToolsOzoneTeamUpdateMemberError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberResponseBody$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamUpdateMemberResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamUpdateMemberResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamUpdateMemberResponseBody$Outbound;
}
