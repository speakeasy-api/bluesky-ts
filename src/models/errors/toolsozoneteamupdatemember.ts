/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyErrorData;

  constructor(
    err: UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError";
  }
}

export const ToolsOzoneTeamUpdateMemberError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  MemberNotFound: "MemberNotFound",
} as const;
export type ToolsOzoneTeamUpdateMemberError = ClosedEnum<
  typeof ToolsOzoneTeamUpdateMemberError
>;

/**
 * Bad Request
 */
export type BadRequestToolsOzoneTeamUpdateMemberResponseBodyErrorData = {
  error: ToolsOzoneTeamUpdateMemberError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestToolsOzoneTeamUpdateMemberResponseBodyError
  extends Error
{
  error: ToolsOzoneTeamUpdateMemberError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestToolsOzoneTeamUpdateMemberResponseBodyErrorData;

  constructor(err: BadRequestToolsOzoneTeamUpdateMemberResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestToolsOzoneTeamUpdateMemberResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError
  > = z.instanceof(UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$ {
  /** @deprecated use `UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedToolsOzoneTeamUpdateMemberResponseBodyError$Outbound;
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberError
> = z.nativeEnum(ToolsOzoneTeamUpdateMemberError);

/** @internal */
export const ToolsOzoneTeamUpdateMemberError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberError
> = ToolsOzoneTeamUpdateMemberError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberError$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamUpdateMemberError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamUpdateMemberError$outboundSchema;
}

/** @internal */
export const BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestToolsOzoneTeamUpdateMemberResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneTeamUpdateMemberError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestToolsOzoneTeamUpdateMemberResponseBodyError(v);
    });

/** @internal */
export type BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestToolsOzoneTeamUpdateMemberResponseBodyError
  > = z.instanceof(BadRequestToolsOzoneTeamUpdateMemberResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneTeamUpdateMemberError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$ {
  /** @deprecated use `BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestToolsOzoneTeamUpdateMemberResponseBodyError$Outbound;
}
