/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoRepoImportRepoResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoRepoImportRepoResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoRepoImportRepoResponseBodyErrorData;

  constructor(err: UnauthorizedComAtprotoRepoImportRepoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoRepoImportRepoResponseBodyError";
  }
}

export const ComAtprotoRepoImportRepoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoRepoImportRepoError = ClosedEnum<
  typeof ComAtprotoRepoImportRepoError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoRepoImportRepoResponseBodyErrorData = {
  error: ComAtprotoRepoImportRepoError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoRepoImportRepoResponseBodyError extends Error {
  error: ComAtprotoRepoImportRepoError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoRepoImportRepoResponseBodyErrorData;

  constructor(err: BadRequestComAtprotoRepoImportRepoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoRepoImportRepoResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoRepoImportRepoResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoRepoImportRepoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoRepoImportRepoResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoRepoImportRepoResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedComAtprotoRepoImportRepoResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoRepoImportRepoResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoRepoImportRepoResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoRepoImportRepoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoRepoImportRepoResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoRepoImportRepoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoRepoImportRepoResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoRepoImportRepoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoRepoImportRepoResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoRepoImportRepoResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoRepoImportRepoResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoRepoImportRepoError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoRepoImportRepoError
> = z.nativeEnum(ComAtprotoRepoImportRepoError);

/** @internal */
export const ComAtprotoRepoImportRepoError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoRepoImportRepoError
> = ComAtprotoRepoImportRepoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoImportRepoError$ {
  /** @deprecated use `ComAtprotoRepoImportRepoError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoRepoImportRepoError$inboundSchema;
  /** @deprecated use `ComAtprotoRepoImportRepoError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoRepoImportRepoError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoRepoImportRepoResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoRepoImportRepoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoRepoImportRepoError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoRepoImportRepoResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoRepoImportRepoResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestComAtprotoRepoImportRepoResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoRepoImportRepoResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoRepoImportRepoResponseBodyError
  > = z.instanceof(BadRequestComAtprotoRepoImportRepoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoRepoImportRepoError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoRepoImportRepoResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoRepoImportRepoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoRepoImportRepoResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoRepoImportRepoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoRepoImportRepoResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoRepoImportRepoResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoRepoImportRepoResponseBodyError$Outbound;
}
