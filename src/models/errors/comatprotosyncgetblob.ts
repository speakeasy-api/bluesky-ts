/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncGetBlobComAtprotoSyncResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncGetBlobComAtprotoSyncResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetBlobComAtprotoSyncResponseBodyData;

  constructor(err: ComAtprotoSyncGetBlobComAtprotoSyncResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetBlobComAtprotoSyncResponseBody";
  }
}

export const ComAtprotoSyncGetBlobError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BlobNotFound: "BlobNotFound",
  RepoNotFound: "RepoNotFound",
  RepoTakendown: "RepoTakendown",
  RepoSuspended: "RepoSuspended",
  RepoDeactivated: "RepoDeactivated",
} as const;
export type ComAtprotoSyncGetBlobError = ClosedEnum<
  typeof ComAtprotoSyncGetBlobError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncGetBlobResponseBodyData = {
  error: ComAtprotoSyncGetBlobError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncGetBlobResponseBody extends Error {
  error: ComAtprotoSyncGetBlobError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetBlobResponseBodyData;

  constructor(err: ComAtprotoSyncGetBlobResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetBlobResponseBody";
  }
}

/** @internal */
export const ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoSyncGetBlobComAtprotoSyncResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncGetBlobComAtprotoSyncResponseBody(v);
    });

/** @internal */
export type ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetBlobComAtprotoSyncResponseBody
  > = z.instanceof(ComAtprotoSyncGetBlobComAtprotoSyncResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoSyncGetBlobComAtprotoSyncResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoSyncGetBlobError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetBlobError
> = z.nativeEnum(ComAtprotoSyncGetBlobError);

/** @internal */
export const ComAtprotoSyncGetBlobError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetBlobError
> = ComAtprotoSyncGetBlobError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetBlobError$ {
  /** @deprecated use `ComAtprotoSyncGetBlobError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetBlobError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlobError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetBlobError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncGetBlobResponseBody$inboundSchema: z.ZodType<
  ComAtprotoSyncGetBlobResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoSyncGetBlobError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncGetBlobResponseBody(v);
  });

/** @internal */
export type ComAtprotoSyncGetBlobResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetBlobResponseBody$outboundSchema: z.ZodType<
  ComAtprotoSyncGetBlobResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetBlobResponseBody
> = z.instanceof(ComAtprotoSyncGetBlobResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoSyncGetBlobError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetBlobResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetBlobResponseBody$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetBlobResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlobResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetBlobResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlobResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetBlobResponseBody$Outbound;
}
