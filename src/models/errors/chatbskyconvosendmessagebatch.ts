/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ChatBskyConvoSendMessageBatchAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ChatBskyConvoSendMessageBatchAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoSendMessageBatchAuthMissingErrorData;

  constructor(
    err: ChatBskyConvoSendMessageBatchAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ChatBskyConvoSendMessageBatchAuthMissingError";
  }
}

export const ChatBskyConvoSendMessageBatchError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoSendMessageBatchError = ClosedEnum<
  typeof ChatBskyConvoSendMessageBatchError
>;

/**
 * Bad Request
 */
export type ChatBskyConvoSendMessageBatchBadRequestErrorData = {
  error: ChatBskyConvoSendMessageBatchError;
  message: string;
};

/**
 * Bad Request
 */
export class ChatBskyConvoSendMessageBatchBadRequestError extends BlueskyError {
  error: ChatBskyConvoSendMessageBatchError;

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoSendMessageBatchBadRequestErrorData;

  constructor(
    err: ChatBskyConvoSendMessageBatchBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ChatBskyConvoSendMessageBatchBadRequestError";
  }
}

/** @internal */
export const ChatBskyConvoSendMessageBatchAuthMissingError$inboundSchema:
  z.ZodType<
    ChatBskyConvoSendMessageBatchAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoSendMessageBatchAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ChatBskyConvoSendMessageBatchAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchAuthMissingError$outboundSchema:
  z.ZodType<
    ChatBskyConvoSendMessageBatchAuthMissingError$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoSendMessageBatchAuthMissingError
  > = z.instanceof(ChatBskyConvoSendMessageBatchAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBatchAuthMissingError$ {
  /** @deprecated use `ChatBskyConvoSendMessageBatchAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoSendMessageBatchAuthMissingError$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageBatchAuthMissingError$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchAuthMissingError$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageBatchAuthMissingError$Outbound;
}

/** @internal */
export const ChatBskyConvoSendMessageBatchError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoSendMessageBatchError
> = z.nativeEnum(ChatBskyConvoSendMessageBatchError);

/** @internal */
export const ChatBskyConvoSendMessageBatchError$outboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoSendMessageBatchError
> = ChatBskyConvoSendMessageBatchError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBatchError$ {
  /** @deprecated use `ChatBskyConvoSendMessageBatchError$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoSendMessageBatchError$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageBatchError$outboundSchema;
}

/** @internal */
export const ChatBskyConvoSendMessageBatchBadRequestError$inboundSchema:
  z.ZodType<
    ChatBskyConvoSendMessageBatchBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoSendMessageBatchError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoSendMessageBatchBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ChatBskyConvoSendMessageBatchBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchBadRequestError$outboundSchema:
  z.ZodType<
    ChatBskyConvoSendMessageBatchBadRequestError$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoSendMessageBatchBadRequestError
  > = z.instanceof(ChatBskyConvoSendMessageBatchBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoSendMessageBatchError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBatchBadRequestError$ {
  /** @deprecated use `ChatBskyConvoSendMessageBatchBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoSendMessageBatchBadRequestError$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageBatchBadRequestError$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchBadRequestError$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageBatchBadRequestError$Outbound;
}
