/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ChatBskyConvoDeleteMessageForSelfAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ChatBskyConvoDeleteMessageForSelfAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoDeleteMessageForSelfAuthMissingErrorData;

  constructor(
    err: ChatBskyConvoDeleteMessageForSelfAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ChatBskyConvoDeleteMessageForSelfAuthMissingError";
  }
}

export const ChatBskyConvoDeleteMessageForSelfError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoDeleteMessageForSelfError = ClosedEnum<
  typeof ChatBskyConvoDeleteMessageForSelfError
>;

/**
 * Bad Request
 */
export type ChatBskyConvoDeleteMessageForSelfBadRequestErrorData = {
  error: ChatBskyConvoDeleteMessageForSelfError;
  message: string;
};

/**
 * Bad Request
 */
export class ChatBskyConvoDeleteMessageForSelfBadRequestError
  extends BlueskyError
{
  error: ChatBskyConvoDeleteMessageForSelfError;

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoDeleteMessageForSelfBadRequestErrorData;

  constructor(
    err: ChatBskyConvoDeleteMessageForSelfBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ChatBskyConvoDeleteMessageForSelfBadRequestError";
  }
}

/** @internal */
export const ChatBskyConvoDeleteMessageForSelfAuthMissingError$inboundSchema:
  z.ZodType<
    ChatBskyConvoDeleteMessageForSelfAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoDeleteMessageForSelfAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ChatBskyConvoDeleteMessageForSelfAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ChatBskyConvoDeleteMessageForSelfAuthMissingError$outboundSchema:
  z.ZodType<
    ChatBskyConvoDeleteMessageForSelfAuthMissingError$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoDeleteMessageForSelfAuthMissingError
  > = z.instanceof(ChatBskyConvoDeleteMessageForSelfAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoDeleteMessageForSelfAuthMissingError$ {
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoDeleteMessageForSelfAuthMissingError$inboundSchema;
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoDeleteMessageForSelfAuthMissingError$outboundSchema;
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfAuthMissingError$Outbound` instead. */
  export type Outbound =
    ChatBskyConvoDeleteMessageForSelfAuthMissingError$Outbound;
}

/** @internal */
export const ChatBskyConvoDeleteMessageForSelfError$inboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoDeleteMessageForSelfError> = z.nativeEnum(
    ChatBskyConvoDeleteMessageForSelfError,
  );

/** @internal */
export const ChatBskyConvoDeleteMessageForSelfError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoDeleteMessageForSelfError> =
    ChatBskyConvoDeleteMessageForSelfError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoDeleteMessageForSelfError$ {
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoDeleteMessageForSelfError$inboundSchema;
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoDeleteMessageForSelfError$outboundSchema;
}

/** @internal */
export const ChatBskyConvoDeleteMessageForSelfBadRequestError$inboundSchema:
  z.ZodType<
    ChatBskyConvoDeleteMessageForSelfBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoDeleteMessageForSelfError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoDeleteMessageForSelfBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ChatBskyConvoDeleteMessageForSelfBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ChatBskyConvoDeleteMessageForSelfBadRequestError$outboundSchema:
  z.ZodType<
    ChatBskyConvoDeleteMessageForSelfBadRequestError$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoDeleteMessageForSelfBadRequestError
  > = z.instanceof(ChatBskyConvoDeleteMessageForSelfBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoDeleteMessageForSelfError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoDeleteMessageForSelfBadRequestError$ {
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoDeleteMessageForSelfBadRequestError$inboundSchema;
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoDeleteMessageForSelfBadRequestError$outboundSchema;
  /** @deprecated use `ChatBskyConvoDeleteMessageForSelfBadRequestError$Outbound` instead. */
  export type Outbound =
    ChatBskyConvoDeleteMessageForSelfBadRequestError$Outbound;
}
