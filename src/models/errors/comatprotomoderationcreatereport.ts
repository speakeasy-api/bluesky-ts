/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoModerationCreateReportResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoModerationCreateReportResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoModerationCreateReportResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoModerationCreateReportResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoModerationCreateReportResponseBodyError";
  }
}

export const ComAtprotoModerationCreateReportError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoModerationCreateReportError = ClosedEnum<
  typeof ComAtprotoModerationCreateReportError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoModerationCreateReportResponseBodyErrorData = {
  error: ComAtprotoModerationCreateReportError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoModerationCreateReportResponseBodyError
  extends Error
{
  error: ComAtprotoModerationCreateReportError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoModerationCreateReportResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoModerationCreateReportResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoModerationCreateReportResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoModerationCreateReportResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoModerationCreateReportResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoModerationCreateReportResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoModerationCreateReportResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoModerationCreateReportResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoModerationCreateReportResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoModerationCreateReportResponseBodyError
  > = z.instanceof(
    UnauthorizedComAtprotoModerationCreateReportResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoModerationCreateReportResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoModerationCreateReportResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoModerationCreateReportResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoModerationCreateReportResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoModerationCreateReportResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoModerationCreateReportResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoModerationCreateReportResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoModerationCreateReportError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoModerationCreateReportError> = z.nativeEnum(
    ComAtprotoModerationCreateReportError,
  );

/** @internal */
export const ComAtprotoModerationCreateReportError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoModerationCreateReportError> =
    ComAtprotoModerationCreateReportError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportError$ {
  /** @deprecated use `ComAtprotoModerationCreateReportError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportError$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoModerationCreateReportResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoModerationCreateReportResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoModerationCreateReportError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoModerationCreateReportResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoModerationCreateReportResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoModerationCreateReportResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoModerationCreateReportResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoModerationCreateReportResponseBodyError
  > = z.instanceof(BadRequestComAtprotoModerationCreateReportResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoModerationCreateReportError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoModerationCreateReportResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoModerationCreateReportResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoModerationCreateReportResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoModerationCreateReportResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoModerationCreateReportResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoModerationCreateReportResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoModerationCreateReportResponseBodyError$Outbound;
}
