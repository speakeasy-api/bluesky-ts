/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoModerationCreateReportAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoModerationCreateReportAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoModerationCreateReportAuthMissingErrorData;

  constructor(
    err: ComAtprotoModerationCreateReportAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoModerationCreateReportAuthMissingError";
  }
}

export const ComAtprotoModerationCreateReportError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoModerationCreateReportError = ClosedEnum<
  typeof ComAtprotoModerationCreateReportError
>;

/**
 * Bad Request
 */
export type ComAtprotoModerationCreateReportBadRequestErrorData = {
  error: ComAtprotoModerationCreateReportError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoModerationCreateReportBadRequestError
  extends BlueskyError
{
  error: ComAtprotoModerationCreateReportError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoModerationCreateReportBadRequestErrorData;

  constructor(
    err: ComAtprotoModerationCreateReportBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoModerationCreateReportBadRequestError";
  }
}

/** @internal */
export const ComAtprotoModerationCreateReportAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoModerationCreateReportAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoModerationCreateReportAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoModerationCreateReportAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoModerationCreateReportAuthMissingError
  > = z.instanceof(ComAtprotoModerationCreateReportAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportAuthMissingError$ {
  /** @deprecated use `ComAtprotoModerationCreateReportAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoModerationCreateReportAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoModerationCreateReportError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoModerationCreateReportError> = z.nativeEnum(
    ComAtprotoModerationCreateReportError,
  );

/** @internal */
export const ComAtprotoModerationCreateReportError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoModerationCreateReportError> =
    ComAtprotoModerationCreateReportError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportError$ {
  /** @deprecated use `ComAtprotoModerationCreateReportError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportError$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportError$outboundSchema;
}

/** @internal */
export const ComAtprotoModerationCreateReportBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoModerationCreateReportError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoModerationCreateReportBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoModerationCreateReportBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoModerationCreateReportBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoModerationCreateReportBadRequestError
  > = z.instanceof(ComAtprotoModerationCreateReportBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoModerationCreateReportError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportBadRequestError$ {
  /** @deprecated use `ComAtprotoModerationCreateReportBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoModerationCreateReportBadRequestError$Outbound;
}
