/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedSearchPostsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedSearchPostsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedSearchPostsAuthMissingErrorData;

  constructor(
    err: AppBskyFeedSearchPostsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedSearchPostsAuthMissingError";
  }
}

export const AppBskyFeedSearchPostsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BadQueryString: "BadQueryString",
} as const;
export type AppBskyFeedSearchPostsError = ClosedEnum<
  typeof AppBskyFeedSearchPostsError
>;

/**
 * Bad Request
 */
export type AppBskyFeedSearchPostsBadRequestErrorData = {
  error: AppBskyFeedSearchPostsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedSearchPostsBadRequestError extends BlueskyError {
  error: AppBskyFeedSearchPostsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedSearchPostsBadRequestErrorData;

  constructor(
    err: AppBskyFeedSearchPostsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedSearchPostsBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedSearchPostsAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedSearchPostsAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedSearchPostsAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedSearchPostsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedSearchPostsAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedSearchPostsAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedSearchPostsAuthMissingError
> = z.instanceof(AppBskyFeedSearchPostsAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSearchPostsAuthMissingError$ {
  /** @deprecated use `AppBskyFeedSearchPostsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedSearchPostsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedSearchPostsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedSearchPostsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedSearchPostsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedSearchPostsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedSearchPostsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSearchPostsError
> = z.nativeEnum(AppBskyFeedSearchPostsError);

/** @internal */
export const AppBskyFeedSearchPostsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSearchPostsError
> = AppBskyFeedSearchPostsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSearchPostsError$ {
  /** @deprecated use `AppBskyFeedSearchPostsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedSearchPostsError$inboundSchema;
  /** @deprecated use `AppBskyFeedSearchPostsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedSearchPostsError$outboundSchema;
}

/** @internal */
export const AppBskyFeedSearchPostsBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedSearchPostsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedSearchPostsError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedSearchPostsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedSearchPostsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedSearchPostsBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedSearchPostsBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedSearchPostsBadRequestError
> = z.instanceof(AppBskyFeedSearchPostsBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedSearchPostsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSearchPostsBadRequestError$ {
  /** @deprecated use `AppBskyFeedSearchPostsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedSearchPostsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedSearchPostsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedSearchPostsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedSearchPostsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedSearchPostsBadRequestError$Outbound;
}
