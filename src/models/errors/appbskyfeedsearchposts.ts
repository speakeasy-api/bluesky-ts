/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedAppBskyFeedSearchPostsResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedAppBskyFeedSearchPostsResponseBodyError extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedAppBskyFeedSearchPostsResponseBodyErrorData;

  constructor(err: UnauthorizedAppBskyFeedSearchPostsResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedAppBskyFeedSearchPostsResponseBodyError";
  }
}

export const AppBskyFeedSearchPostsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BadQueryString: "BadQueryString",
} as const;
export type AppBskyFeedSearchPostsError = ClosedEnum<
  typeof AppBskyFeedSearchPostsError
>;

/**
 * Bad Request
 */
export type BadRequestAppBskyFeedSearchPostsResponseBodyErrorData = {
  error: AppBskyFeedSearchPostsError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestAppBskyFeedSearchPostsResponseBodyError extends Error {
  error: AppBskyFeedSearchPostsError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestAppBskyFeedSearchPostsResponseBodyErrorData;

  constructor(err: BadRequestAppBskyFeedSearchPostsResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestAppBskyFeedSearchPostsResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedAppBskyFeedSearchPostsResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedAppBskyFeedSearchPostsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedAppBskyFeedSearchPostsResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedAppBskyFeedSearchPostsResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedAppBskyFeedSearchPostsResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedAppBskyFeedSearchPostsResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedAppBskyFeedSearchPostsResponseBodyError
  > = z.instanceof(UnauthorizedAppBskyFeedSearchPostsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedAppBskyFeedSearchPostsResponseBodyError$ {
  /** @deprecated use `UnauthorizedAppBskyFeedSearchPostsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedAppBskyFeedSearchPostsResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedAppBskyFeedSearchPostsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedAppBskyFeedSearchPostsResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedAppBskyFeedSearchPostsResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedAppBskyFeedSearchPostsResponseBodyError$Outbound;
}

/** @internal */
export const AppBskyFeedSearchPostsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSearchPostsError
> = z.nativeEnum(AppBskyFeedSearchPostsError);

/** @internal */
export const AppBskyFeedSearchPostsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSearchPostsError
> = AppBskyFeedSearchPostsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSearchPostsError$ {
  /** @deprecated use `AppBskyFeedSearchPostsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedSearchPostsError$inboundSchema;
  /** @deprecated use `AppBskyFeedSearchPostsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedSearchPostsError$outboundSchema;
}

/** @internal */
export const BadRequestAppBskyFeedSearchPostsResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestAppBskyFeedSearchPostsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyFeedSearchPostsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestAppBskyFeedSearchPostsResponseBodyError(v);
    });

/** @internal */
export type BadRequestAppBskyFeedSearchPostsResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestAppBskyFeedSearchPostsResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestAppBskyFeedSearchPostsResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestAppBskyFeedSearchPostsResponseBodyError
  > = z.instanceof(BadRequestAppBskyFeedSearchPostsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyFeedSearchPostsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestAppBskyFeedSearchPostsResponseBodyError$ {
  /** @deprecated use `BadRequestAppBskyFeedSearchPostsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestAppBskyFeedSearchPostsResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestAppBskyFeedSearchPostsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestAppBskyFeedSearchPostsResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestAppBskyFeedSearchPostsResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestAppBskyFeedSearchPostsResponseBodyError$Outbound;
}
