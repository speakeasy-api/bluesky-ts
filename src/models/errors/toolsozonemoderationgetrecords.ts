/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationGetRecordsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationGetRecordsAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationGetRecordsAuthMissingErrorData;

  constructor(
    err: ToolsOzoneModerationGetRecordsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationGetRecordsAuthMissingError";
  }
}

export const ToolsOzoneModerationGetRecordsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneModerationGetRecordsError = ClosedEnum<
  typeof ToolsOzoneModerationGetRecordsError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationGetRecordsBadRequestErrorData = {
  error: ToolsOzoneModerationGetRecordsError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationGetRecordsBadRequestError
  extends BlueskyError
{
  error: ToolsOzoneModerationGetRecordsError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationGetRecordsBadRequestErrorData;

  constructor(
    err: ToolsOzoneModerationGetRecordsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationGetRecordsBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneModerationGetRecordsAuthMissingError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationGetRecordsAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationGetRecordsAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationGetRecordsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneModerationGetRecordsAuthMissingError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationGetRecordsAuthMissingError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationGetRecordsAuthMissingError
  > = z.instanceof(ToolsOzoneModerationGetRecordsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetRecordsAuthMissingError$ {
  /** @deprecated use `ToolsOzoneModerationGetRecordsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationGetRecordsAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRecordsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationGetRecordsAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRecordsAuthMissingError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationGetRecordsAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneModerationGetRecordsError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneModerationGetRecordsError
> = z.nativeEnum(ToolsOzoneModerationGetRecordsError);

/** @internal */
export const ToolsOzoneModerationGetRecordsError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationGetRecordsError> =
    ToolsOzoneModerationGetRecordsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetRecordsError$ {
  /** @deprecated use `ToolsOzoneModerationGetRecordsError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationGetRecordsError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRecordsError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationGetRecordsError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationGetRecordsBadRequestError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationGetRecordsBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationGetRecordsError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationGetRecordsBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationGetRecordsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationGetRecordsBadRequestError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationGetRecordsBadRequestError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationGetRecordsBadRequestError
  > = z.instanceof(ToolsOzoneModerationGetRecordsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationGetRecordsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetRecordsBadRequestError$ {
  /** @deprecated use `ToolsOzoneModerationGetRecordsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationGetRecordsBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRecordsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationGetRecordsBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetRecordsBadRequestError$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationGetRecordsBadRequestError$Outbound;
}
