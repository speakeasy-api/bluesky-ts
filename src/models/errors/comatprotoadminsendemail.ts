/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminSendEmailAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminSendEmailAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminSendEmailAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminSendEmailAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminSendEmailAuthMissingError";
  }
}

export const ComAtprotoAdminSendEmailError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminSendEmailError = ClosedEnum<
  typeof ComAtprotoAdminSendEmailError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminSendEmailBadRequestErrorData = {
  error: ComAtprotoAdminSendEmailError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminSendEmailBadRequestError extends BlueskyError {
  error: ComAtprotoAdminSendEmailError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminSendEmailBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminSendEmailBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminSendEmailBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminSendEmailAuthMissingError$inboundSchema: z.ZodType<
  ComAtprotoAdminSendEmailAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ComAtprotoAdminSendEmailAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ComAtprotoAdminSendEmailAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminSendEmailAuthMissingError$outboundSchema: z.ZodType<
  ComAtprotoAdminSendEmailAuthMissingError$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminSendEmailAuthMissingError
> = z.instanceof(ComAtprotoAdminSendEmailAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminSendEmailAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminSendEmailAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminSendEmailAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminSendEmailAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminSendEmailAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminSendEmailAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminSendEmailAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminSendEmailError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminSendEmailError
> = z.nativeEnum(ComAtprotoAdminSendEmailError);

/** @internal */
export const ComAtprotoAdminSendEmailError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminSendEmailError
> = ComAtprotoAdminSendEmailError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminSendEmailError$ {
  /** @deprecated use `ComAtprotoAdminSendEmailError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminSendEmailError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminSendEmailError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoAdminSendEmailError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminSendEmailBadRequestError$inboundSchema: z.ZodType<
  ComAtprotoAdminSendEmailBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoAdminSendEmailError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ComAtprotoAdminSendEmailBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ComAtprotoAdminSendEmailBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminSendEmailBadRequestError$outboundSchema: z.ZodType<
  ComAtprotoAdminSendEmailBadRequestError$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminSendEmailBadRequestError
> = z.instanceof(ComAtprotoAdminSendEmailBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoAdminSendEmailError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminSendEmailBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminSendEmailBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminSendEmailBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminSendEmailBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminSendEmailBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminSendEmailBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminSendEmailBadRequestError$Outbound;
}
