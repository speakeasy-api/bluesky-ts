/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyConvoMuteConvoResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyConvoMuteConvoResponseBodyError extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyConvoMuteConvoResponseBodyErrorData;

  constructor(err: UnauthorizedChatBskyConvoMuteConvoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedChatBskyConvoMuteConvoResponseBodyError";
  }
}

export const ChatBskyConvoMuteConvoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoMuteConvoError = ClosedEnum<
  typeof ChatBskyConvoMuteConvoError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyConvoMuteConvoResponseBodyErrorData = {
  error: ChatBskyConvoMuteConvoError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestChatBskyConvoMuteConvoResponseBodyError extends Error {
  error: ChatBskyConvoMuteConvoError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyConvoMuteConvoResponseBodyErrorData;

  constructor(err: BadRequestChatBskyConvoMuteConvoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestChatBskyConvoMuteConvoResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyConvoMuteConvoResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoMuteConvoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyConvoMuteConvoResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedChatBskyConvoMuteConvoResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedChatBskyConvoMuteConvoResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoMuteConvoResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyConvoMuteConvoResponseBodyError
  > = z.instanceof(UnauthorizedChatBskyConvoMuteConvoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyConvoMuteConvoResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyConvoMuteConvoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyConvoMuteConvoResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoMuteConvoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyConvoMuteConvoResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoMuteConvoResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyConvoMuteConvoResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyConvoMuteConvoError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoMuteConvoError
> = z.nativeEnum(ChatBskyConvoMuteConvoError);

/** @internal */
export const ChatBskyConvoMuteConvoError$outboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoMuteConvoError
> = ChatBskyConvoMuteConvoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoMuteConvoError$ {
  /** @deprecated use `ChatBskyConvoMuteConvoError$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoMuteConvoError$inboundSchema;
  /** @deprecated use `ChatBskyConvoMuteConvoError$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoMuteConvoError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyConvoMuteConvoResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoMuteConvoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoMuteConvoError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyConvoMuteConvoResponseBodyError(v);
    });

/** @internal */
export type BadRequestChatBskyConvoMuteConvoResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestChatBskyConvoMuteConvoResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoMuteConvoResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyConvoMuteConvoResponseBodyError
  > = z.instanceof(BadRequestChatBskyConvoMuteConvoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoMuteConvoError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyConvoMuteConvoResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyConvoMuteConvoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyConvoMuteConvoResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoMuteConvoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyConvoMuteConvoResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoMuteConvoResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyConvoMuteConvoResponseBodyError$Outbound;
}
