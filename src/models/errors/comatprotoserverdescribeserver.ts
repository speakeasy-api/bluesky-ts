/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerDescribeServerResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerDescribeServerResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerDescribeServerResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerDescribeServerResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoServerDescribeServerResponseBodyError";
  }
}

export const ComAtprotoServerDescribeServerError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerDescribeServerError = ClosedEnum<
  typeof ComAtprotoServerDescribeServerError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerDescribeServerResponseBodyErrorData = {
  error: ComAtprotoServerDescribeServerError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerDescribeServerResponseBodyError
  extends Error
{
  error: ComAtprotoServerDescribeServerError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerDescribeServerResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerDescribeServerResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerDescribeServerResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerDescribeServerResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerDescribeServerResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerDescribeServerResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoServerDescribeServerResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerDescribeServerResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerDescribeServerResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerDescribeServerResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoServerDescribeServerResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerDescribeServerResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerDescribeServerResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerDescribeServerResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerDescribeServerResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerDescribeServerResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerDescribeServerResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerDescribeServerResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerDescribeServerError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerDescribeServerError
> = z.nativeEnum(ComAtprotoServerDescribeServerError);

/** @internal */
export const ComAtprotoServerDescribeServerError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerDescribeServerError> =
    ComAtprotoServerDescribeServerError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDescribeServerError$ {
  /** @deprecated use `ComAtprotoServerDescribeServerError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDescribeServerError$inboundSchema;
  /** @deprecated use `ComAtprotoServerDescribeServerError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDescribeServerError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerDescribeServerResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerDescribeServerResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerDescribeServerError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerDescribeServerResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoServerDescribeServerResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerDescribeServerResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerDescribeServerResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerDescribeServerResponseBodyError
  > = z.instanceof(BadRequestComAtprotoServerDescribeServerResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerDescribeServerError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerDescribeServerResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerDescribeServerResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerDescribeServerResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerDescribeServerResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerDescribeServerResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerDescribeServerResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerDescribeServerResponseBodyError$Outbound;
}
