/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncGetBlocksAtprotoSyncResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncGetBlocksAtprotoSyncResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetBlocksAtprotoSyncResponseBodyData;

  constructor(err: ComAtprotoSyncGetBlocksAtprotoSyncResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetBlocksAtprotoSyncResponseBody";
  }
}

export const ComAtprotoSyncGetBlocksError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BlockNotFound: "BlockNotFound",
  RepoNotFound: "RepoNotFound",
  RepoTakendown: "RepoTakendown",
  RepoSuspended: "RepoSuspended",
  RepoDeactivated: "RepoDeactivated",
} as const;
export type ComAtprotoSyncGetBlocksError = ClosedEnum<
  typeof ComAtprotoSyncGetBlocksError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncGetBlocksResponseBodyData = {
  error: ComAtprotoSyncGetBlocksError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncGetBlocksResponseBody extends Error {
  error: ComAtprotoSyncGetBlocksError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetBlocksResponseBodyData;

  constructor(err: ComAtprotoSyncGetBlocksResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetBlocksResponseBody";
  }
}

/** @internal */
export const ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoSyncGetBlocksAtprotoSyncResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncGetBlocksAtprotoSyncResponseBody(v);
    });

/** @internal */
export type ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetBlocksAtprotoSyncResponseBody
  > = z.instanceof(ComAtprotoSyncGetBlocksAtprotoSyncResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoSyncGetBlocksAtprotoSyncResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoSyncGetBlocksError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetBlocksError
> = z.nativeEnum(ComAtprotoSyncGetBlocksError);

/** @internal */
export const ComAtprotoSyncGetBlocksError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetBlocksError
> = ComAtprotoSyncGetBlocksError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetBlocksError$ {
  /** @deprecated use `ComAtprotoSyncGetBlocksError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetBlocksError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlocksError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetBlocksError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncGetBlocksResponseBody$inboundSchema: z.ZodType<
  ComAtprotoSyncGetBlocksResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoSyncGetBlocksError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncGetBlocksResponseBody(v);
  });

/** @internal */
export type ComAtprotoSyncGetBlocksResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetBlocksResponseBody$outboundSchema: z.ZodType<
  ComAtprotoSyncGetBlocksResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetBlocksResponseBody
> = z.instanceof(ComAtprotoSyncGetBlocksResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoSyncGetBlocksError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetBlocksResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetBlocksResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetBlocksResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlocksResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetBlocksResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlocksResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetBlocksResponseBody$Outbound;
}
