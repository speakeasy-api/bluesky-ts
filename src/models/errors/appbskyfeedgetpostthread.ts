/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetPostThreadAppBskyFeedResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetPostThreadAppBskyFeedResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetPostThreadAppBskyFeedResponseBodyData;

  constructor(err: AppBskyFeedGetPostThreadAppBskyFeedResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedGetPostThreadAppBskyFeedResponseBody";
  }
}

export const AppBskyFeedGetPostThreadError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  NotFound: "NotFound",
} as const;
export type AppBskyFeedGetPostThreadError = ClosedEnum<
  typeof AppBskyFeedGetPostThreadError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetPostThreadResponseBodyData = {
  error: AppBskyFeedGetPostThreadError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetPostThreadResponseBody extends Error {
  error: AppBskyFeedGetPostThreadError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetPostThreadResponseBodyData;

  constructor(err: AppBskyFeedGetPostThreadResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedGetPostThreadResponseBody";
  }
}

/** @internal */
export const AppBskyFeedGetPostThreadAppBskyFeedResponseBody$inboundSchema:
  z.ZodType<
    AppBskyFeedGetPostThreadAppBskyFeedResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyFeedGetPostThreadAppBskyFeedResponseBody(v);
    });

/** @internal */
export type AppBskyFeedGetPostThreadAppBskyFeedResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetPostThreadAppBskyFeedResponseBody$outboundSchema:
  z.ZodType<
    AppBskyFeedGetPostThreadAppBskyFeedResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyFeedGetPostThreadAppBskyFeedResponseBody
  > = z.instanceof(AppBskyFeedGetPostThreadAppBskyFeedResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostThreadAppBskyFeedResponseBody$ {
  /** @deprecated use `AppBskyFeedGetPostThreadAppBskyFeedResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetPostThreadAppBskyFeedResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadAppBskyFeedResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetPostThreadAppBskyFeedResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadAppBskyFeedResponseBody$Outbound` instead. */
  export type Outbound =
    AppBskyFeedGetPostThreadAppBskyFeedResponseBody$Outbound;
}

/** @internal */
export const AppBskyFeedGetPostThreadError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetPostThreadError
> = z.nativeEnum(AppBskyFeedGetPostThreadError);

/** @internal */
export const AppBskyFeedGetPostThreadError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetPostThreadError
> = AppBskyFeedGetPostThreadError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostThreadError$ {
  /** @deprecated use `AppBskyFeedGetPostThreadError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetPostThreadError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetPostThreadError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetPostThreadResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetPostThreadResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetPostThreadError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetPostThreadResponseBody(v);
  });

/** @internal */
export type AppBskyFeedGetPostThreadResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetPostThreadResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetPostThreadResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetPostThreadResponseBody
> = z.instanceof(AppBskyFeedGetPostThreadResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetPostThreadError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostThreadResponseBody$ {
  /** @deprecated use `AppBskyFeedGetPostThreadResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetPostThreadResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetPostThreadResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetPostThreadResponseBody$Outbound;
}
