/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ChatBskyConvoGetConvoForMembersChatConvoResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ChatBskyConvoGetConvoForMembersChatConvoResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoGetConvoForMembersChatConvoResponseBodyData;

  constructor(err: ChatBskyConvoGetConvoForMembersChatConvoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyConvoGetConvoForMembersChatConvoResponseBody";
  }
}

export const ChatBskyConvoGetConvoForMembersError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoGetConvoForMembersError = ClosedEnum<
  typeof ChatBskyConvoGetConvoForMembersError
>;

/**
 * Bad Request
 */
export type ChatBskyConvoGetConvoForMembersResponseBodyData = {
  error: ChatBskyConvoGetConvoForMembersError;
  message: string;
};

/**
 * Bad Request
 */
export class ChatBskyConvoGetConvoForMembersResponseBody extends Error {
  error: ChatBskyConvoGetConvoForMembersError;

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoGetConvoForMembersResponseBodyData;

  constructor(err: ChatBskyConvoGetConvoForMembersResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyConvoGetConvoForMembersResponseBody";
  }
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersChatConvoResponseBody$inboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersChatConvoResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoGetConvoForMembersChatConvoResponseBody(v);
    });

/** @internal */
export type ChatBskyConvoGetConvoForMembersChatConvoResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ChatBskyConvoGetConvoForMembersChatConvoResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersChatConvoResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoGetConvoForMembersChatConvoResponseBody
  > = z.instanceof(ChatBskyConvoGetConvoForMembersChatConvoResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersChatConvoResponseBody$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersChatConvoResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersChatConvoResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersChatConvoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersChatConvoResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersChatConvoResponseBody$Outbound` instead. */
  export type Outbound =
    ChatBskyConvoGetConvoForMembersChatConvoResponseBody$Outbound;
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersError$inboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoGetConvoForMembersError> = z.nativeEnum(
    ChatBskyConvoGetConvoForMembersError,
  );

/** @internal */
export const ChatBskyConvoGetConvoForMembersError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoGetConvoForMembersError> =
    ChatBskyConvoGetConvoForMembersError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersError$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersError$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersError$outboundSchema;
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersResponseBody$inboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoGetConvoForMembersError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoGetConvoForMembersResponseBody(v);
    });

/** @internal */
export type ChatBskyConvoGetConvoForMembersResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ChatBskyConvoGetConvoForMembersResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoGetConvoForMembersResponseBody
  > = z.instanceof(ChatBskyConvoGetConvoForMembersResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoGetConvoForMembersError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersResponseBody$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoGetConvoForMembersResponseBody$Outbound;
}
