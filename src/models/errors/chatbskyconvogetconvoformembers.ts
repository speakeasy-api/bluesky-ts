/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ChatBskyConvoGetConvoForMembersAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ChatBskyConvoGetConvoForMembersAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoGetConvoForMembersAuthMissingErrorData;

  constructor(
    err: ChatBskyConvoGetConvoForMembersAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ChatBskyConvoGetConvoForMembersAuthMissingError";
  }
}

export const ChatBskyConvoGetConvoForMembersError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoGetConvoForMembersError = ClosedEnum<
  typeof ChatBskyConvoGetConvoForMembersError
>;

/**
 * Bad Request
 */
export type ChatBskyConvoGetConvoForMembersBadRequestErrorData = {
  error: ChatBskyConvoGetConvoForMembersError;
  message: string;
};

/**
 * Bad Request
 */
export class ChatBskyConvoGetConvoForMembersBadRequestError
  extends BlueskyError
{
  error: ChatBskyConvoGetConvoForMembersError;

  /** The original data that was passed to this error instance. */
  data$: ChatBskyConvoGetConvoForMembersBadRequestErrorData;

  constructor(
    err: ChatBskyConvoGetConvoForMembersBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ChatBskyConvoGetConvoForMembersBadRequestError";
  }
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersAuthMissingError$inboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoGetConvoForMembersAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ChatBskyConvoGetConvoForMembersAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ChatBskyConvoGetConvoForMembersAuthMissingError$outboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersAuthMissingError$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoGetConvoForMembersAuthMissingError
  > = z.instanceof(ChatBskyConvoGetConvoForMembersAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersAuthMissingError$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersAuthMissingError$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersAuthMissingError$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersAuthMissingError$Outbound` instead. */
  export type Outbound =
    ChatBskyConvoGetConvoForMembersAuthMissingError$Outbound;
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersError$inboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoGetConvoForMembersError> = z.nativeEnum(
    ChatBskyConvoGetConvoForMembersError,
  );

/** @internal */
export const ChatBskyConvoGetConvoForMembersError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoGetConvoForMembersError> =
    ChatBskyConvoGetConvoForMembersError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersError$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersError$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersError$outboundSchema;
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersBadRequestError$inboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoGetConvoForMembersError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ChatBskyConvoGetConvoForMembersBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ChatBskyConvoGetConvoForMembersBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ChatBskyConvoGetConvoForMembersBadRequestError$outboundSchema:
  z.ZodType<
    ChatBskyConvoGetConvoForMembersBadRequestError$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoGetConvoForMembersBadRequestError
  > = z.instanceof(ChatBskyConvoGetConvoForMembersBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoGetConvoForMembersError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersBadRequestError$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersBadRequestError$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersBadRequestError$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersBadRequestError$Outbound` instead. */
  export type Outbound =
    ChatBskyConvoGetConvoForMembersBadRequestError$Outbound;
}
