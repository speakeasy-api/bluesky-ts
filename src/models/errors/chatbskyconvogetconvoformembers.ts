/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyErrorData;

  constructor(
    err: UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError";
  }
}

export const ChatBskyConvoGetConvoForMembersError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoGetConvoForMembersError = ClosedEnum<
  typeof ChatBskyConvoGetConvoForMembersError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyConvoGetConvoForMembersResponseBodyErrorData = {
  error: ChatBskyConvoGetConvoForMembersError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestChatBskyConvoGetConvoForMembersResponseBodyError
  extends Error
{
  error: ChatBskyConvoGetConvoForMembersError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyConvoGetConvoForMembersResponseBodyErrorData;

  constructor(
    err: BadRequestChatBskyConvoGetConvoForMembersResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestChatBskyConvoGetConvoForMembersResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError
  > = z.instanceof(UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyConvoGetConvoForMembersResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersError$inboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoGetConvoForMembersError> = z.nativeEnum(
    ChatBskyConvoGetConvoForMembersError,
  );

/** @internal */
export const ChatBskyConvoGetConvoForMembersError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyConvoGetConvoForMembersError> =
    ChatBskyConvoGetConvoForMembersError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersError$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersError$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoGetConvoForMembersResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoGetConvoForMembersError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyConvoGetConvoForMembersResponseBodyError(v);
    });

/** @internal */
export type BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyConvoGetConvoForMembersResponseBodyError
  > = z.instanceof(BadRequestChatBskyConvoGetConvoForMembersResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoGetConvoForMembersError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyConvoGetConvoForMembersResponseBodyError$Outbound;
}
