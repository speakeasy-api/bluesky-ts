/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCreateInviteCodeAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodeAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerCreateInviteCodeAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerCreateInviteCodeError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerCreateInviteCodeError = ClosedEnum<
  typeof ComAtprotoServerCreateInviteCodeError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCreateInviteCodeResponseBodyData = {
  error: ComAtprotoServerCreateInviteCodeError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCreateInviteCodeResponseBody extends Error {
  error: ComAtprotoServerCreateInviteCodeError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodeResponseBodyData;

  constructor(err: ComAtprotoServerCreateInviteCodeResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodeResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateInviteCodeAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodeError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodeError> = z.nativeEnum(
    ComAtprotoServerCreateInviteCodeError,
  );

/** @internal */
export const ComAtprotoServerCreateInviteCodeError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodeError> =
    ComAtprotoServerCreateInviteCodeError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodeError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodeError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodeError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodeError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodeResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateInviteCodeError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodeResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodeResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodeResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodeResponseBody
  > = z.instanceof(ComAtprotoServerCreateInviteCodeResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateInviteCodeError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodeResponseBody$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodeResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodeResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodeResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateInviteCodeResponseBody$Outbound;
}
