/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCreateInviteCodeAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerCreateInviteCodeAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodeAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerCreateInviteCodeAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodeAuthMissingError";
  }
}

export const ComAtprotoServerCreateInviteCodeError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerCreateInviteCodeError = ClosedEnum<
  typeof ComAtprotoServerCreateInviteCodeError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCreateInviteCodeBadRequestErrorData = {
  error: ComAtprotoServerCreateInviteCodeError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCreateInviteCodeBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerCreateInviteCodeError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodeBadRequestErrorData;

  constructor(
    err: ComAtprotoServerCreateInviteCodeBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodeBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerCreateInviteCodeAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodeAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodeAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodeAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodeAuthMissingError
  > = z.instanceof(ComAtprotoServerCreateInviteCodeAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodeAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodeAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodeAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodeAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateInviteCodeAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodeError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodeError> = z.nativeEnum(
    ComAtprotoServerCreateInviteCodeError,
  );

/** @internal */
export const ComAtprotoServerCreateInviteCodeError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodeError> =
    ComAtprotoServerCreateInviteCodeError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodeError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodeError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodeError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodeError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodeBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateInviteCodeError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodeBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodeBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodeBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodeBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodeBadRequestError
  > = z.instanceof(ComAtprotoServerCreateInviteCodeBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateInviteCodeError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodeBadRequestError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodeBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodeBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodeBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodeBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateInviteCodeBadRequestError$Outbound;
}
