/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerGetSessionComAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerGetSessionComAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetSessionComAtprotoServerResponseBodyData;

  constructor(err: ComAtprotoServerGetSessionComAtprotoServerResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerGetSessionComAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerGetSessionError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerGetSessionError = ClosedEnum<
  typeof ComAtprotoServerGetSessionError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerGetSessionResponseBodyData = {
  error: ComAtprotoServerGetSessionError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerGetSessionResponseBody extends Error {
  error: ComAtprotoServerGetSessionError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetSessionResponseBodyData;

  constructor(err: ComAtprotoServerGetSessionResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerGetSessionResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerGetSessionComAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetSessionComAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerGetSessionComAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerGetSessionComAtprotoServerResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerGetSessionComAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetSessionComAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetSessionComAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerGetSessionComAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetSessionComAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerGetSessionComAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetSessionComAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetSessionComAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetSessionComAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetSessionComAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerGetSessionComAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerGetSessionError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerGetSessionError
> = z.nativeEnum(ComAtprotoServerGetSessionError);

/** @internal */
export const ComAtprotoServerGetSessionError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerGetSessionError
> = ComAtprotoServerGetSessionError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetSessionError$ {
  /** @deprecated use `ComAtprotoServerGetSessionError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerGetSessionError$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetSessionError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoServerGetSessionError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerGetSessionResponseBody$inboundSchema: z.ZodType<
  ComAtprotoServerGetSessionResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoServerGetSessionError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoServerGetSessionResponseBody(v);
  });

/** @internal */
export type ComAtprotoServerGetSessionResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerGetSessionResponseBody$outboundSchema: z.ZodType<
  ComAtprotoServerGetSessionResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerGetSessionResponseBody
> = z.instanceof(ComAtprotoServerGetSessionResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoServerGetSessionError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetSessionResponseBody$ {
  /** @deprecated use `ComAtprotoServerGetSessionResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetSessionResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetSessionResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetSessionResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetSessionResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerGetSessionResponseBody$Outbound;
}
