/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError";
  }
}

export const ComAtprotoSyncNotifyOfUpdateError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoSyncNotifyOfUpdateError = ClosedEnum<
  typeof ComAtprotoSyncNotifyOfUpdateError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyErrorData = {
  error: ComAtprotoSyncNotifyOfUpdateError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError
  extends Error
{
  error: ComAtprotoSyncNotifyOfUpdateError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncNotifyOfUpdateError
> = z.nativeEnum(ComAtprotoSyncNotifyOfUpdateError);

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncNotifyOfUpdateError
> = ComAtprotoSyncNotifyOfUpdateError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncNotifyOfUpdateError$ {
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncNotifyOfUpdateError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncNotifyOfUpdateError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoSyncNotifyOfUpdateError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError
  > = z.instanceof(BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoSyncNotifyOfUpdateError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoSyncNotifyOfUpdateResponseBodyError$Outbound;
}
