/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncNotifyOfUpdateAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncNotifyOfUpdateAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncNotifyOfUpdateAuthMissingErrorData;

  constructor(
    err: ComAtprotoSyncNotifyOfUpdateAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncNotifyOfUpdateAuthMissingError";
  }
}

export const ComAtprotoSyncNotifyOfUpdateError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoSyncNotifyOfUpdateError = ClosedEnum<
  typeof ComAtprotoSyncNotifyOfUpdateError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncNotifyOfUpdateBadRequestErrorData = {
  error: ComAtprotoSyncNotifyOfUpdateError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncNotifyOfUpdateBadRequestError extends BlueskyError {
  error: ComAtprotoSyncNotifyOfUpdateError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncNotifyOfUpdateBadRequestErrorData;

  constructor(
    err: ComAtprotoSyncNotifyOfUpdateBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncNotifyOfUpdateBadRequestError";
  }
}

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoSyncNotifyOfUpdateAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncNotifyOfUpdateAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoSyncNotifyOfUpdateAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoSyncNotifyOfUpdateAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncNotifyOfUpdateAuthMissingError
  > = z.instanceof(ComAtprotoSyncNotifyOfUpdateAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncNotifyOfUpdateAuthMissingError$ {
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncNotifyOfUpdateAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncNotifyOfUpdateAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncNotifyOfUpdateAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncNotifyOfUpdateError
> = z.nativeEnum(ComAtprotoSyncNotifyOfUpdateError);

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncNotifyOfUpdateError
> = ComAtprotoSyncNotifyOfUpdateError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncNotifyOfUpdateError$ {
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncNotifyOfUpdateError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncNotifyOfUpdateError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoSyncNotifyOfUpdateBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoSyncNotifyOfUpdateError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncNotifyOfUpdateBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoSyncNotifyOfUpdateBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncNotifyOfUpdateBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoSyncNotifyOfUpdateBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncNotifyOfUpdateBadRequestError
  > = z.instanceof(ComAtprotoSyncNotifyOfUpdateBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoSyncNotifyOfUpdateError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncNotifyOfUpdateBadRequestError$ {
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncNotifyOfUpdateBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncNotifyOfUpdateBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncNotifyOfUpdateBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncNotifyOfUpdateBadRequestError$Outbound;
}
