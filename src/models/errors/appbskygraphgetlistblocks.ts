/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphGetListBlocksAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphGetListBlocksAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetListBlocksAuthMissingErrorData;

  constructor(
    err: AppBskyGraphGetListBlocksAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetListBlocksAuthMissingError";
  }
}

export const AppBskyGraphGetListBlocksError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphGetListBlocksError = ClosedEnum<
  typeof AppBskyGraphGetListBlocksError
>;

/**
 * Bad Request
 */
export type AppBskyGraphGetListBlocksBadRequestErrorData = {
  error: AppBskyGraphGetListBlocksError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphGetListBlocksBadRequestError extends BlueskyError {
  error: AppBskyGraphGetListBlocksError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetListBlocksBadRequestErrorData;

  constructor(
    err: AppBskyGraphGetListBlocksBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetListBlocksBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphGetListBlocksAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphGetListBlocksAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetListBlocksAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetListBlocksAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphGetListBlocksAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyGraphGetListBlocksAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyGraphGetListBlocksAuthMissingError
  > = z.instanceof(AppBskyGraphGetListBlocksAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetListBlocksAuthMissingError$ {
  /** @deprecated use `AppBskyGraphGetListBlocksAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetListBlocksAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetListBlocksAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetListBlocksAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetListBlocksAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetListBlocksAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphGetListBlocksError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetListBlocksError
> = z.nativeEnum(AppBskyGraphGetListBlocksError);

/** @internal */
export const AppBskyGraphGetListBlocksError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetListBlocksError
> = AppBskyGraphGetListBlocksError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetListBlocksError$ {
  /** @deprecated use `AppBskyGraphGetListBlocksError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetListBlocksError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetListBlocksError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphGetListBlocksError$outboundSchema;
}

/** @internal */
export const AppBskyGraphGetListBlocksBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphGetListBlocksBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphGetListBlocksError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetListBlocksBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetListBlocksBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphGetListBlocksBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphGetListBlocksBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetListBlocksBadRequestError
> = z.instanceof(AppBskyGraphGetListBlocksBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphGetListBlocksError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetListBlocksBadRequestError$ {
  /** @deprecated use `AppBskyGraphGetListBlocksBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetListBlocksBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetListBlocksBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetListBlocksBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetListBlocksBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetListBlocksBadRequestError$Outbound;
}
