/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyConvoSendMessageResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyConvoSendMessageResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyConvoSendMessageResponseBodyErrorData;

  constructor(err: UnauthorizedChatBskyConvoSendMessageResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedChatBskyConvoSendMessageResponseBodyError";
  }
}

export const ChatBskyConvoSendMessageError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoSendMessageError = ClosedEnum<
  typeof ChatBskyConvoSendMessageError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyConvoSendMessageResponseBodyErrorData = {
  error: ChatBskyConvoSendMessageError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestChatBskyConvoSendMessageResponseBodyError extends Error {
  error: ChatBskyConvoSendMessageError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyConvoSendMessageResponseBodyErrorData;

  constructor(err: BadRequestChatBskyConvoSendMessageResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestChatBskyConvoSendMessageResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyConvoSendMessageResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoSendMessageResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyConvoSendMessageResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedChatBskyConvoSendMessageResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedChatBskyConvoSendMessageResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoSendMessageResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyConvoSendMessageResponseBodyError
  > = z.instanceof(UnauthorizedChatBskyConvoSendMessageResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyConvoSendMessageResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyConvoSendMessageResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyConvoSendMessageResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoSendMessageResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyConvoSendMessageResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoSendMessageResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyConvoSendMessageResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyConvoSendMessageError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoSendMessageError
> = z.nativeEnum(ChatBskyConvoSendMessageError);

/** @internal */
export const ChatBskyConvoSendMessageError$outboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoSendMessageError
> = ChatBskyConvoSendMessageError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageError$ {
  /** @deprecated use `ChatBskyConvoSendMessageError$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoSendMessageError$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageError$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoSendMessageError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyConvoSendMessageResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoSendMessageResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoSendMessageError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyConvoSendMessageResponseBodyError(v);
    });

/** @internal */
export type BadRequestChatBskyConvoSendMessageResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestChatBskyConvoSendMessageResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoSendMessageResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyConvoSendMessageResponseBodyError
  > = z.instanceof(BadRequestChatBskyConvoSendMessageResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoSendMessageError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyConvoSendMessageResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyConvoSendMessageResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyConvoSendMessageResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoSendMessageResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyConvoSendMessageResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoSendMessageResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyConvoSendMessageResponseBodyError$Outbound;
}
