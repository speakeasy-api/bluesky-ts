/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError";
  }
}

export const ComAtprotoServerCheckAccountStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerCheckAccountStatusError = ClosedEnum<
  typeof ComAtprotoServerCheckAccountStatusError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerCheckAccountStatusResponseBodyErrorData =
  {
    error: ComAtprotoServerCheckAccountStatusError;
    message: string;
  };

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerCheckAccountStatusResponseBodyError
  extends Error
{
  error: ComAtprotoServerCheckAccountStatusError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerCheckAccountStatusResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerCheckAccountStatusResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerCheckAccountStatusResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError
  > = z.instanceof(
    UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerCheckAccountStatusResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerCheckAccountStatusError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCheckAccountStatusError> = z
    .nativeEnum(ComAtprotoServerCheckAccountStatusError);

/** @internal */
export const ComAtprotoServerCheckAccountStatusError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCheckAccountStatusError> =
    ComAtprotoServerCheckAccountStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCheckAccountStatusError$ {
  /** @deprecated use `ComAtprotoServerCheckAccountStatusError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCheckAccountStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCheckAccountStatusError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCheckAccountStatusError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerCheckAccountStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCheckAccountStatusError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerCheckAccountStatusResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerCheckAccountStatusResponseBodyError
  > = z.instanceof(
    BadRequestComAtprotoServerCheckAccountStatusResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCheckAccountStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerCheckAccountStatusResponseBodyError$Outbound;
}
