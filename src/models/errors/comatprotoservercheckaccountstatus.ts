/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCheckAccountStatusAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCheckAccountStatusAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerCheckAccountStatusAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerCheckAccountStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerCheckAccountStatusError = ClosedEnum<
  typeof ComAtprotoServerCheckAccountStatusError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCheckAccountStatusResponseBodyData = {
  error: ComAtprotoServerCheckAccountStatusError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCheckAccountStatusResponseBody extends Error {
  error: ComAtprotoServerCheckAccountStatusError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCheckAccountStatusResponseBodyData;

  constructor(err: ComAtprotoServerCheckAccountStatusResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCheckAccountStatusResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCheckAccountStatusAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerCheckAccountStatusError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCheckAccountStatusError> = z
    .nativeEnum(ComAtprotoServerCheckAccountStatusError);

/** @internal */
export const ComAtprotoServerCheckAccountStatusError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCheckAccountStatusError> =
    ComAtprotoServerCheckAccountStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCheckAccountStatusError$ {
  /** @deprecated use `ComAtprotoServerCheckAccountStatusError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCheckAccountStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCheckAccountStatusError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCheckAccountStatusError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCheckAccountStatusResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCheckAccountStatusResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCheckAccountStatusError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCheckAccountStatusResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerCheckAccountStatusResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCheckAccountStatusResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCheckAccountStatusResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCheckAccountStatusResponseBody
  > = z.instanceof(ComAtprotoServerCheckAccountStatusResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCheckAccountStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCheckAccountStatusResponseBody$ {
  /** @deprecated use `ComAtprotoServerCheckAccountStatusResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCheckAccountStatusResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCheckAccountStatusResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCheckAccountStatusResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCheckAccountStatusResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCheckAccountStatusResponseBody$Outbound;
}
