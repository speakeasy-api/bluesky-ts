/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyVideoGetJobStatusAppBskyVideoResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyVideoGetJobStatusAppBskyVideoResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyVideoGetJobStatusAppBskyVideoResponseBodyData;

  constructor(err: AppBskyVideoGetJobStatusAppBskyVideoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyVideoGetJobStatusAppBskyVideoResponseBody";
  }
}

export const AppBskyVideoGetJobStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyVideoGetJobStatusError = ClosedEnum<
  typeof AppBskyVideoGetJobStatusError
>;

/**
 * Bad Request
 */
export type AppBskyVideoGetJobStatusResponseBodyData = {
  error: AppBskyVideoGetJobStatusError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyVideoGetJobStatusResponseBody extends Error {
  error: AppBskyVideoGetJobStatusError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyVideoGetJobStatusResponseBodyData;

  constructor(err: AppBskyVideoGetJobStatusResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyVideoGetJobStatusResponseBody";
  }
}

/** @internal */
export const AppBskyVideoGetJobStatusAppBskyVideoResponseBody$inboundSchema:
  z.ZodType<
    AppBskyVideoGetJobStatusAppBskyVideoResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyVideoGetJobStatusAppBskyVideoResponseBody(v);
    });

/** @internal */
export type AppBskyVideoGetJobStatusAppBskyVideoResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyVideoGetJobStatusAppBskyVideoResponseBody$outboundSchema:
  z.ZodType<
    AppBskyVideoGetJobStatusAppBskyVideoResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyVideoGetJobStatusAppBskyVideoResponseBody
  > = z.instanceof(AppBskyVideoGetJobStatusAppBskyVideoResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoGetJobStatusAppBskyVideoResponseBody$ {
  /** @deprecated use `AppBskyVideoGetJobStatusAppBskyVideoResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyVideoGetJobStatusAppBskyVideoResponseBody$inboundSchema;
  /** @deprecated use `AppBskyVideoGetJobStatusAppBskyVideoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyVideoGetJobStatusAppBskyVideoResponseBody$outboundSchema;
  /** @deprecated use `AppBskyVideoGetJobStatusAppBskyVideoResponseBody$Outbound` instead. */
  export type Outbound =
    AppBskyVideoGetJobStatusAppBskyVideoResponseBody$Outbound;
}

/** @internal */
export const AppBskyVideoGetJobStatusError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoGetJobStatusError
> = z.nativeEnum(AppBskyVideoGetJobStatusError);

/** @internal */
export const AppBskyVideoGetJobStatusError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoGetJobStatusError
> = AppBskyVideoGetJobStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoGetJobStatusError$ {
  /** @deprecated use `AppBskyVideoGetJobStatusError$inboundSchema` instead. */
  export const inboundSchema = AppBskyVideoGetJobStatusError$inboundSchema;
  /** @deprecated use `AppBskyVideoGetJobStatusError$outboundSchema` instead. */
  export const outboundSchema = AppBskyVideoGetJobStatusError$outboundSchema;
}

/** @internal */
export const AppBskyVideoGetJobStatusResponseBody$inboundSchema: z.ZodType<
  AppBskyVideoGetJobStatusResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyVideoGetJobStatusError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyVideoGetJobStatusResponseBody(v);
  });

/** @internal */
export type AppBskyVideoGetJobStatusResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyVideoGetJobStatusResponseBody$outboundSchema: z.ZodType<
  AppBskyVideoGetJobStatusResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyVideoGetJobStatusResponseBody
> = z.instanceof(AppBskyVideoGetJobStatusResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyVideoGetJobStatusError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoGetJobStatusResponseBody$ {
  /** @deprecated use `AppBskyVideoGetJobStatusResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyVideoGetJobStatusResponseBody$inboundSchema;
  /** @deprecated use `AppBskyVideoGetJobStatusResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyVideoGetJobStatusResponseBody$outboundSchema;
  /** @deprecated use `AppBskyVideoGetJobStatusResponseBody$Outbound` instead. */
  export type Outbound = AppBskyVideoGetJobStatusResponseBody$Outbound;
}
