/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationEmitEventOzoneModerationResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationEmitEventOzoneModerationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationEmitEventOzoneModerationResponseBodyData;

  constructor(
    err: ToolsOzoneModerationEmitEventOzoneModerationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationEmitEventOzoneModerationResponseBody";
  }
}

export const ToolsOzoneModerationEmitEventError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  SubjectHasAction: "SubjectHasAction",
} as const;
export type ToolsOzoneModerationEmitEventError = ClosedEnum<
  typeof ToolsOzoneModerationEmitEventError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationEmitEventResponseBodyData = {
  error: ToolsOzoneModerationEmitEventError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationEmitEventResponseBody extends Error {
  error: ToolsOzoneModerationEmitEventError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationEmitEventResponseBodyData;

  constructor(err: ToolsOzoneModerationEmitEventResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationEmitEventResponseBody";
  }
}

/** @internal */
export const ToolsOzoneModerationEmitEventOzoneModerationResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationEmitEventOzoneModerationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationEmitEventOzoneModerationResponseBody(v);
    });

/** @internal */
export type ToolsOzoneModerationEmitEventOzoneModerationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ToolsOzoneModerationEmitEventOzoneModerationResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationEmitEventOzoneModerationResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationEmitEventOzoneModerationResponseBody
  > = z.instanceof(ToolsOzoneModerationEmitEventOzoneModerationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationEmitEventOzoneModerationResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationEmitEventOzoneModerationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationEmitEventOzoneModerationResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventOzoneModerationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationEmitEventOzoneModerationResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventOzoneModerationResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationEmitEventOzoneModerationResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneModerationEmitEventError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneModerationEmitEventError
> = z.nativeEnum(ToolsOzoneModerationEmitEventError);

/** @internal */
export const ToolsOzoneModerationEmitEventError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneModerationEmitEventError
> = ToolsOzoneModerationEmitEventError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationEmitEventError$ {
  /** @deprecated use `ToolsOzoneModerationEmitEventError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneModerationEmitEventError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationEmitEventError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationEmitEventResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneModerationEmitEventResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneModerationEmitEventError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneModerationEmitEventResponseBody(v);
  });

/** @internal */
export type ToolsOzoneModerationEmitEventResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationEmitEventResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationEmitEventResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationEmitEventResponseBody
  > = z.instanceof(ToolsOzoneModerationEmitEventResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationEmitEventError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationEmitEventResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationEmitEventResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationEmitEventResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationEmitEventResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationEmitEventResponseBody$Outbound;
}
