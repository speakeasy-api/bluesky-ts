/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerDeleteSessionResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerDeleteSessionResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerDeleteSessionResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerDeleteSessionResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoServerDeleteSessionResponseBodyError";
  }
}

export const ComAtprotoServerDeleteSessionError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerDeleteSessionError = ClosedEnum<
  typeof ComAtprotoServerDeleteSessionError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerDeleteSessionResponseBodyErrorData = {
  error: ComAtprotoServerDeleteSessionError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerDeleteSessionResponseBodyError
  extends Error
{
  error: ComAtprotoServerDeleteSessionError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerDeleteSessionResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerDeleteSessionResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerDeleteSessionResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerDeleteSessionResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerDeleteSessionResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerDeleteSessionResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoServerDeleteSessionResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerDeleteSessionResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerDeleteSessionError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerDeleteSessionError
> = z.nativeEnum(ComAtprotoServerDeleteSessionError);

/** @internal */
export const ComAtprotoServerDeleteSessionError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerDeleteSessionError
> = ComAtprotoServerDeleteSessionError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeleteSessionError$ {
  /** @deprecated use `ComAtprotoServerDeleteSessionError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerDeleteSessionError$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteSessionError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeleteSessionError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerDeleteSessionResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerDeleteSessionResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerDeleteSessionError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerDeleteSessionResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoServerDeleteSessionResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerDeleteSessionResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerDeleteSessionResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerDeleteSessionResponseBodyError
  > = z.instanceof(BadRequestComAtprotoServerDeleteSessionResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerDeleteSessionError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerDeleteSessionResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerDeleteSessionResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerDeleteSessionResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerDeleteSessionResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerDeleteSessionResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerDeleteSessionResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerDeleteSessionResponseBodyError$Outbound;
}
