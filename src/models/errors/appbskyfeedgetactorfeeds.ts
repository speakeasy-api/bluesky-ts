/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetActorFeedsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetActorFeedsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetActorFeedsAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetActorFeedsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetActorFeedsAuthMissingError";
  }
}

export const AppBskyFeedGetActorFeedsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetActorFeedsError = ClosedEnum<
  typeof AppBskyFeedGetActorFeedsError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetActorFeedsBadRequestErrorData = {
  error: AppBskyFeedGetActorFeedsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetActorFeedsBadRequestError extends BlueskyError {
  error: AppBskyFeedGetActorFeedsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetActorFeedsBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetActorFeedsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetActorFeedsBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetActorFeedsAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetActorFeedsAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetActorFeedsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetActorFeedsAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetActorFeedsAuthMissingError
> = z.instanceof(AppBskyFeedGetActorFeedsAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorFeedsAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetActorFeedsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetActorFeedsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetActorFeedsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetActorFeedsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetActorFeedsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetActorFeedsError
> = z.nativeEnum(AppBskyFeedGetActorFeedsError);

/** @internal */
export const AppBskyFeedGetActorFeedsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetActorFeedsError
> = AppBskyFeedGetActorFeedsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorFeedsError$ {
  /** @deprecated use `AppBskyFeedGetActorFeedsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetActorFeedsError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetActorFeedsError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetActorFeedsBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetActorFeedsError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetActorFeedsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetActorFeedsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetActorFeedsBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetActorFeedsBadRequestError
> = z.instanceof(AppBskyFeedGetActorFeedsBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetActorFeedsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorFeedsBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetActorFeedsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetActorFeedsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetActorFeedsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetActorFeedsBadRequestError$Outbound;
}
