/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyFeedSendInteractionsFeedsResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedSendInteractionsFeedsResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedSendInteractionsFeedsResponseBodyData;

  constructor(err: AppBskyFeedSendInteractionsFeedsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedSendInteractionsFeedsResponseBody";
  }
}

export const AppBskyFeedSendInteractionsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedSendInteractionsError = ClosedEnum<
  typeof AppBskyFeedSendInteractionsError
>;

/**
 * Bad Request
 */
export type AppBskyFeedSendInteractionsResponseBodyData = {
  error: AppBskyFeedSendInteractionsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedSendInteractionsResponseBody extends Error {
  error: AppBskyFeedSendInteractionsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedSendInteractionsResponseBodyData;

  constructor(err: AppBskyFeedSendInteractionsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyFeedSendInteractionsResponseBody";
  }
}

/** @internal */
export const AppBskyFeedSendInteractionsFeedsResponseBody$inboundSchema:
  z.ZodType<
    AppBskyFeedSendInteractionsFeedsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyFeedSendInteractionsFeedsResponseBody(v);
    });

/** @internal */
export type AppBskyFeedSendInteractionsFeedsResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedSendInteractionsFeedsResponseBody$outboundSchema:
  z.ZodType<
    AppBskyFeedSendInteractionsFeedsResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyFeedSendInteractionsFeedsResponseBody
  > = z.instanceof(AppBskyFeedSendInteractionsFeedsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSendInteractionsFeedsResponseBody$ {
  /** @deprecated use `AppBskyFeedSendInteractionsFeedsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedSendInteractionsFeedsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedSendInteractionsFeedsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedSendInteractionsFeedsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedSendInteractionsFeedsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedSendInteractionsFeedsResponseBody$Outbound;
}

/** @internal */
export const AppBskyFeedSendInteractionsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSendInteractionsError
> = z.nativeEnum(AppBskyFeedSendInteractionsError);

/** @internal */
export const AppBskyFeedSendInteractionsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSendInteractionsError
> = AppBskyFeedSendInteractionsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSendInteractionsError$ {
  /** @deprecated use `AppBskyFeedSendInteractionsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedSendInteractionsError$inboundSchema;
  /** @deprecated use `AppBskyFeedSendInteractionsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedSendInteractionsError$outboundSchema;
}

/** @internal */
export const AppBskyFeedSendInteractionsResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedSendInteractionsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedSendInteractionsError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedSendInteractionsResponseBody(v);
  });

/** @internal */
export type AppBskyFeedSendInteractionsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedSendInteractionsResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedSendInteractionsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedSendInteractionsResponseBody
> = z.instanceof(AppBskyFeedSendInteractionsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedSendInteractionsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSendInteractionsResponseBody$ {
  /** @deprecated use `AppBskyFeedSendInteractionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedSendInteractionsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedSendInteractionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedSendInteractionsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedSendInteractionsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedSendInteractionsResponseBody$Outbound;
}
