/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedAppBskyFeedSendInteractionsResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedAppBskyFeedSendInteractionsResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedAppBskyFeedSendInteractionsResponseBodyErrorData;

  constructor(
    err: UnauthorizedAppBskyFeedSendInteractionsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedAppBskyFeedSendInteractionsResponseBodyError";
  }
}

export const AppBskyFeedSendInteractionsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedSendInteractionsError = ClosedEnum<
  typeof AppBskyFeedSendInteractionsError
>;

/**
 * Bad Request
 */
export type BadRequestAppBskyFeedSendInteractionsResponseBodyErrorData = {
  error: AppBskyFeedSendInteractionsError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestAppBskyFeedSendInteractionsResponseBodyError
  extends Error
{
  error: AppBskyFeedSendInteractionsError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestAppBskyFeedSendInteractionsResponseBodyErrorData;

  constructor(err: BadRequestAppBskyFeedSendInteractionsResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestAppBskyFeedSendInteractionsResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedAppBskyFeedSendInteractionsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedAppBskyFeedSendInteractionsResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedAppBskyFeedSendInteractionsResponseBodyError
  > = z.instanceof(UnauthorizedAppBskyFeedSendInteractionsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$ {
  /** @deprecated use `UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedAppBskyFeedSendInteractionsResponseBodyError$Outbound;
}

/** @internal */
export const AppBskyFeedSendInteractionsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSendInteractionsError
> = z.nativeEnum(AppBskyFeedSendInteractionsError);

/** @internal */
export const AppBskyFeedSendInteractionsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedSendInteractionsError
> = AppBskyFeedSendInteractionsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedSendInteractionsError$ {
  /** @deprecated use `AppBskyFeedSendInteractionsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedSendInteractionsError$inboundSchema;
  /** @deprecated use `AppBskyFeedSendInteractionsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedSendInteractionsError$outboundSchema;
}

/** @internal */
export const BadRequestAppBskyFeedSendInteractionsResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestAppBskyFeedSendInteractionsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyFeedSendInteractionsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestAppBskyFeedSendInteractionsResponseBodyError(v);
    });

/** @internal */
export type BadRequestAppBskyFeedSendInteractionsResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestAppBskyFeedSendInteractionsResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestAppBskyFeedSendInteractionsResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestAppBskyFeedSendInteractionsResponseBodyError
  > = z.instanceof(BadRequestAppBskyFeedSendInteractionsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyFeedSendInteractionsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestAppBskyFeedSendInteractionsResponseBodyError$ {
  /** @deprecated use `BadRequestAppBskyFeedSendInteractionsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestAppBskyFeedSendInteractionsResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestAppBskyFeedSendInteractionsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestAppBskyFeedSendInteractionsResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestAppBskyFeedSendInteractionsResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestAppBskyFeedSendInteractionsResponseBodyError$Outbound;
}
