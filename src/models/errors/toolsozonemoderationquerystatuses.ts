/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationQueryStatusesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneModerationQueryStatusesAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryStatusesAuthMissingErrorData;

  constructor(
    err: ToolsOzoneModerationQueryStatusesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationQueryStatusesAuthMissingError";
  }
}

export const ToolsOzoneModerationQueryStatusesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneModerationQueryStatusesError = ClosedEnum<
  typeof ToolsOzoneModerationQueryStatusesError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationQueryStatusesBadRequestErrorData = {
  error: ToolsOzoneModerationQueryStatusesError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationQueryStatusesBadRequestError
  extends BlueskyError
{
  error: ToolsOzoneModerationQueryStatusesError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryStatusesBadRequestErrorData;

  constructor(
    err: ToolsOzoneModerationQueryStatusesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneModerationQueryStatusesBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneModerationQueryStatusesAuthMissingError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryStatusesAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationQueryStatusesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneModerationQueryStatusesAuthMissingError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesAuthMissingError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryStatusesAuthMissingError
  > = z.instanceof(ToolsOzoneModerationQueryStatusesAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryStatusesAuthMissingError$ {
  /** @deprecated use `ToolsOzoneModerationQueryStatusesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryStatusesAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryStatusesAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesAuthMissingError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationQueryStatusesAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneModerationQueryStatusesError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryStatusesError> = z.nativeEnum(
    ToolsOzoneModerationQueryStatusesError,
  );

/** @internal */
export const ToolsOzoneModerationQueryStatusesError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryStatusesError> =
    ToolsOzoneModerationQueryStatusesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryStatusesError$ {
  /** @deprecated use `ToolsOzoneModerationQueryStatusesError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryStatusesError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryStatusesError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationQueryStatusesBadRequestError$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationQueryStatusesError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryStatusesBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ToolsOzoneModerationQueryStatusesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationQueryStatusesBadRequestError$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesBadRequestError$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryStatusesBadRequestError
  > = z.instanceof(ToolsOzoneModerationQueryStatusesBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationQueryStatusesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryStatusesBadRequestError$ {
  /** @deprecated use `ToolsOzoneModerationQueryStatusesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryStatusesBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryStatusesBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesBadRequestError$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationQueryStatusesBadRequestError$Outbound;
}
