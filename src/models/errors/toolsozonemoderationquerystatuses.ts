/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBodyData;

  constructor(
    err: ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody";
  }
}

export const ToolsOzoneModerationQueryStatusesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneModerationQueryStatusesError = ClosedEnum<
  typeof ToolsOzoneModerationQueryStatusesError
>;

/**
 * Bad Request
 */
export type ToolsOzoneModerationQueryStatusesResponseBodyData = {
  error: ToolsOzoneModerationQueryStatusesError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneModerationQueryStatusesResponseBody extends Error {
  error: ToolsOzoneModerationQueryStatusesError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneModerationQueryStatusesResponseBodyData;

  constructor(err: ToolsOzoneModerationQueryStatusesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneModerationQueryStatusesResponseBody";
  }
}

/** @internal */
export const ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody(
        v,
      );
    });

/** @internal */
export type ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody
  > = z.instanceof(
    ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneModerationQueryStatusesToolsOzoneModerationResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneModerationQueryStatusesError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryStatusesError> = z.nativeEnum(
    ToolsOzoneModerationQueryStatusesError,
  );

/** @internal */
export const ToolsOzoneModerationQueryStatusesError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneModerationQueryStatusesError> =
    ToolsOzoneModerationQueryStatusesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryStatusesError$ {
  /** @deprecated use `ToolsOzoneModerationQueryStatusesError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryStatusesError$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryStatusesError$outboundSchema;
}

/** @internal */
export const ToolsOzoneModerationQueryStatusesResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneModerationQueryStatusesError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneModerationQueryStatusesResponseBody(v);
    });

/** @internal */
export type ToolsOzoneModerationQueryStatusesResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneModerationQueryStatusesResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneModerationQueryStatusesResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneModerationQueryStatusesResponseBody
  > = z.instanceof(ToolsOzoneModerationQueryStatusesResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneModerationQueryStatusesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationQueryStatusesResponseBody$ {
  /** @deprecated use `ToolsOzoneModerationQueryStatusesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationQueryStatusesResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationQueryStatusesResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationQueryStatusesResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationQueryStatusesResponseBody$Outbound;
}
