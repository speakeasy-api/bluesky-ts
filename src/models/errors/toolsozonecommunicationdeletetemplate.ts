/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$:
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBodyData;

  constructor(
    err:
      ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody";
  }
}

export const ToolsOzoneCommunicationDeleteTemplateError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneCommunicationDeleteTemplateError = ClosedEnum<
  typeof ToolsOzoneCommunicationDeleteTemplateError
>;

/**
 * Bad Request
 */
export type ToolsOzoneCommunicationDeleteTemplateResponseBodyData = {
  error: ToolsOzoneCommunicationDeleteTemplateError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneCommunicationDeleteTemplateResponseBody extends Error {
  error: ToolsOzoneCommunicationDeleteTemplateError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneCommunicationDeleteTemplateResponseBodyData;

  constructor(err: ToolsOzoneCommunicationDeleteTemplateResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneCommunicationDeleteTemplateResponseBody";
  }
}

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody(
        v,
      );
    });

/** @internal */
export type ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody
  > = z.instanceof(
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$ {
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneCommunicationDeleteTemplateOzoneCommunicationResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneCommunicationDeleteTemplateError> = z
    .nativeEnum(ToolsOzoneCommunicationDeleteTemplateError);

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneCommunicationDeleteTemplateError> =
    ToolsOzoneCommunicationDeleteTemplateError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationDeleteTemplateError$ {
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationDeleteTemplateError$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationDeleteTemplateError$outboundSchema;
}

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationDeleteTemplateResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneCommunicationDeleteTemplateError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneCommunicationDeleteTemplateResponseBody(v);
    });

/** @internal */
export type ToolsOzoneCommunicationDeleteTemplateResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationDeleteTemplateResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneCommunicationDeleteTemplateResponseBody
  > = z.instanceof(ToolsOzoneCommunicationDeleteTemplateResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneCommunicationDeleteTemplateError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationDeleteTemplateResponseBody$ {
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationDeleteTemplateResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationDeleteTemplateResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneCommunicationDeleteTemplateResponseBody$Outbound;
}
