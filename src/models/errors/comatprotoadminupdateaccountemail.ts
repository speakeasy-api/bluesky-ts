/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminUpdateAccountEmailAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminUpdateAccountEmailAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateAccountEmailAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminUpdateAccountEmailAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateAccountEmailAuthMissingError";
  }
}

export const ComAtprotoAdminUpdateAccountEmailError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminUpdateAccountEmailError = ClosedEnum<
  typeof ComAtprotoAdminUpdateAccountEmailError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminUpdateAccountEmailBadRequestErrorData = {
  error: ComAtprotoAdminUpdateAccountEmailError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminUpdateAccountEmailBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminUpdateAccountEmailError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateAccountEmailBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminUpdateAccountEmailBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateAccountEmailBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminUpdateAccountEmailAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountEmailAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateAccountEmailAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateAccountEmailAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateAccountEmailAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountEmailAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateAccountEmailAuthMissingError
  > = z.instanceof(ComAtprotoAdminUpdateAccountEmailAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountEmailAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountEmailAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountEmailAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateAccountEmailAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminUpdateAccountEmailError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateAccountEmailError> = z.nativeEnum(
    ComAtprotoAdminUpdateAccountEmailError,
  );

/** @internal */
export const ComAtprotoAdminUpdateAccountEmailError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateAccountEmailError> =
    ComAtprotoAdminUpdateAccountEmailError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountEmailError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountEmailError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountEmailError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminUpdateAccountEmailBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountEmailBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminUpdateAccountEmailError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateAccountEmailBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateAccountEmailBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateAccountEmailBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountEmailBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateAccountEmailBadRequestError
  > = z.instanceof(ComAtprotoAdminUpdateAccountEmailBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminUpdateAccountEmailError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountEmailBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountEmailBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountEmailBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountEmailBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateAccountEmailBadRequestError$Outbound;
}
