/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminEnableAccountInvitesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminEnableAccountInvitesAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminEnableAccountInvitesAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminEnableAccountInvitesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminEnableAccountInvitesAuthMissingError";
  }
}

export const ComAtprotoAdminEnableAccountInvitesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminEnableAccountInvitesError = ClosedEnum<
  typeof ComAtprotoAdminEnableAccountInvitesError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminEnableAccountInvitesBadRequestErrorData = {
  error: ComAtprotoAdminEnableAccountInvitesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminEnableAccountInvitesBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminEnableAccountInvitesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminEnableAccountInvitesBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminEnableAccountInvitesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminEnableAccountInvitesBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminEnableAccountInvitesAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminEnableAccountInvitesAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminEnableAccountInvitesAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminEnableAccountInvitesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminEnableAccountInvitesAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminEnableAccountInvitesAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminEnableAccountInvitesAuthMissingError
  > = z.instanceof(ComAtprotoAdminEnableAccountInvitesAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminEnableAccountInvitesAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminEnableAccountInvitesAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminEnableAccountInvitesAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminEnableAccountInvitesAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminEnableAccountInvitesError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminEnableAccountInvitesError> = z
    .nativeEnum(ComAtprotoAdminEnableAccountInvitesError);

/** @internal */
export const ComAtprotoAdminEnableAccountInvitesError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminEnableAccountInvitesError> =
    ComAtprotoAdminEnableAccountInvitesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminEnableAccountInvitesError$ {
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminEnableAccountInvitesError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminEnableAccountInvitesError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminEnableAccountInvitesBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminEnableAccountInvitesBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminEnableAccountInvitesError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminEnableAccountInvitesBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminEnableAccountInvitesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminEnableAccountInvitesBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminEnableAccountInvitesBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminEnableAccountInvitesBadRequestError
  > = z.instanceof(ComAtprotoAdminEnableAccountInvitesBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminEnableAccountInvitesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminEnableAccountInvitesBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminEnableAccountInvitesBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminEnableAccountInvitesBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminEnableAccountInvitesBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminEnableAccountInvitesBadRequestError$Outbound;
}
