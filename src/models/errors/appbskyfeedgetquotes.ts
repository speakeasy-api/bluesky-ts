/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetQuotesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetQuotesAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetQuotesAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetQuotesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetQuotesAuthMissingError";
  }
}

export const AppBskyFeedGetQuotesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetQuotesError = ClosedEnum<
  typeof AppBskyFeedGetQuotesError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetQuotesBadRequestErrorData = {
  error: AppBskyFeedGetQuotesError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetQuotesBadRequestError extends BlueskyError {
  error: AppBskyFeedGetQuotesError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetQuotesBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetQuotesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetQuotesBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetQuotesAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetQuotesAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetQuotesAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetQuotesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetQuotesAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetQuotesAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetQuotesAuthMissingError
> = z.instanceof(AppBskyFeedGetQuotesAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetQuotesAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetQuotesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetQuotesAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetQuotesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetQuotesAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetQuotesAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetQuotesAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetQuotesError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetQuotesError
> = z.nativeEnum(AppBskyFeedGetQuotesError);

/** @internal */
export const AppBskyFeedGetQuotesError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetQuotesError
> = AppBskyFeedGetQuotesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetQuotesError$ {
  /** @deprecated use `AppBskyFeedGetQuotesError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetQuotesError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetQuotesError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetQuotesError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetQuotesBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetQuotesBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetQuotesError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetQuotesBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetQuotesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetQuotesBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetQuotesBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetQuotesBadRequestError
> = z.instanceof(AppBskyFeedGetQuotesBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetQuotesError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetQuotesBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetQuotesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetQuotesBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetQuotesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetQuotesBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetQuotesBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetQuotesBadRequestError$Outbound;
}
