/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphGetFollowsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphGetFollowsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetFollowsAuthMissingErrorData;

  constructor(
    err: AppBskyGraphGetFollowsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetFollowsAuthMissingError";
  }
}

export const AppBskyGraphGetFollowsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphGetFollowsError = ClosedEnum<
  typeof AppBskyGraphGetFollowsError
>;

/**
 * Bad Request
 */
export type AppBskyGraphGetFollowsBadRequestErrorData = {
  error: AppBskyGraphGetFollowsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphGetFollowsBadRequestError extends BlueskyError {
  error: AppBskyGraphGetFollowsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetFollowsBadRequestErrorData;

  constructor(
    err: AppBskyGraphGetFollowsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetFollowsBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphGetFollowsAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphGetFollowsAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetFollowsAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetFollowsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphGetFollowsAuthMissingError$outboundSchema: z.ZodType<
  AppBskyGraphGetFollowsAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetFollowsAuthMissingError
> = z.instanceof(AppBskyGraphGetFollowsAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetFollowsAuthMissingError$ {
  /** @deprecated use `AppBskyGraphGetFollowsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetFollowsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetFollowsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetFollowsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphGetFollowsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetFollowsError
> = z.nativeEnum(AppBskyGraphGetFollowsError);

/** @internal */
export const AppBskyGraphGetFollowsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetFollowsError
> = AppBskyGraphGetFollowsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetFollowsError$ {
  /** @deprecated use `AppBskyGraphGetFollowsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetFollowsError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphGetFollowsError$outboundSchema;
}

/** @internal */
export const AppBskyGraphGetFollowsBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphGetFollowsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphGetFollowsError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetFollowsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetFollowsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphGetFollowsBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphGetFollowsBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetFollowsBadRequestError
> = z.instanceof(AppBskyGraphGetFollowsBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphGetFollowsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetFollowsBadRequestError$ {
  /** @deprecated use `AppBskyGraphGetFollowsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetFollowsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetFollowsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetFollowsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetFollowsBadRequestError$Outbound;
}
