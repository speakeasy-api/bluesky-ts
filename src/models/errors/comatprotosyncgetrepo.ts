/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncGetRepoAtprotoSyncResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncGetRepoAtprotoSyncResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetRepoAtprotoSyncResponseBodyData;

  constructor(err: ComAtprotoSyncGetRepoAtprotoSyncResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetRepoAtprotoSyncResponseBody";
  }
}

export const ComAtprotoSyncGetRepoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RepoNotFound: "RepoNotFound",
  RepoTakendown: "RepoTakendown",
  RepoSuspended: "RepoSuspended",
  RepoDeactivated: "RepoDeactivated",
} as const;
export type ComAtprotoSyncGetRepoError = ClosedEnum<
  typeof ComAtprotoSyncGetRepoError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncGetRepoResponseBodyData = {
  error: ComAtprotoSyncGetRepoError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncGetRepoResponseBody extends Error {
  error: ComAtprotoSyncGetRepoError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetRepoResponseBodyData;

  constructor(err: ComAtprotoSyncGetRepoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetRepoResponseBody";
  }
}

/** @internal */
export const ComAtprotoSyncGetRepoAtprotoSyncResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoSyncGetRepoAtprotoSyncResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncGetRepoAtprotoSyncResponseBody(v);
    });

/** @internal */
export type ComAtprotoSyncGetRepoAtprotoSyncResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetRepoAtprotoSyncResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetRepoAtprotoSyncResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetRepoAtprotoSyncResponseBody
  > = z.instanceof(ComAtprotoSyncGetRepoAtprotoSyncResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoAtprotoSyncResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetRepoAtprotoSyncResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetRepoAtprotoSyncResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoAtprotoSyncResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRepoAtprotoSyncResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoAtprotoSyncResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRepoAtprotoSyncResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoSyncGetRepoError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoError
> = z.nativeEnum(ComAtprotoSyncGetRepoError);

/** @internal */
export const ComAtprotoSyncGetRepoError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoError
> = ComAtprotoSyncGetRepoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoError$ {
  /** @deprecated use `ComAtprotoSyncGetRepoError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRepoError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetRepoError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncGetRepoResponseBody$inboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoSyncGetRepoError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncGetRepoResponseBody(v);
  });

/** @internal */
export type ComAtprotoSyncGetRepoResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetRepoResponseBody$outboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetRepoResponseBody
> = z.instanceof(ComAtprotoSyncGetRepoResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoSyncGetRepoError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetRepoResponseBody$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRepoResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRepoResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRepoResponseBody$Outbound;
}
