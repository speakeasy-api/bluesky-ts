/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$:
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBodyData;

  constructor(
    err:
      ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody";
  }
}

export const ComAtprotoIdentityRequestPlcOperationSignatureError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoIdentityRequestPlcOperationSignatureError = ClosedEnum<
  typeof ComAtprotoIdentityRequestPlcOperationSignatureError
>;

/**
 * Bad Request
 */
export type ComAtprotoIdentityRequestPlcOperationSignatureResponseBodyData = {
  error: ComAtprotoIdentityRequestPlcOperationSignatureError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoIdentityRequestPlcOperationSignatureResponseBody
  extends Error
{
  error: ComAtprotoIdentityRequestPlcOperationSignatureError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoIdentityRequestPlcOperationSignatureResponseBodyData;

  constructor(
    err: ComAtprotoIdentityRequestPlcOperationSignatureResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoIdentityRequestPlcOperationSignatureResponseBody";
  }
}

/** @internal */
export const ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody(
        v,
      );
    });

/** @internal */
export type ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody
  > = z.instanceof(
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$ {
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoIdentityRequestPlcOperationSignatureComAtprotoIdentityResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoIdentityRequestPlcOperationSignatureError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentityRequestPlcOperationSignatureError> =
    z.nativeEnum(ComAtprotoIdentityRequestPlcOperationSignatureError);

/** @internal */
export const ComAtprotoIdentityRequestPlcOperationSignatureError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentityRequestPlcOperationSignatureError> =
    ComAtprotoIdentityRequestPlcOperationSignatureError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityRequestPlcOperationSignatureError$ {
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityRequestPlcOperationSignatureError$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityRequestPlcOperationSignatureError$outboundSchema;
}

/** @internal */
export const ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoIdentityRequestPlcOperationSignatureResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoIdentityRequestPlcOperationSignatureError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoIdentityRequestPlcOperationSignatureResponseBody(v);
    });

/** @internal */
export type ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentityRequestPlcOperationSignatureResponseBody
  > = z.instanceof(ComAtprotoIdentityRequestPlcOperationSignatureResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoIdentityRequestPlcOperationSignatureError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$ {
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoIdentityRequestPlcOperationSignatureResponseBody$Outbound;
}
