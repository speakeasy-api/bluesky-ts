/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerDeleteAccountAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerDeleteAccountAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerDeleteAccountAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerDeleteAccountAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerDeleteAccountAuthMissingError";
  }
}

export const ComAtprotoServerDeleteAccountError = {
  ExpiredToken: "ExpiredToken",
  InvalidRequest: "InvalidRequest",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerDeleteAccountError = ClosedEnum<
  typeof ComAtprotoServerDeleteAccountError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerDeleteAccountBadRequestErrorData = {
  error: ComAtprotoServerDeleteAccountError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerDeleteAccountBadRequestError extends BlueskyError {
  error: ComAtprotoServerDeleteAccountError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerDeleteAccountBadRequestErrorData;

  constructor(
    err: ComAtprotoServerDeleteAccountBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerDeleteAccountBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerDeleteAccountAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerDeleteAccountAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerDeleteAccountAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerDeleteAccountAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerDeleteAccountAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerDeleteAccountAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerDeleteAccountAuthMissingError
  > = z.instanceof(ComAtprotoServerDeleteAccountAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeleteAccountAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerDeleteAccountAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeleteAccountAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteAccountAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeleteAccountAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteAccountAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoServerDeleteAccountAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerDeleteAccountError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerDeleteAccountError
> = z.nativeEnum(ComAtprotoServerDeleteAccountError);

/** @internal */
export const ComAtprotoServerDeleteAccountError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerDeleteAccountError
> = ComAtprotoServerDeleteAccountError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeleteAccountError$ {
  /** @deprecated use `ComAtprotoServerDeleteAccountError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerDeleteAccountError$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteAccountError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeleteAccountError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerDeleteAccountBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerDeleteAccountBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerDeleteAccountError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerDeleteAccountBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerDeleteAccountBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerDeleteAccountBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerDeleteAccountBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerDeleteAccountBadRequestError
  > = z.instanceof(ComAtprotoServerDeleteAccountBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerDeleteAccountError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeleteAccountBadRequestError$ {
  /** @deprecated use `ComAtprotoServerDeleteAccountBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeleteAccountBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteAccountBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeleteAccountBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteAccountBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoServerDeleteAccountBadRequestError$Outbound;
}
