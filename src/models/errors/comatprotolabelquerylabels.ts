/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoLabelQueryLabelsResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoLabelQueryLabelsResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoLabelQueryLabelsResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError";
  }
}

export const ComAtprotoLabelQueryLabelsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoLabelQueryLabelsError = ClosedEnum<
  typeof ComAtprotoLabelQueryLabelsError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoLabelQueryLabelsResponseBodyErrorData = {
  error: ComAtprotoLabelQueryLabelsError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoLabelQueryLabelsResponseBodyError
  extends Error
{
  error: ComAtprotoLabelQueryLabelsError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoLabelQueryLabelsResponseBodyErrorData;

  constructor(err: BadRequestComAtprotoLabelQueryLabelsResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoLabelQueryLabelsResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoLabelQueryLabelsResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoLabelQueryLabelsError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoLabelQueryLabelsError
> = z.nativeEnum(ComAtprotoLabelQueryLabelsError);

/** @internal */
export const ComAtprotoLabelQueryLabelsError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoLabelQueryLabelsError
> = ComAtprotoLabelQueryLabelsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoLabelQueryLabelsError$ {
  /** @deprecated use `ComAtprotoLabelQueryLabelsError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoLabelQueryLabelsError$inboundSchema;
  /** @deprecated use `ComAtprotoLabelQueryLabelsError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoLabelQueryLabelsError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoLabelQueryLabelsResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoLabelQueryLabelsResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoLabelQueryLabelsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoLabelQueryLabelsResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoLabelQueryLabelsResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestComAtprotoLabelQueryLabelsResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoLabelQueryLabelsResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoLabelQueryLabelsResponseBodyError
  > = z.instanceof(BadRequestComAtprotoLabelQueryLabelsResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoLabelQueryLabelsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoLabelQueryLabelsResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoLabelQueryLabelsResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoLabelQueryLabelsResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoLabelQueryLabelsResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoLabelQueryLabelsResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoLabelQueryLabelsResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoLabelQueryLabelsResponseBodyError$Outbound;
}
