/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoLabelQueryLabelsAtprotoLabelResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoLabelQueryLabelsAtprotoLabelResponseBodyData;

  constructor(err: ComAtprotoLabelQueryLabelsAtprotoLabelResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody";
  }
}

export const ComAtprotoLabelQueryLabelsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoLabelQueryLabelsError = ClosedEnum<
  typeof ComAtprotoLabelQueryLabelsError
>;

/**
 * Bad Request
 */
export type ComAtprotoLabelQueryLabelsResponseBodyData = {
  error: ComAtprotoLabelQueryLabelsError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoLabelQueryLabelsResponseBody extends Error {
  error: ComAtprotoLabelQueryLabelsError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoLabelQueryLabelsResponseBodyData;

  constructor(err: ComAtprotoLabelQueryLabelsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoLabelQueryLabelsResponseBody";
  }
}

/** @internal */
export const ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody(v);
    });

/** @internal */
export type ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody
  > = z.instanceof(ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$ {
  /** @deprecated use `ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoLabelQueryLabelsAtprotoLabelResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoLabelQueryLabelsError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoLabelQueryLabelsError
> = z.nativeEnum(ComAtprotoLabelQueryLabelsError);

/** @internal */
export const ComAtprotoLabelQueryLabelsError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoLabelQueryLabelsError
> = ComAtprotoLabelQueryLabelsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoLabelQueryLabelsError$ {
  /** @deprecated use `ComAtprotoLabelQueryLabelsError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoLabelQueryLabelsError$inboundSchema;
  /** @deprecated use `ComAtprotoLabelQueryLabelsError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoLabelQueryLabelsError$outboundSchema;
}

/** @internal */
export const ComAtprotoLabelQueryLabelsResponseBody$inboundSchema: z.ZodType<
  ComAtprotoLabelQueryLabelsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoLabelQueryLabelsError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoLabelQueryLabelsResponseBody(v);
  });

/** @internal */
export type ComAtprotoLabelQueryLabelsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoLabelQueryLabelsResponseBody$outboundSchema: z.ZodType<
  ComAtprotoLabelQueryLabelsResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoLabelQueryLabelsResponseBody
> = z.instanceof(ComAtprotoLabelQueryLabelsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoLabelQueryLabelsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoLabelQueryLabelsResponseBody$ {
  /** @deprecated use `ComAtprotoLabelQueryLabelsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoLabelQueryLabelsResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoLabelQueryLabelsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoLabelQueryLabelsResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoLabelQueryLabelsResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoLabelQueryLabelsResponseBody$Outbound;
}
