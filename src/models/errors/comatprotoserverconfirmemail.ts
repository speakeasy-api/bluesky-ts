/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerConfirmEmailAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerConfirmEmailAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerConfirmEmailAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerConfirmEmailAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerConfirmEmailAuthMissingError";
  }
}

export const ComAtprotoServerConfirmEmailError = {
  AccountNotFound: "AccountNotFound",
  ExpiredToken: "ExpiredToken",
  InvalidEmail: "InvalidEmail",
  InvalidRequest: "InvalidRequest",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerConfirmEmailError = ClosedEnum<
  typeof ComAtprotoServerConfirmEmailError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerConfirmEmailBadRequestErrorData = {
  error: ComAtprotoServerConfirmEmailError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerConfirmEmailBadRequestError extends BlueskyError {
  error: ComAtprotoServerConfirmEmailError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerConfirmEmailBadRequestErrorData;

  constructor(
    err: ComAtprotoServerConfirmEmailBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerConfirmEmailBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerConfirmEmailAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerConfirmEmailAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerConfirmEmailAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerConfirmEmailAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerConfirmEmailAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerConfirmEmailAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerConfirmEmailAuthMissingError
  > = z.instanceof(ComAtprotoServerConfirmEmailAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerConfirmEmailAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerConfirmEmailAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerConfirmEmailAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerConfirmEmailAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerConfirmEmailAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerConfirmEmailAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoServerConfirmEmailAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerConfirmEmailError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerConfirmEmailError
> = z.nativeEnum(ComAtprotoServerConfirmEmailError);

/** @internal */
export const ComAtprotoServerConfirmEmailError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerConfirmEmailError
> = ComAtprotoServerConfirmEmailError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerConfirmEmailError$ {
  /** @deprecated use `ComAtprotoServerConfirmEmailError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerConfirmEmailError$inboundSchema;
  /** @deprecated use `ComAtprotoServerConfirmEmailError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerConfirmEmailError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerConfirmEmailBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerConfirmEmailBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerConfirmEmailError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerConfirmEmailBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerConfirmEmailBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerConfirmEmailBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerConfirmEmailBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerConfirmEmailBadRequestError
  > = z.instanceof(ComAtprotoServerConfirmEmailBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerConfirmEmailError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerConfirmEmailBadRequestError$ {
  /** @deprecated use `ComAtprotoServerConfirmEmailBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerConfirmEmailBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerConfirmEmailBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerConfirmEmailBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerConfirmEmailBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoServerConfirmEmailBadRequestError$Outbound;
}
