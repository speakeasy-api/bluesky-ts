/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerCreateInviteCodesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerCreateInviteCodesError = ClosedEnum<
  typeof ComAtprotoServerCreateInviteCodesError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCreateInviteCodesResponseBodyData = {
  error: ComAtprotoServerCreateInviteCodesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCreateInviteCodesResponseBody extends Error {
  error: ComAtprotoServerCreateInviteCodesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodesResponseBodyData;

  constructor(err: ComAtprotoServerCreateInviteCodesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodesResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody(
        v,
      );
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody
  > = z.instanceof(
    ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateInviteCodesComAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodesError> = z.nativeEnum(
    ComAtprotoServerCreateInviteCodesError,
  );

/** @internal */
export const ComAtprotoServerCreateInviteCodesError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodesError> =
    ComAtprotoServerCreateInviteCodesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateInviteCodesError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodesResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodesResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodesResponseBody
  > = z.instanceof(ComAtprotoServerCreateInviteCodesResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateInviteCodesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesResponseBody$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateInviteCodesResponseBody$Outbound;
}
