/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCreateInviteCodesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerCreateInviteCodesAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodesAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerCreateInviteCodesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodesAuthMissingError";
  }
}

export const ComAtprotoServerCreateInviteCodesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerCreateInviteCodesError = ClosedEnum<
  typeof ComAtprotoServerCreateInviteCodesError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCreateInviteCodesBadRequestErrorData = {
  error: ComAtprotoServerCreateInviteCodesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCreateInviteCodesBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerCreateInviteCodesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateInviteCodesBadRequestErrorData;

  constructor(
    err: ComAtprotoServerCreateInviteCodesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerCreateInviteCodesBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodesAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodesAuthMissingError
  > = z.instanceof(ComAtprotoServerCreateInviteCodesAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateInviteCodesAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodesError> = z.nativeEnum(
    ComAtprotoServerCreateInviteCodesError,
  );

/** @internal */
export const ComAtprotoServerCreateInviteCodesError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerCreateInviteCodesError> =
    ComAtprotoServerCreateInviteCodesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateInviteCodesError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateInviteCodesBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerCreateInviteCodesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodesBadRequestError
  > = z.instanceof(ComAtprotoServerCreateInviteCodesBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateInviteCodesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesBadRequestError$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateInviteCodesBadRequestError$Outbound;
}
