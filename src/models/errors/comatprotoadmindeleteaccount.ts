/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBodyData;

  constructor(
    err: ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody";
  }
}

export const ComAtprotoAdminDeleteAccountError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminDeleteAccountError = ClosedEnum<
  typeof ComAtprotoAdminDeleteAccountError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminDeleteAccountResponseBodyData = {
  error: ComAtprotoAdminDeleteAccountError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminDeleteAccountResponseBody extends Error {
  error: ComAtprotoAdminDeleteAccountError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDeleteAccountResponseBodyData;

  constructor(err: ComAtprotoAdminDeleteAccountResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoAdminDeleteAccountResponseBody";
  }
}

/** @internal */
export const ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody(v);
    });

/** @internal */
export type ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody
  > = z.instanceof(ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$ {
  /** @deprecated use `ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminDeleteAccountComAtprotoAdminResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoAdminDeleteAccountError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminDeleteAccountError
> = z.nativeEnum(ComAtprotoAdminDeleteAccountError);

/** @internal */
export const ComAtprotoAdminDeleteAccountError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminDeleteAccountError
> = ComAtprotoAdminDeleteAccountError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDeleteAccountError$ {
  /** @deprecated use `ComAtprotoAdminDeleteAccountError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminDeleteAccountError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDeleteAccountError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminDeleteAccountResponseBody$inboundSchema: z.ZodType<
  ComAtprotoAdminDeleteAccountResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoAdminDeleteAccountError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoAdminDeleteAccountResponseBody(v);
  });

/** @internal */
export type ComAtprotoAdminDeleteAccountResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminDeleteAccountResponseBody$outboundSchema: z.ZodType<
  ComAtprotoAdminDeleteAccountResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminDeleteAccountResponseBody
> = z.instanceof(ComAtprotoAdminDeleteAccountResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoAdminDeleteAccountError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDeleteAccountResponseBody$ {
  /** @deprecated use `ComAtprotoAdminDeleteAccountResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDeleteAccountResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDeleteAccountResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoAdminDeleteAccountResponseBody$Outbound;
}
