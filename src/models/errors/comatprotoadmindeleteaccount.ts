/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminDeleteAccountAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminDeleteAccountAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDeleteAccountAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminDeleteAccountAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminDeleteAccountAuthMissingError";
  }
}

export const ComAtprotoAdminDeleteAccountError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminDeleteAccountError = ClosedEnum<
  typeof ComAtprotoAdminDeleteAccountError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminDeleteAccountBadRequestErrorData = {
  error: ComAtprotoAdminDeleteAccountError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminDeleteAccountBadRequestError extends BlueskyError {
  error: ComAtprotoAdminDeleteAccountError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDeleteAccountBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminDeleteAccountBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminDeleteAccountBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminDeleteAccountAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminDeleteAccountAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminDeleteAccountAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminDeleteAccountAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminDeleteAccountAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminDeleteAccountAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminDeleteAccountAuthMissingError
  > = z.instanceof(ComAtprotoAdminDeleteAccountAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDeleteAccountAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminDeleteAccountAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDeleteAccountAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDeleteAccountAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminDeleteAccountAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminDeleteAccountError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminDeleteAccountError
> = z.nativeEnum(ComAtprotoAdminDeleteAccountError);

/** @internal */
export const ComAtprotoAdminDeleteAccountError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminDeleteAccountError
> = ComAtprotoAdminDeleteAccountError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDeleteAccountError$ {
  /** @deprecated use `ComAtprotoAdminDeleteAccountError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminDeleteAccountError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDeleteAccountError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminDeleteAccountBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminDeleteAccountBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminDeleteAccountError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminDeleteAccountBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminDeleteAccountBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminDeleteAccountBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminDeleteAccountBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminDeleteAccountBadRequestError
  > = z.instanceof(ComAtprotoAdminDeleteAccountBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminDeleteAccountError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDeleteAccountBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminDeleteAccountBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDeleteAccountBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDeleteAccountBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDeleteAccountBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminDeleteAccountBadRequestError$Outbound;
}
