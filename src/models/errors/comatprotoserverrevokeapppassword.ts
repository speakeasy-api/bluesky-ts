/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerRevokeAppPasswordAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerRevokeAppPasswordAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRevokeAppPasswordAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerRevokeAppPasswordAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerRevokeAppPasswordAuthMissingError";
  }
}

export const ComAtprotoServerRevokeAppPasswordError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerRevokeAppPasswordError = ClosedEnum<
  typeof ComAtprotoServerRevokeAppPasswordError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerRevokeAppPasswordBadRequestErrorData = {
  error: ComAtprotoServerRevokeAppPasswordError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerRevokeAppPasswordBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerRevokeAppPasswordError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRevokeAppPasswordBadRequestErrorData;

  constructor(
    err: ComAtprotoServerRevokeAppPasswordBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerRevokeAppPasswordBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerRevokeAppPasswordAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerRevokeAppPasswordAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRevokeAppPasswordAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerRevokeAppPasswordAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerRevokeAppPasswordAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerRevokeAppPasswordAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRevokeAppPasswordAuthMissingError
  > = z.instanceof(ComAtprotoServerRevokeAppPasswordAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRevokeAppPasswordAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRevokeAppPasswordAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRevokeAppPasswordAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRevokeAppPasswordAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerRevokeAppPasswordError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRevokeAppPasswordError> = z.nativeEnum(
    ComAtprotoServerRevokeAppPasswordError,
  );

/** @internal */
export const ComAtprotoServerRevokeAppPasswordError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRevokeAppPasswordError> =
    ComAtprotoServerRevokeAppPasswordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRevokeAppPasswordError$ {
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRevokeAppPasswordError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRevokeAppPasswordError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRevokeAppPasswordBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerRevokeAppPasswordBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRevokeAppPasswordError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRevokeAppPasswordBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerRevokeAppPasswordBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerRevokeAppPasswordBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerRevokeAppPasswordBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRevokeAppPasswordBadRequestError
  > = z.instanceof(ComAtprotoServerRevokeAppPasswordBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRevokeAppPasswordError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRevokeAppPasswordBadRequestError$ {
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRevokeAppPasswordBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRevokeAppPasswordBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerRevokeAppPasswordBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRevokeAppPasswordBadRequestError$Outbound;
}
