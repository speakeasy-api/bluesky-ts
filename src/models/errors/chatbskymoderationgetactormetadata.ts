/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ChatBskyModerationGetActorMetadataChatModerationResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ChatBskyModerationGetActorMetadataChatModerationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ChatBskyModerationGetActorMetadataChatModerationResponseBodyData;

  constructor(
    err: ChatBskyModerationGetActorMetadataChatModerationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyModerationGetActorMetadataChatModerationResponseBody";
  }
}

export const ChatBskyModerationGetActorMetadataError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyModerationGetActorMetadataError = ClosedEnum<
  typeof ChatBskyModerationGetActorMetadataError
>;

/**
 * Bad Request
 */
export type ChatBskyModerationGetActorMetadataResponseBodyData = {
  error: ChatBskyModerationGetActorMetadataError;
  message: string;
};

/**
 * Bad Request
 */
export class ChatBskyModerationGetActorMetadataResponseBody extends Error {
  error: ChatBskyModerationGetActorMetadataError;

  /** The original data that was passed to this error instance. */
  data$: ChatBskyModerationGetActorMetadataResponseBodyData;

  constructor(err: ChatBskyModerationGetActorMetadataResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ChatBskyModerationGetActorMetadataResponseBody";
  }
}

/** @internal */
export const ChatBskyModerationGetActorMetadataChatModerationResponseBody$inboundSchema:
  z.ZodType<
    ChatBskyModerationGetActorMetadataChatModerationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ChatBskyModerationGetActorMetadataChatModerationResponseBody(
        v,
      );
    });

/** @internal */
export type ChatBskyModerationGetActorMetadataChatModerationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ChatBskyModerationGetActorMetadataChatModerationResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyModerationGetActorMetadataChatModerationResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyModerationGetActorMetadataChatModerationResponseBody
  > = z.instanceof(ChatBskyModerationGetActorMetadataChatModerationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationGetActorMetadataChatModerationResponseBody$ {
  /** @deprecated use `ChatBskyModerationGetActorMetadataChatModerationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationGetActorMetadataChatModerationResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyModerationGetActorMetadataChatModerationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationGetActorMetadataChatModerationResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyModerationGetActorMetadataChatModerationResponseBody$Outbound` instead. */
  export type Outbound =
    ChatBskyModerationGetActorMetadataChatModerationResponseBody$Outbound;
}

/** @internal */
export const ChatBskyModerationGetActorMetadataError$inboundSchema:
  z.ZodNativeEnum<typeof ChatBskyModerationGetActorMetadataError> = z
    .nativeEnum(ChatBskyModerationGetActorMetadataError);

/** @internal */
export const ChatBskyModerationGetActorMetadataError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyModerationGetActorMetadataError> =
    ChatBskyModerationGetActorMetadataError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationGetActorMetadataError$ {
  /** @deprecated use `ChatBskyModerationGetActorMetadataError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationGetActorMetadataError$inboundSchema;
  /** @deprecated use `ChatBskyModerationGetActorMetadataError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationGetActorMetadataError$outboundSchema;
}

/** @internal */
export const ChatBskyModerationGetActorMetadataResponseBody$inboundSchema:
  z.ZodType<
    ChatBskyModerationGetActorMetadataResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyModerationGetActorMetadataError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ChatBskyModerationGetActorMetadataResponseBody(v);
    });

/** @internal */
export type ChatBskyModerationGetActorMetadataResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ChatBskyModerationGetActorMetadataResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyModerationGetActorMetadataResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyModerationGetActorMetadataResponseBody
  > = z.instanceof(ChatBskyModerationGetActorMetadataResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyModerationGetActorMetadataError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationGetActorMetadataResponseBody$ {
  /** @deprecated use `ChatBskyModerationGetActorMetadataResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationGetActorMetadataResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyModerationGetActorMetadataResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationGetActorMetadataResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyModerationGetActorMetadataResponseBody$Outbound` instead. */
  export type Outbound =
    ChatBskyModerationGetActorMetadataResponseBody$Outbound;
}
