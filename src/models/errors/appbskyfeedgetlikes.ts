/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetLikesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetLikesAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetLikesAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetLikesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetLikesAuthMissingError";
  }
}

export const AppBskyFeedGetLikesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyFeedGetLikesError = ClosedEnum<
  typeof AppBskyFeedGetLikesError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetLikesBadRequestErrorData = {
  error: AppBskyFeedGetLikesError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetLikesBadRequestError extends BlueskyError {
  error: AppBskyFeedGetLikesError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetLikesBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetLikesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetLikesBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetLikesAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetLikesAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetLikesAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetLikesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetLikesAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetLikesAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetLikesAuthMissingError
> = z.instanceof(AppBskyFeedGetLikesAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetLikesAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetLikesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetLikesAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetLikesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetLikesAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetLikesAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetLikesAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetLikesError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetLikesError
> = z.nativeEnum(AppBskyFeedGetLikesError);

/** @internal */
export const AppBskyFeedGetLikesError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetLikesError
> = AppBskyFeedGetLikesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetLikesError$ {
  /** @deprecated use `AppBskyFeedGetLikesError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetLikesError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetLikesError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetLikesError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetLikesBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetLikesBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetLikesError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetLikesBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetLikesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetLikesBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetLikesBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetLikesBadRequestError
> = z.instanceof(AppBskyFeedGetLikesBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetLikesError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetLikesBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetLikesBadRequestError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetLikesBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetLikesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetLikesBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetLikesBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetLikesBadRequestError$Outbound;
}
