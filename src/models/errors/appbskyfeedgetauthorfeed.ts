/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetAuthorFeedAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetAuthorFeedAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetAuthorFeedAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetAuthorFeedAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetAuthorFeedAuthMissingError";
  }
}

export const AppBskyFeedGetAuthorFeedError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BlockedActor: "BlockedActor",
  BlockedByActor: "BlockedByActor",
} as const;
export type AppBskyFeedGetAuthorFeedError = ClosedEnum<
  typeof AppBskyFeedGetAuthorFeedError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetAuthorFeedBadRequestErrorData = {
  error: AppBskyFeedGetAuthorFeedError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetAuthorFeedBadRequestError extends BlueskyError {
  error: AppBskyFeedGetAuthorFeedError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetAuthorFeedBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetAuthorFeedBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetAuthorFeedBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetAuthorFeedAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetAuthorFeedAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetAuthorFeedAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetAuthorFeedAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetAuthorFeedAuthMissingError
> = z.instanceof(AppBskyFeedGetAuthorFeedAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetAuthorFeedAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetAuthorFeedAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetAuthorFeedAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetAuthorFeedAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetAuthorFeedAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetAuthorFeedError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetAuthorFeedError
> = z.nativeEnum(AppBskyFeedGetAuthorFeedError);

/** @internal */
export const AppBskyFeedGetAuthorFeedError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetAuthorFeedError
> = AppBskyFeedGetAuthorFeedError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetAuthorFeedError$ {
  /** @deprecated use `AppBskyFeedGetAuthorFeedError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetAuthorFeedError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetAuthorFeedError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetAuthorFeedBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetAuthorFeedError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetAuthorFeedBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetAuthorFeedBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetAuthorFeedBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetAuthorFeedBadRequestError
> = z.instanceof(AppBskyFeedGetAuthorFeedBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetAuthorFeedError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetAuthorFeedBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetAuthorFeedBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetAuthorFeedBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetAuthorFeedBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetAuthorFeedBadRequestError$Outbound;
}
