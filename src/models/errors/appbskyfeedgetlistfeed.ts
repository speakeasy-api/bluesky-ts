/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetListFeedAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetListFeedAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetListFeedAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetListFeedAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetListFeedAuthMissingError";
  }
}

export const AppBskyFeedGetListFeedError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  UnknownList: "UnknownList",
} as const;
export type AppBskyFeedGetListFeedError = ClosedEnum<
  typeof AppBskyFeedGetListFeedError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetListFeedBadRequestErrorData = {
  error: AppBskyFeedGetListFeedError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetListFeedBadRequestError extends BlueskyError {
  error: AppBskyFeedGetListFeedError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetListFeedBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetListFeedBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetListFeedBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetListFeedAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetListFeedAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetListFeedAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetListFeedAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetListFeedAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetListFeedAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetListFeedAuthMissingError
> = z.instanceof(AppBskyFeedGetListFeedAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetListFeedAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetListFeedAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetListFeedAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetListFeedAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetListFeedAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetListFeedAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetListFeedAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetListFeedError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetListFeedError
> = z.nativeEnum(AppBskyFeedGetListFeedError);

/** @internal */
export const AppBskyFeedGetListFeedError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetListFeedError
> = AppBskyFeedGetListFeedError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetListFeedError$ {
  /** @deprecated use `AppBskyFeedGetListFeedError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetListFeedError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetListFeedError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetListFeedError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetListFeedBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetListFeedBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetListFeedError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetListFeedBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetListFeedBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetListFeedBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetListFeedBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetListFeedBadRequestError
> = z.instanceof(AppBskyFeedGetListFeedBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetListFeedError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetListFeedBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetListFeedBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetListFeedBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetListFeedBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetListFeedBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetListFeedBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetListFeedBadRequestError$Outbound;
}
