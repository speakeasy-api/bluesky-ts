/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError";
  }
}

export const ComAtprotoAdminGetSubjectStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminGetSubjectStatusError = ClosedEnum<
  typeof ComAtprotoAdminGetSubjectStatusError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoAdminGetSubjectStatusResponseBodyErrorData = {
  error: ComAtprotoAdminGetSubjectStatusError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError
  extends Error
{
  error: ComAtprotoAdminGetSubjectStatusError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoAdminGetSubjectStatusResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoAdminGetSubjectStatusResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoAdminGetSubjectStatusError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminGetSubjectStatusError> = z.nativeEnum(
    ComAtprotoAdminGetSubjectStatusError,
  );

/** @internal */
export const ComAtprotoAdminGetSubjectStatusError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminGetSubjectStatusError> =
    ComAtprotoAdminGetSubjectStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetSubjectStatusError$ {
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetSubjectStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetSubjectStatusError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminGetSubjectStatusError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError
  > = z.instanceof(BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminGetSubjectStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoAdminGetSubjectStatusResponseBodyError$Outbound;
}
