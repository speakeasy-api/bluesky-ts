/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminGetSubjectStatusAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminGetSubjectStatusAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetSubjectStatusAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminGetSubjectStatusAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetSubjectStatusAuthMissingError";
  }
}

export const ComAtprotoAdminGetSubjectStatusError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminGetSubjectStatusError = ClosedEnum<
  typeof ComAtprotoAdminGetSubjectStatusError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminGetSubjectStatusBadRequestErrorData = {
  error: ComAtprotoAdminGetSubjectStatusError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminGetSubjectStatusBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminGetSubjectStatusError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetSubjectStatusBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminGetSubjectStatusBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetSubjectStatusBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminGetSubjectStatusAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetSubjectStatusAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetSubjectStatusAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetSubjectStatusAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetSubjectStatusAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetSubjectStatusAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetSubjectStatusAuthMissingError
  > = z.instanceof(ComAtprotoAdminGetSubjectStatusAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetSubjectStatusAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetSubjectStatusAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetSubjectStatusAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminGetSubjectStatusAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminGetSubjectStatusError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminGetSubjectStatusError> = z.nativeEnum(
    ComAtprotoAdminGetSubjectStatusError,
  );

/** @internal */
export const ComAtprotoAdminGetSubjectStatusError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminGetSubjectStatusError> =
    ComAtprotoAdminGetSubjectStatusError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetSubjectStatusError$ {
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetSubjectStatusError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetSubjectStatusError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminGetSubjectStatusBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetSubjectStatusBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminGetSubjectStatusError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetSubjectStatusBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetSubjectStatusBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetSubjectStatusBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetSubjectStatusBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetSubjectStatusBadRequestError
  > = z.instanceof(ComAtprotoAdminGetSubjectStatusBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminGetSubjectStatusError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetSubjectStatusBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetSubjectStatusBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetSubjectStatusBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminGetSubjectStatusBadRequestError$Outbound;
}
