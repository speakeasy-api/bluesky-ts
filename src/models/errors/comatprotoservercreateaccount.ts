/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerCreateAccountResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerCreateAccountResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerCreateAccountResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerCreateAccountResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoServerCreateAccountResponseBodyError";
  }
}

export const ComAtprotoServerCreateAccountError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  InvalidHandle: "InvalidHandle",
  InvalidPassword: "InvalidPassword",
  InvalidInviteCode: "InvalidInviteCode",
  HandleNotAvailable: "HandleNotAvailable",
  UnsupportedDomain: "UnsupportedDomain",
  UnresolvableDid: "UnresolvableDid",
  IncompatibleDidDoc: "IncompatibleDidDoc",
} as const;
export type ComAtprotoServerCreateAccountError = ClosedEnum<
  typeof ComAtprotoServerCreateAccountError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerCreateAccountResponseBodyErrorData = {
  error: ComAtprotoServerCreateAccountError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerCreateAccountResponseBodyError
  extends Error
{
  error: ComAtprotoServerCreateAccountError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerCreateAccountResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerCreateAccountResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerCreateAccountResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerCreateAccountResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerCreateAccountResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerCreateAccountResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoServerCreateAccountResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerCreateAccountResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerCreateAccountResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerCreateAccountResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoServerCreateAccountResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerCreateAccountResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerCreateAccountResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerCreateAccountResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerCreateAccountResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerCreateAccountResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerCreateAccountResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerCreateAccountResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateAccountError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerCreateAccountError
> = z.nativeEnum(ComAtprotoServerCreateAccountError);

/** @internal */
export const ComAtprotoServerCreateAccountError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerCreateAccountError
> = ComAtprotoServerCreateAccountError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAccountError$ {
  /** @deprecated use `ComAtprotoServerCreateAccountError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerCreateAccountError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAccountError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAccountError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerCreateAccountResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerCreateAccountResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerCreateAccountError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerCreateAccountResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoServerCreateAccountResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerCreateAccountResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerCreateAccountResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerCreateAccountResponseBodyError
  > = z.instanceof(BadRequestComAtprotoServerCreateAccountResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateAccountError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerCreateAccountResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerCreateAccountResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerCreateAccountResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerCreateAccountResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerCreateAccountResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerCreateAccountResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerCreateAccountResponseBodyError$Outbound;
}
