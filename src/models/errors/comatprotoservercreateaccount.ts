/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerCreateAccountAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerCreateAccountAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateAccountAtprotoServerResponseBodyData;

  constructor(err: ComAtprotoServerCreateAccountAtprotoServerResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCreateAccountAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerCreateAccountError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  InvalidHandle: "InvalidHandle",
  InvalidPassword: "InvalidPassword",
  InvalidInviteCode: "InvalidInviteCode",
  HandleNotAvailable: "HandleNotAvailable",
  UnsupportedDomain: "UnsupportedDomain",
  UnresolvableDid: "UnresolvableDid",
  IncompatibleDidDoc: "IncompatibleDidDoc",
} as const;
export type ComAtprotoServerCreateAccountError = ClosedEnum<
  typeof ComAtprotoServerCreateAccountError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerCreateAccountResponseBodyData = {
  error: ComAtprotoServerCreateAccountError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerCreateAccountResponseBody extends Error {
  error: ComAtprotoServerCreateAccountError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerCreateAccountResponseBodyData;

  constructor(err: ComAtprotoServerCreateAccountResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerCreateAccountResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerCreateAccountAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateAccountAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerCreateAccountAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerCreateAccountAtprotoServerResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateAccountAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateAccountAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateAccountAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerCreateAccountAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAccountAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerCreateAccountAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateAccountAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAccountAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAccountAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAccountAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerCreateAccountAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerCreateAccountError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerCreateAccountError
> = z.nativeEnum(ComAtprotoServerCreateAccountError);

/** @internal */
export const ComAtprotoServerCreateAccountError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerCreateAccountError
> = ComAtprotoServerCreateAccountError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAccountError$ {
  /** @deprecated use `ComAtprotoServerCreateAccountError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerCreateAccountError$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAccountError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAccountError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerCreateAccountResponseBody$inboundSchema: z.ZodType<
  ComAtprotoServerCreateAccountResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoServerCreateAccountError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoServerCreateAccountResponseBody(v);
  });

/** @internal */
export type ComAtprotoServerCreateAccountResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerCreateAccountResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateAccountResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateAccountResponseBody
  > = z.instanceof(ComAtprotoServerCreateAccountResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerCreateAccountError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAccountResponseBody$ {
  /** @deprecated use `ComAtprotoServerCreateAccountResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateAccountResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAccountResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAccountResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAccountResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateAccountResponseBody$Outbound;
}
