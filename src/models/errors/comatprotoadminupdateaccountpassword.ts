/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminUpdateAccountPasswordAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminUpdateAccountPasswordAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateAccountPasswordAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminUpdateAccountPasswordAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateAccountPasswordAuthMissingError";
  }
}

export const ComAtprotoAdminUpdateAccountPasswordError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminUpdateAccountPasswordError = ClosedEnum<
  typeof ComAtprotoAdminUpdateAccountPasswordError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminUpdateAccountPasswordBadRequestErrorData = {
  error: ComAtprotoAdminUpdateAccountPasswordError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminUpdateAccountPasswordBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminUpdateAccountPasswordError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateAccountPasswordBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminUpdateAccountPasswordBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateAccountPasswordBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminUpdateAccountPasswordAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountPasswordAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateAccountPasswordAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateAccountPasswordAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateAccountPasswordAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountPasswordAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateAccountPasswordAuthMissingError
  > = z.instanceof(ComAtprotoAdminUpdateAccountPasswordAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountPasswordAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountPasswordAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountPasswordAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateAccountPasswordAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminUpdateAccountPasswordError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateAccountPasswordError> = z
    .nativeEnum(ComAtprotoAdminUpdateAccountPasswordError);

/** @internal */
export const ComAtprotoAdminUpdateAccountPasswordError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateAccountPasswordError> =
    ComAtprotoAdminUpdateAccountPasswordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountPasswordError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountPasswordError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountPasswordError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminUpdateAccountPasswordBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountPasswordBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminUpdateAccountPasswordError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateAccountPasswordBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateAccountPasswordBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateAccountPasswordBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountPasswordBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateAccountPasswordBadRequestError
  > = z.instanceof(ComAtprotoAdminUpdateAccountPasswordBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminUpdateAccountPasswordError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountPasswordBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountPasswordBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountPasswordBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountPasswordBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateAccountPasswordBadRequestError$Outbound;
}
