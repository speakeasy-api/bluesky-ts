/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminGetAccountInfoAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminGetAccountInfoAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetAccountInfoAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminGetAccountInfoAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetAccountInfoAuthMissingError";
  }
}

export const ComAtprotoAdminGetAccountInfoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminGetAccountInfoError = ClosedEnum<
  typeof ComAtprotoAdminGetAccountInfoError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminGetAccountInfoBadRequestErrorData = {
  error: ComAtprotoAdminGetAccountInfoError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminGetAccountInfoBadRequestError extends BlueskyError {
  error: ComAtprotoAdminGetAccountInfoError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetAccountInfoBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminGetAccountInfoBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetAccountInfoBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminGetAccountInfoAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfoAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetAccountInfoAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetAccountInfoAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetAccountInfoAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfoAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetAccountInfoAuthMissingError
  > = z.instanceof(ComAtprotoAdminGetAccountInfoAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetAccountInfoAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminGetAccountInfoAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetAccountInfoAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfoAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetAccountInfoAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfoAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetAccountInfoAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminGetAccountInfoError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminGetAccountInfoError
> = z.nativeEnum(ComAtprotoAdminGetAccountInfoError);

/** @internal */
export const ComAtprotoAdminGetAccountInfoError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminGetAccountInfoError
> = ComAtprotoAdminGetAccountInfoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetAccountInfoError$ {
  /** @deprecated use `ComAtprotoAdminGetAccountInfoError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminGetAccountInfoError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfoError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetAccountInfoError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminGetAccountInfoBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfoBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminGetAccountInfoError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetAccountInfoBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetAccountInfoBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetAccountInfoBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfoBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetAccountInfoBadRequestError
  > = z.instanceof(ComAtprotoAdminGetAccountInfoBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminGetAccountInfoError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetAccountInfoBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminGetAccountInfoBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetAccountInfoBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfoBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetAccountInfoBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfoBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetAccountInfoBadRequestError$Outbound;
}
