/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneTeamListMembersToolsOzoneTeamResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamListMembersToolsOzoneTeamResponseBodyData;

  constructor(err: ToolsOzoneTeamListMembersToolsOzoneTeamResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody";
  }
}

export const ToolsOzoneTeamListMembersError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneTeamListMembersError = ClosedEnum<
  typeof ToolsOzoneTeamListMembersError
>;

/**
 * Bad Request
 */
export type ToolsOzoneTeamListMembersResponseBodyData = {
  error: ToolsOzoneTeamListMembersError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneTeamListMembersResponseBody extends Error {
  error: ToolsOzoneTeamListMembersError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamListMembersResponseBodyData;

  constructor(err: ToolsOzoneTeamListMembersResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneTeamListMembersResponseBody";
  }
}

/** @internal */
export const ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody(v);
    });

/** @internal */
export type ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody
  > = z.instanceof(ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$ {
  /** @deprecated use `ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneTeamListMembersToolsOzoneTeamResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneTeamListMembersError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamListMembersError
> = z.nativeEnum(ToolsOzoneTeamListMembersError);

/** @internal */
export const ToolsOzoneTeamListMembersError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamListMembersError
> = ToolsOzoneTeamListMembersError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamListMembersError$ {
  /** @deprecated use `ToolsOzoneTeamListMembersError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamListMembersError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamListMembersError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamListMembersError$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamListMembersResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneTeamListMembersResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneTeamListMembersError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneTeamListMembersResponseBody(v);
  });

/** @internal */
export type ToolsOzoneTeamListMembersResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneTeamListMembersResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneTeamListMembersResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneTeamListMembersResponseBody
> = z.instanceof(ToolsOzoneTeamListMembersResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ToolsOzoneTeamListMembersError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamListMembersResponseBody$ {
  /** @deprecated use `ToolsOzoneTeamListMembersResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamListMembersResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamListMembersResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamListMembersResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamListMembersResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamListMembersResponseBody$Outbound;
}
