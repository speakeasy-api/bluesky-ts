/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphUnmuteActorAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphUnmuteActorAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphUnmuteActorAuthMissingErrorData;

  constructor(
    err: AppBskyGraphUnmuteActorAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphUnmuteActorAuthMissingError";
  }
}

export const AppBskyGraphUnmuteActorError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphUnmuteActorError = ClosedEnum<
  typeof AppBskyGraphUnmuteActorError
>;

/**
 * Bad Request
 */
export type AppBskyGraphUnmuteActorBadRequestErrorData = {
  error: AppBskyGraphUnmuteActorError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphUnmuteActorBadRequestError extends BlueskyError {
  error: AppBskyGraphUnmuteActorError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphUnmuteActorBadRequestErrorData;

  constructor(
    err: AppBskyGraphUnmuteActorBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphUnmuteActorBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphUnmuteActorAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphUnmuteActorAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphUnmuteActorAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphUnmuteActorAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphUnmuteActorAuthMissingError$outboundSchema: z.ZodType<
  AppBskyGraphUnmuteActorAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphUnmuteActorAuthMissingError
> = z.instanceof(AppBskyGraphUnmuteActorAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphUnmuteActorAuthMissingError$ {
  /** @deprecated use `AppBskyGraphUnmuteActorAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphUnmuteActorAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteActorAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphUnmuteActorAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteActorAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphUnmuteActorAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphUnmuteActorError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphUnmuteActorError
> = z.nativeEnum(AppBskyGraphUnmuteActorError);

/** @internal */
export const AppBskyGraphUnmuteActorError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphUnmuteActorError
> = AppBskyGraphUnmuteActorError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphUnmuteActorError$ {
  /** @deprecated use `AppBskyGraphUnmuteActorError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphUnmuteActorError$inboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteActorError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphUnmuteActorError$outboundSchema;
}

/** @internal */
export const AppBskyGraphUnmuteActorBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphUnmuteActorBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphUnmuteActorError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphUnmuteActorBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphUnmuteActorBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphUnmuteActorBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphUnmuteActorBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphUnmuteActorBadRequestError
> = z.instanceof(AppBskyGraphUnmuteActorBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphUnmuteActorError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphUnmuteActorBadRequestError$ {
  /** @deprecated use `AppBskyGraphUnmuteActorBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphUnmuteActorBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteActorBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphUnmuteActorBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteActorBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphUnmuteActorBadRequestError$Outbound;
}
