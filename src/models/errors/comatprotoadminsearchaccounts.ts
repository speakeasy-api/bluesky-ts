/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminSearchAccountsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminSearchAccountsAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminSearchAccountsAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminSearchAccountsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminSearchAccountsAuthMissingError";
  }
}

export const ComAtprotoAdminSearchAccountsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminSearchAccountsError = ClosedEnum<
  typeof ComAtprotoAdminSearchAccountsError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminSearchAccountsBadRequestErrorData = {
  error: ComAtprotoAdminSearchAccountsError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminSearchAccountsBadRequestError extends BlueskyError {
  error: ComAtprotoAdminSearchAccountsError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminSearchAccountsBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminSearchAccountsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminSearchAccountsBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminSearchAccountsAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminSearchAccountsAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminSearchAccountsAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminSearchAccountsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminSearchAccountsAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminSearchAccountsAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminSearchAccountsAuthMissingError
  > = z.instanceof(ComAtprotoAdminSearchAccountsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminSearchAccountsAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminSearchAccountsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminSearchAccountsAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminSearchAccountsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminSearchAccountsAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminSearchAccountsAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminSearchAccountsAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminSearchAccountsError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminSearchAccountsError
> = z.nativeEnum(ComAtprotoAdminSearchAccountsError);

/** @internal */
export const ComAtprotoAdminSearchAccountsError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminSearchAccountsError
> = ComAtprotoAdminSearchAccountsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminSearchAccountsError$ {
  /** @deprecated use `ComAtprotoAdminSearchAccountsError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminSearchAccountsError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminSearchAccountsError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminSearchAccountsError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminSearchAccountsBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminSearchAccountsBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminSearchAccountsError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminSearchAccountsBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminSearchAccountsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminSearchAccountsBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminSearchAccountsBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminSearchAccountsBadRequestError
  > = z.instanceof(ComAtprotoAdminSearchAccountsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminSearchAccountsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminSearchAccountsBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminSearchAccountsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminSearchAccountsBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminSearchAccountsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminSearchAccountsBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminSearchAccountsBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminSearchAccountsBadRequestError$Outbound;
}
