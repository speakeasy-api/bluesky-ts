/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminGetAccountInfosAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminGetAccountInfosAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetAccountInfosAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminGetAccountInfosAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetAccountInfosAuthMissingError";
  }
}

export const ComAtprotoAdminGetAccountInfosError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminGetAccountInfosError = ClosedEnum<
  typeof ComAtprotoAdminGetAccountInfosError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminGetAccountInfosBadRequestErrorData = {
  error: ComAtprotoAdminGetAccountInfosError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminGetAccountInfosBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminGetAccountInfosError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetAccountInfosBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminGetAccountInfosBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetAccountInfosBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminGetAccountInfosAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfosAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetAccountInfosAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetAccountInfosAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetAccountInfosAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfosAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetAccountInfosAuthMissingError
  > = z.instanceof(ComAtprotoAdminGetAccountInfosAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetAccountInfosAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminGetAccountInfosAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetAccountInfosAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfosAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetAccountInfosAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfosAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminGetAccountInfosAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminGetAccountInfosError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminGetAccountInfosError
> = z.nativeEnum(ComAtprotoAdminGetAccountInfosError);

/** @internal */
export const ComAtprotoAdminGetAccountInfosError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminGetAccountInfosError> =
    ComAtprotoAdminGetAccountInfosError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetAccountInfosError$ {
  /** @deprecated use `ComAtprotoAdminGetAccountInfosError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetAccountInfosError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfosError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetAccountInfosError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminGetAccountInfosBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfosBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminGetAccountInfosError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetAccountInfosBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetAccountInfosBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetAccountInfosBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetAccountInfosBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetAccountInfosBadRequestError
  > = z.instanceof(ComAtprotoAdminGetAccountInfosBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminGetAccountInfosError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetAccountInfosBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminGetAccountInfosBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetAccountInfosBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfosBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetAccountInfosBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetAccountInfosBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetAccountInfosBadRequestError$Outbound;
}
