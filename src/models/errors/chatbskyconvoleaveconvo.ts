/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyConvoLeaveConvoResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyConvoLeaveConvoResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyConvoLeaveConvoResponseBodyErrorData;

  constructor(err: UnauthorizedChatBskyConvoLeaveConvoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedChatBskyConvoLeaveConvoResponseBodyError";
  }
}

export const ChatBskyConvoLeaveConvoError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoLeaveConvoError = ClosedEnum<
  typeof ChatBskyConvoLeaveConvoError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyConvoLeaveConvoResponseBodyErrorData = {
  error: ChatBskyConvoLeaveConvoError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestChatBskyConvoLeaveConvoResponseBodyError extends Error {
  error: ChatBskyConvoLeaveConvoError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyConvoLeaveConvoResponseBodyErrorData;

  constructor(err: BadRequestChatBskyConvoLeaveConvoResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestChatBskyConvoLeaveConvoResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoLeaveConvoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyConvoLeaveConvoResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyConvoLeaveConvoResponseBodyError
  > = z.instanceof(UnauthorizedChatBskyConvoLeaveConvoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyConvoLeaveConvoResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyConvoLeaveConvoError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoLeaveConvoError
> = z.nativeEnum(ChatBskyConvoLeaveConvoError);

/** @internal */
export const ChatBskyConvoLeaveConvoError$outboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoLeaveConvoError
> = ChatBskyConvoLeaveConvoError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoLeaveConvoError$ {
  /** @deprecated use `ChatBskyConvoLeaveConvoError$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoLeaveConvoError$inboundSchema;
  /** @deprecated use `ChatBskyConvoLeaveConvoError$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoLeaveConvoError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyConvoLeaveConvoResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoLeaveConvoResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoLeaveConvoError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyConvoLeaveConvoResponseBodyError(v);
    });

/** @internal */
export type BadRequestChatBskyConvoLeaveConvoResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestChatBskyConvoLeaveConvoResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoLeaveConvoResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyConvoLeaveConvoResponseBodyError
  > = z.instanceof(BadRequestChatBskyConvoLeaveConvoResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoLeaveConvoError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyConvoLeaveConvoResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyConvoLeaveConvoResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyConvoLeaveConvoResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoLeaveConvoResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyConvoLeaveConvoResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoLeaveConvoResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyConvoLeaveConvoResponseBodyError$Outbound;
}
