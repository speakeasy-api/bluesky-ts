/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerReserveSigningKeyAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerReserveSigningKeyAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerReserveSigningKeyAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerReserveSigningKeyAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerReserveSigningKeyAuthMissingError";
  }
}

export const ComAtprotoServerReserveSigningKeyError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerReserveSigningKeyError = ClosedEnum<
  typeof ComAtprotoServerReserveSigningKeyError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerReserveSigningKeyBadRequestErrorData = {
  error: ComAtprotoServerReserveSigningKeyError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerReserveSigningKeyBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerReserveSigningKeyError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerReserveSigningKeyBadRequestErrorData;

  constructor(
    err: ComAtprotoServerReserveSigningKeyBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerReserveSigningKeyBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerReserveSigningKeyAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerReserveSigningKeyAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerReserveSigningKeyAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerReserveSigningKeyAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerReserveSigningKeyAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerReserveSigningKeyAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerReserveSigningKeyAuthMissingError
  > = z.instanceof(ComAtprotoServerReserveSigningKeyAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerReserveSigningKeyAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerReserveSigningKeyAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerReserveSigningKeyAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerReserveSigningKeyAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerReserveSigningKeyAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerReserveSigningKeyAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerReserveSigningKeyAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerReserveSigningKeyError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerReserveSigningKeyError> = z.nativeEnum(
    ComAtprotoServerReserveSigningKeyError,
  );

/** @internal */
export const ComAtprotoServerReserveSigningKeyError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerReserveSigningKeyError> =
    ComAtprotoServerReserveSigningKeyError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerReserveSigningKeyError$ {
  /** @deprecated use `ComAtprotoServerReserveSigningKeyError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerReserveSigningKeyError$inboundSchema;
  /** @deprecated use `ComAtprotoServerReserveSigningKeyError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerReserveSigningKeyError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerReserveSigningKeyBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerReserveSigningKeyBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerReserveSigningKeyError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerReserveSigningKeyBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerReserveSigningKeyBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerReserveSigningKeyBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerReserveSigningKeyBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerReserveSigningKeyBadRequestError
  > = z.instanceof(ComAtprotoServerReserveSigningKeyBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerReserveSigningKeyError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerReserveSigningKeyBadRequestError$ {
  /** @deprecated use `ComAtprotoServerReserveSigningKeyBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerReserveSigningKeyBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerReserveSigningKeyBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerReserveSigningKeyBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerReserveSigningKeyBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerReserveSigningKeyBadRequestError$Outbound;
}
