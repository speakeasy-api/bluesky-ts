/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyErrorData;

  constructor(
    err: UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError";
  }
}

export const ChatBskyModerationUpdateActorAccessError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyModerationUpdateActorAccessError = ClosedEnum<
  typeof ChatBskyModerationUpdateActorAccessError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyModerationUpdateActorAccessResponseBodyErrorData =
  {
    error: ChatBskyModerationUpdateActorAccessError;
    message: string;
  };

/**
 * Bad Request
 */
export class BadRequestChatBskyModerationUpdateActorAccessResponseBodyError
  extends Error
{
  error: ChatBskyModerationUpdateActorAccessError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyModerationUpdateActorAccessResponseBodyErrorData;

  constructor(
    err: BadRequestChatBskyModerationUpdateActorAccessResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "BadRequestChatBskyModerationUpdateActorAccessResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError
  > = z.instanceof(
    UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyModerationUpdateActorAccessResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyModerationUpdateActorAccessError$inboundSchema:
  z.ZodNativeEnum<typeof ChatBskyModerationUpdateActorAccessError> = z
    .nativeEnum(ChatBskyModerationUpdateActorAccessError);

/** @internal */
export const ChatBskyModerationUpdateActorAccessError$outboundSchema:
  z.ZodNativeEnum<typeof ChatBskyModerationUpdateActorAccessError> =
    ChatBskyModerationUpdateActorAccessError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationUpdateActorAccessError$ {
  /** @deprecated use `ChatBskyModerationUpdateActorAccessError$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationUpdateActorAccessError$inboundSchema;
  /** @deprecated use `ChatBskyModerationUpdateActorAccessError$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationUpdateActorAccessError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyModerationUpdateActorAccessResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyModerationUpdateActorAccessError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyModerationUpdateActorAccessResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyModerationUpdateActorAccessResponseBodyError
  > = z.instanceof(
    BadRequestChatBskyModerationUpdateActorAccessResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyModerationUpdateActorAccessError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyModerationUpdateActorAccessResponseBodyError$Outbound;
}
