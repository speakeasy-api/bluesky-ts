/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedToolsOzoneSetAddValuesResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedToolsOzoneSetAddValuesResponseBodyError extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedToolsOzoneSetAddValuesResponseBodyErrorData;

  constructor(err: UnauthorizedToolsOzoneSetAddValuesResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedToolsOzoneSetAddValuesResponseBodyError";
  }
}

export const ToolsOzoneSetAddValuesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneSetAddValuesError = ClosedEnum<
  typeof ToolsOzoneSetAddValuesError
>;

/**
 * Bad Request
 */
export type BadRequestToolsOzoneSetAddValuesResponseBodyErrorData = {
  error: ToolsOzoneSetAddValuesError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestToolsOzoneSetAddValuesResponseBodyError extends Error {
  error: ToolsOzoneSetAddValuesError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestToolsOzoneSetAddValuesResponseBodyErrorData;

  constructor(err: BadRequestToolsOzoneSetAddValuesResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestToolsOzoneSetAddValuesResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedToolsOzoneSetAddValuesResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneSetAddValuesResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedToolsOzoneSetAddValuesResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedToolsOzoneSetAddValuesResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedToolsOzoneSetAddValuesResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneSetAddValuesResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedToolsOzoneSetAddValuesResponseBodyError
  > = z.instanceof(UnauthorizedToolsOzoneSetAddValuesResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedToolsOzoneSetAddValuesResponseBodyError$ {
  /** @deprecated use `UnauthorizedToolsOzoneSetAddValuesResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedToolsOzoneSetAddValuesResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneSetAddValuesResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedToolsOzoneSetAddValuesResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneSetAddValuesResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedToolsOzoneSetAddValuesResponseBodyError$Outbound;
}

/** @internal */
export const ToolsOzoneSetAddValuesError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSetAddValuesError
> = z.nativeEnum(ToolsOzoneSetAddValuesError);

/** @internal */
export const ToolsOzoneSetAddValuesError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSetAddValuesError
> = ToolsOzoneSetAddValuesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetAddValuesError$ {
  /** @deprecated use `ToolsOzoneSetAddValuesError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetAddValuesError$inboundSchema;
  /** @deprecated use `ToolsOzoneSetAddValuesError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetAddValuesError$outboundSchema;
}

/** @internal */
export const BadRequestToolsOzoneSetAddValuesResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestToolsOzoneSetAddValuesResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneSetAddValuesError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestToolsOzoneSetAddValuesResponseBodyError(v);
    });

/** @internal */
export type BadRequestToolsOzoneSetAddValuesResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestToolsOzoneSetAddValuesResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestToolsOzoneSetAddValuesResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestToolsOzoneSetAddValuesResponseBodyError
  > = z.instanceof(BadRequestToolsOzoneSetAddValuesResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneSetAddValuesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestToolsOzoneSetAddValuesResponseBodyError$ {
  /** @deprecated use `BadRequestToolsOzoneSetAddValuesResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestToolsOzoneSetAddValuesResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestToolsOzoneSetAddValuesResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestToolsOzoneSetAddValuesResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestToolsOzoneSetAddValuesResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestToolsOzoneSetAddValuesResponseBodyError$Outbound;
}
