/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminUpdateAccountHandleAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminUpdateAccountHandleAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateAccountHandleAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminUpdateAccountHandleAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateAccountHandleAuthMissingError";
  }
}

export const ComAtprotoAdminUpdateAccountHandleError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminUpdateAccountHandleError = ClosedEnum<
  typeof ComAtprotoAdminUpdateAccountHandleError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminUpdateAccountHandleBadRequestErrorData = {
  error: ComAtprotoAdminUpdateAccountHandleError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminUpdateAccountHandleBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminUpdateAccountHandleError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminUpdateAccountHandleBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminUpdateAccountHandleBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminUpdateAccountHandleBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminUpdateAccountHandleAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountHandleAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateAccountHandleAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateAccountHandleAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateAccountHandleAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountHandleAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateAccountHandleAuthMissingError
  > = z.instanceof(ComAtprotoAdminUpdateAccountHandleAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountHandleAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountHandleAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountHandleAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateAccountHandleAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminUpdateAccountHandleError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateAccountHandleError> = z
    .nativeEnum(ComAtprotoAdminUpdateAccountHandleError);

/** @internal */
export const ComAtprotoAdminUpdateAccountHandleError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminUpdateAccountHandleError> =
    ComAtprotoAdminUpdateAccountHandleError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountHandleError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountHandleError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountHandleError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminUpdateAccountHandleBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountHandleBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminUpdateAccountHandleError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminUpdateAccountHandleBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminUpdateAccountHandleBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminUpdateAccountHandleBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminUpdateAccountHandleBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminUpdateAccountHandleBadRequestError
  > = z.instanceof(ComAtprotoAdminUpdateAccountHandleBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminUpdateAccountHandleError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminUpdateAccountHandleBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminUpdateAccountHandleBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminUpdateAccountHandleBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminUpdateAccountHandleBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminUpdateAccountHandleBadRequestError$Outbound;
}
