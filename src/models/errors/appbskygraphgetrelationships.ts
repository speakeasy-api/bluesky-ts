/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphGetRelationshipsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphGetRelationshipsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetRelationshipsAuthMissingErrorData;

  constructor(
    err: AppBskyGraphGetRelationshipsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetRelationshipsAuthMissingError";
  }
}

export const AppBskyGraphGetRelationshipsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  ActorNotFound: "ActorNotFound",
} as const;
export type AppBskyGraphGetRelationshipsError = ClosedEnum<
  typeof AppBskyGraphGetRelationshipsError
>;

/**
 * Bad Request
 */
export type AppBskyGraphGetRelationshipsBadRequestErrorData = {
  error: AppBskyGraphGetRelationshipsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphGetRelationshipsBadRequestError extends BlueskyError {
  error: AppBskyGraphGetRelationshipsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetRelationshipsBadRequestErrorData;

  constructor(
    err: AppBskyGraphGetRelationshipsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetRelationshipsBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphGetRelationshipsAuthMissingError$inboundSchema:
  z.ZodType<
    AppBskyGraphGetRelationshipsAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyGraphGetRelationshipsAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyGraphGetRelationshipsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphGetRelationshipsAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyGraphGetRelationshipsAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyGraphGetRelationshipsAuthMissingError
  > = z.instanceof(AppBskyGraphGetRelationshipsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetRelationshipsAuthMissingError$ {
  /** @deprecated use `AppBskyGraphGetRelationshipsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetRelationshipsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetRelationshipsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetRelationshipsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphGetRelationshipsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetRelationshipsError
> = z.nativeEnum(AppBskyGraphGetRelationshipsError);

/** @internal */
export const AppBskyGraphGetRelationshipsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetRelationshipsError
> = AppBskyGraphGetRelationshipsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetRelationshipsError$ {
  /** @deprecated use `AppBskyGraphGetRelationshipsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetRelationshipsError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetRelationshipsError$outboundSchema;
}

/** @internal */
export const AppBskyGraphGetRelationshipsBadRequestError$inboundSchema:
  z.ZodType<
    AppBskyGraphGetRelationshipsBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyGraphGetRelationshipsError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyGraphGetRelationshipsBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyGraphGetRelationshipsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphGetRelationshipsBadRequestError$outboundSchema:
  z.ZodType<
    AppBskyGraphGetRelationshipsBadRequestError$Outbound,
    z.ZodTypeDef,
    AppBskyGraphGetRelationshipsBadRequestError
  > = z.instanceof(AppBskyGraphGetRelationshipsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyGraphGetRelationshipsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetRelationshipsBadRequestError$ {
  /** @deprecated use `AppBskyGraphGetRelationshipsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetRelationshipsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetRelationshipsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetRelationshipsBadRequestError$Outbound;
}
