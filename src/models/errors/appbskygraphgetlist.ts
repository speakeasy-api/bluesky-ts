/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphGetListAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphGetListAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetListAuthMissingErrorData;

  constructor(
    err: AppBskyGraphGetListAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetListAuthMissingError";
  }
}

export const AppBskyGraphGetListError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphGetListError = ClosedEnum<
  typeof AppBskyGraphGetListError
>;

/**
 * Bad Request
 */
export type AppBskyGraphGetListBadRequestErrorData = {
  error: AppBskyGraphGetListError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphGetListBadRequestError extends BlueskyError {
  error: AppBskyGraphGetListError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphGetListBadRequestErrorData;

  constructor(
    err: AppBskyGraphGetListBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphGetListBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphGetListAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphGetListAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetListAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetListAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphGetListAuthMissingError$outboundSchema: z.ZodType<
  AppBskyGraphGetListAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetListAuthMissingError
> = z.instanceof(AppBskyGraphGetListAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetListAuthMissingError$ {
  /** @deprecated use `AppBskyGraphGetListAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetListAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetListAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetListAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetListAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetListAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphGetListError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetListError
> = z.nativeEnum(AppBskyGraphGetListError);

/** @internal */
export const AppBskyGraphGetListError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphGetListError
> = AppBskyGraphGetListError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetListError$ {
  /** @deprecated use `AppBskyGraphGetListError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetListError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetListError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphGetListError$outboundSchema;
}

/** @internal */
export const AppBskyGraphGetListBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphGetListBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphGetListError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphGetListBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphGetListBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphGetListBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphGetListBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetListBadRequestError
> = z.instanceof(AppBskyGraphGetListBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphGetListError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetListBadRequestError$ {
  /** @deprecated use `AppBskyGraphGetListBadRequestError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphGetListBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphGetListBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetListBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphGetListBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphGetListBadRequestError$Outbound;
}
