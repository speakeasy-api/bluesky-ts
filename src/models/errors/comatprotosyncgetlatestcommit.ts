/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncGetLatestCommitAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncGetLatestCommitAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetLatestCommitAuthMissingErrorData;

  constructor(
    err: ComAtprotoSyncGetLatestCommitAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncGetLatestCommitAuthMissingError";
  }
}

export const ComAtprotoSyncGetLatestCommitError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RepoNotFound: "RepoNotFound",
  RepoTakendown: "RepoTakendown",
  RepoSuspended: "RepoSuspended",
  RepoDeactivated: "RepoDeactivated",
} as const;
export type ComAtprotoSyncGetLatestCommitError = ClosedEnum<
  typeof ComAtprotoSyncGetLatestCommitError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncGetLatestCommitBadRequestErrorData = {
  error: ComAtprotoSyncGetLatestCommitError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncGetLatestCommitBadRequestError extends BlueskyError {
  error: ComAtprotoSyncGetLatestCommitError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetLatestCommitBadRequestErrorData;

  constructor(
    err: ComAtprotoSyncGetLatestCommitBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncGetLatestCommitBadRequestError";
  }
}

/** @internal */
export const ComAtprotoSyncGetLatestCommitAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoSyncGetLatestCommitAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncGetLatestCommitAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoSyncGetLatestCommitAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetLatestCommitAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetLatestCommitAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetLatestCommitAuthMissingError
  > = z.instanceof(ComAtprotoSyncGetLatestCommitAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetLatestCommitAuthMissingError$ {
  /** @deprecated use `ComAtprotoSyncGetLatestCommitAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetLatestCommitAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetLatestCommitAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetLatestCommitAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetLatestCommitAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetLatestCommitAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoSyncGetLatestCommitError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetLatestCommitError
> = z.nativeEnum(ComAtprotoSyncGetLatestCommitError);

/** @internal */
export const ComAtprotoSyncGetLatestCommitError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetLatestCommitError
> = ComAtprotoSyncGetLatestCommitError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetLatestCommitError$ {
  /** @deprecated use `ComAtprotoSyncGetLatestCommitError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetLatestCommitError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetLatestCommitError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetLatestCommitError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncGetLatestCommitBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoSyncGetLatestCommitBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoSyncGetLatestCommitError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncGetLatestCommitBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoSyncGetLatestCommitBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetLatestCommitBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetLatestCommitBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetLatestCommitBadRequestError
  > = z.instanceof(ComAtprotoSyncGetLatestCommitBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoSyncGetLatestCommitError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetLatestCommitBadRequestError$ {
  /** @deprecated use `ComAtprotoSyncGetLatestCommitBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetLatestCommitBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetLatestCommitBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetLatestCommitBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetLatestCommitBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetLatestCommitBadRequestError$Outbound;
}
