/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoIdentityUpdateHandleIdentitiesResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoIdentityUpdateHandleIdentitiesResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoIdentityUpdateHandleIdentitiesResponseBodyData;

  constructor(err: ComAtprotoIdentityUpdateHandleIdentitiesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoIdentityUpdateHandleIdentitiesResponseBody";
  }
}

export const ComAtprotoIdentityUpdateHandleError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoIdentityUpdateHandleError = ClosedEnum<
  typeof ComAtprotoIdentityUpdateHandleError
>;

/**
 * Bad Request
 */
export type ComAtprotoIdentityUpdateHandleResponseBodyData = {
  error: ComAtprotoIdentityUpdateHandleError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoIdentityUpdateHandleResponseBody extends Error {
  error: ComAtprotoIdentityUpdateHandleError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoIdentityUpdateHandleResponseBodyData;

  constructor(err: ComAtprotoIdentityUpdateHandleResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoIdentityUpdateHandleResponseBody";
  }
}

/** @internal */
export const ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoIdentityUpdateHandleIdentitiesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoIdentityUpdateHandleIdentitiesResponseBody(v);
    });

/** @internal */
export type ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentityUpdateHandleIdentitiesResponseBody
  > = z.instanceof(ComAtprotoIdentityUpdateHandleIdentitiesResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$ {
  /** @deprecated use `ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoIdentityUpdateHandleIdentitiesResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoIdentityUpdateHandleError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoIdentityUpdateHandleError
> = z.nativeEnum(ComAtprotoIdentityUpdateHandleError);

/** @internal */
export const ComAtprotoIdentityUpdateHandleError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentityUpdateHandleError> =
    ComAtprotoIdentityUpdateHandleError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityUpdateHandleError$ {
  /** @deprecated use `ComAtprotoIdentityUpdateHandleError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityUpdateHandleError$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityUpdateHandleError$outboundSchema;
}

/** @internal */
export const ComAtprotoIdentityUpdateHandleResponseBody$inboundSchema:
  z.ZodType<ComAtprotoIdentityUpdateHandleResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: ComAtprotoIdentityUpdateHandleError$inboundSchema,
      message: z.string(),
    })
      .transform((v) => {
        return new ComAtprotoIdentityUpdateHandleResponseBody(v);
      });

/** @internal */
export type ComAtprotoIdentityUpdateHandleResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoIdentityUpdateHandleResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentityUpdateHandleResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentityUpdateHandleResponseBody
  > = z.instanceof(ComAtprotoIdentityUpdateHandleResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoIdentityUpdateHandleError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityUpdateHandleResponseBody$ {
  /** @deprecated use `ComAtprotoIdentityUpdateHandleResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityUpdateHandleResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityUpdateHandleResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoIdentityUpdateHandleResponseBody$Outbound;
}
