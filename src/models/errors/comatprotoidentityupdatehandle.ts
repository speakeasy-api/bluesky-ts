/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError";
  }
}

export const ComAtprotoIdentityUpdateHandleError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoIdentityUpdateHandleError = ClosedEnum<
  typeof ComAtprotoIdentityUpdateHandleError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoIdentityUpdateHandleResponseBodyErrorData = {
  error: ComAtprotoIdentityUpdateHandleError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoIdentityUpdateHandleResponseBodyError
  extends Error
{
  error: ComAtprotoIdentityUpdateHandleError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoIdentityUpdateHandleResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoIdentityUpdateHandleResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoIdentityUpdateHandleResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoIdentityUpdateHandleResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoIdentityUpdateHandleError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoIdentityUpdateHandleError
> = z.nativeEnum(ComAtprotoIdentityUpdateHandleError);

/** @internal */
export const ComAtprotoIdentityUpdateHandleError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentityUpdateHandleError> =
    ComAtprotoIdentityUpdateHandleError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityUpdateHandleError$ {
  /** @deprecated use `ComAtprotoIdentityUpdateHandleError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityUpdateHandleError$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityUpdateHandleError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoIdentityUpdateHandleResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoIdentityUpdateHandleError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoIdentityUpdateHandleResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoIdentityUpdateHandleResponseBodyError
  > = z.instanceof(BadRequestComAtprotoIdentityUpdateHandleResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoIdentityUpdateHandleError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoIdentityUpdateHandleResponseBodyError$Outbound;
}
