/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyNotificationUpdateSeenAppBskyNotificationResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyNotificationUpdateSeenAppBskyNotificationResponseBodyData;

  constructor(
    err: AppBskyNotificationUpdateSeenAppBskyNotificationResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody";
  }
}

export const AppBskyNotificationUpdateSeenError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyNotificationUpdateSeenError = ClosedEnum<
  typeof AppBskyNotificationUpdateSeenError
>;

/**
 * Bad Request
 */
export type AppBskyNotificationUpdateSeenResponseBodyData = {
  error: AppBskyNotificationUpdateSeenError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyNotificationUpdateSeenResponseBody extends Error {
  error: AppBskyNotificationUpdateSeenError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyNotificationUpdateSeenResponseBodyData;

  constructor(err: AppBskyNotificationUpdateSeenResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyNotificationUpdateSeenResponseBody";
  }
}

/** @internal */
export const AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$inboundSchema:
  z.ZodType<
    AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody(
        v,
      );
    });

/** @internal */
export type AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$outboundSchema:
  z.ZodType<
    AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody
  > = z.instanceof(AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$outboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$Outbound` instead. */
  export type Outbound =
    AppBskyNotificationUpdateSeenAppBskyNotificationResponseBody$Outbound;
}

/** @internal */
export const AppBskyNotificationUpdateSeenError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyNotificationUpdateSeenError
> = z.nativeEnum(AppBskyNotificationUpdateSeenError);

/** @internal */
export const AppBskyNotificationUpdateSeenError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyNotificationUpdateSeenError
> = AppBskyNotificationUpdateSeenError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenError$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenError$inboundSchema` instead. */
  export const inboundSchema = AppBskyNotificationUpdateSeenError$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenError$outboundSchema;
}

/** @internal */
export const AppBskyNotificationUpdateSeenResponseBody$inboundSchema: z.ZodType<
  AppBskyNotificationUpdateSeenResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyNotificationUpdateSeenError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyNotificationUpdateSeenResponseBody(v);
  });

/** @internal */
export type AppBskyNotificationUpdateSeenResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyNotificationUpdateSeenResponseBody$outboundSchema:
  z.ZodType<
    AppBskyNotificationUpdateSeenResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationUpdateSeenResponseBody
  > = z.instanceof(AppBskyNotificationUpdateSeenResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyNotificationUpdateSeenError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenResponseBody$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationUpdateSeenResponseBody$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenResponseBody$outboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenResponseBody$Outbound` instead. */
  export type Outbound = AppBskyNotificationUpdateSeenResponseBody$Outbound;
}
