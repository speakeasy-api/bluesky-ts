/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedAppBskyNotificationUpdateSeenResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedAppBskyNotificationUpdateSeenResponseBodyErrorData;

  constructor(
    err: UnauthorizedAppBskyNotificationUpdateSeenResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError";
  }
}

export const AppBskyNotificationUpdateSeenError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyNotificationUpdateSeenError = ClosedEnum<
  typeof AppBskyNotificationUpdateSeenError
>;

/**
 * Bad Request
 */
export type BadRequestAppBskyNotificationUpdateSeenResponseBodyErrorData = {
  error: AppBskyNotificationUpdateSeenError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestAppBskyNotificationUpdateSeenResponseBodyError
  extends Error
{
  error: AppBskyNotificationUpdateSeenError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestAppBskyNotificationUpdateSeenResponseBodyErrorData;

  constructor(
    err: BadRequestAppBskyNotificationUpdateSeenResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestAppBskyNotificationUpdateSeenResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError
  > = z.instanceof(UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$ {
  /** @deprecated use `UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedAppBskyNotificationUpdateSeenResponseBodyError$Outbound;
}

/** @internal */
export const AppBskyNotificationUpdateSeenError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyNotificationUpdateSeenError
> = z.nativeEnum(AppBskyNotificationUpdateSeenError);

/** @internal */
export const AppBskyNotificationUpdateSeenError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyNotificationUpdateSeenError
> = AppBskyNotificationUpdateSeenError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenError$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenError$inboundSchema` instead. */
  export const inboundSchema = AppBskyNotificationUpdateSeenError$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenError$outboundSchema;
}

/** @internal */
export const BadRequestAppBskyNotificationUpdateSeenResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestAppBskyNotificationUpdateSeenResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyNotificationUpdateSeenError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestAppBskyNotificationUpdateSeenResponseBodyError(v);
    });

/** @internal */
export type BadRequestAppBskyNotificationUpdateSeenResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestAppBskyNotificationUpdateSeenResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestAppBskyNotificationUpdateSeenResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestAppBskyNotificationUpdateSeenResponseBodyError
  > = z.instanceof(BadRequestAppBskyNotificationUpdateSeenResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyNotificationUpdateSeenError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestAppBskyNotificationUpdateSeenResponseBodyError$ {
  /** @deprecated use `BadRequestAppBskyNotificationUpdateSeenResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestAppBskyNotificationUpdateSeenResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestAppBskyNotificationUpdateSeenResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestAppBskyNotificationUpdateSeenResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestAppBskyNotificationUpdateSeenResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestAppBskyNotificationUpdateSeenResponseBodyError$Outbound;
}
