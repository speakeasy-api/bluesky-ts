/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyNotificationUpdateSeenAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyNotificationUpdateSeenAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyNotificationUpdateSeenAuthMissingErrorData;

  constructor(
    err: AppBskyNotificationUpdateSeenAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyNotificationUpdateSeenAuthMissingError";
  }
}

export const AppBskyNotificationUpdateSeenError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyNotificationUpdateSeenError = ClosedEnum<
  typeof AppBskyNotificationUpdateSeenError
>;

/**
 * Bad Request
 */
export type AppBskyNotificationUpdateSeenBadRequestErrorData = {
  error: AppBskyNotificationUpdateSeenError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyNotificationUpdateSeenBadRequestError extends BlueskyError {
  error: AppBskyNotificationUpdateSeenError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyNotificationUpdateSeenBadRequestErrorData;

  constructor(
    err: AppBskyNotificationUpdateSeenBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyNotificationUpdateSeenBadRequestError";
  }
}

/** @internal */
export const AppBskyNotificationUpdateSeenAuthMissingError$inboundSchema:
  z.ZodType<
    AppBskyNotificationUpdateSeenAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyNotificationUpdateSeenAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyNotificationUpdateSeenAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyNotificationUpdateSeenAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyNotificationUpdateSeenAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationUpdateSeenAuthMissingError
  > = z.instanceof(AppBskyNotificationUpdateSeenAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenAuthMissingError$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationUpdateSeenAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyNotificationUpdateSeenAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyNotificationUpdateSeenError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyNotificationUpdateSeenError
> = z.nativeEnum(AppBskyNotificationUpdateSeenError);

/** @internal */
export const AppBskyNotificationUpdateSeenError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyNotificationUpdateSeenError
> = AppBskyNotificationUpdateSeenError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenError$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenError$inboundSchema` instead. */
  export const inboundSchema = AppBskyNotificationUpdateSeenError$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenError$outboundSchema;
}

/** @internal */
export const AppBskyNotificationUpdateSeenBadRequestError$inboundSchema:
  z.ZodType<
    AppBskyNotificationUpdateSeenBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyNotificationUpdateSeenError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyNotificationUpdateSeenBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyNotificationUpdateSeenBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyNotificationUpdateSeenBadRequestError$outboundSchema:
  z.ZodType<
    AppBskyNotificationUpdateSeenBadRequestError$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationUpdateSeenBadRequestError
  > = z.instanceof(AppBskyNotificationUpdateSeenBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyNotificationUpdateSeenError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenBadRequestError$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationUpdateSeenBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyNotificationUpdateSeenBadRequestError$Outbound;
}
