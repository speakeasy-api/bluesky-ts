/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyGraphUnmuteThreadAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyGraphUnmuteThreadAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphUnmuteThreadAuthMissingErrorData;

  constructor(
    err: AppBskyGraphUnmuteThreadAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphUnmuteThreadAuthMissingError";
  }
}

export const AppBskyGraphUnmuteThreadError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyGraphUnmuteThreadError = ClosedEnum<
  typeof AppBskyGraphUnmuteThreadError
>;

/**
 * Bad Request
 */
export type AppBskyGraphUnmuteThreadBadRequestErrorData = {
  error: AppBskyGraphUnmuteThreadError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyGraphUnmuteThreadBadRequestError extends BlueskyError {
  error: AppBskyGraphUnmuteThreadError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyGraphUnmuteThreadBadRequestErrorData;

  constructor(
    err: AppBskyGraphUnmuteThreadBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyGraphUnmuteThreadBadRequestError";
  }
}

/** @internal */
export const AppBskyGraphUnmuteThreadAuthMissingError$inboundSchema: z.ZodType<
  AppBskyGraphUnmuteThreadAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphUnmuteThreadAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphUnmuteThreadAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyGraphUnmuteThreadAuthMissingError$outboundSchema: z.ZodType<
  AppBskyGraphUnmuteThreadAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphUnmuteThreadAuthMissingError
> = z.instanceof(AppBskyGraphUnmuteThreadAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphUnmuteThreadAuthMissingError$ {
  /** @deprecated use `AppBskyGraphUnmuteThreadAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphUnmuteThreadAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteThreadAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphUnmuteThreadAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteThreadAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyGraphUnmuteThreadAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyGraphUnmuteThreadError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphUnmuteThreadError
> = z.nativeEnum(AppBskyGraphUnmuteThreadError);

/** @internal */
export const AppBskyGraphUnmuteThreadError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyGraphUnmuteThreadError
> = AppBskyGraphUnmuteThreadError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphUnmuteThreadError$ {
  /** @deprecated use `AppBskyGraphUnmuteThreadError$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphUnmuteThreadError$inboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteThreadError$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphUnmuteThreadError$outboundSchema;
}

/** @internal */
export const AppBskyGraphUnmuteThreadBadRequestError$inboundSchema: z.ZodType<
  AppBskyGraphUnmuteThreadBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyGraphUnmuteThreadError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyGraphUnmuteThreadBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyGraphUnmuteThreadBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyGraphUnmuteThreadBadRequestError$outboundSchema: z.ZodType<
  AppBskyGraphUnmuteThreadBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyGraphUnmuteThreadBadRequestError
> = z.instanceof(AppBskyGraphUnmuteThreadBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyGraphUnmuteThreadError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphUnmuteThreadBadRequestError$ {
  /** @deprecated use `AppBskyGraphUnmuteThreadBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphUnmuteThreadBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteThreadBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphUnmuteThreadBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteThreadBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyGraphUnmuteThreadBadRequestError$Outbound;
}
