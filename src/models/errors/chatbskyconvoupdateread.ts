/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedChatBskyConvoUpdateReadResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedChatBskyConvoUpdateReadResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedChatBskyConvoUpdateReadResponseBodyErrorData;

  constructor(err: UnauthorizedChatBskyConvoUpdateReadResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedChatBskyConvoUpdateReadResponseBodyError";
  }
}

export const ChatBskyConvoUpdateReadError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ChatBskyConvoUpdateReadError = ClosedEnum<
  typeof ChatBskyConvoUpdateReadError
>;

/**
 * Bad Request
 */
export type BadRequestChatBskyConvoUpdateReadResponseBodyErrorData = {
  error: ChatBskyConvoUpdateReadError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestChatBskyConvoUpdateReadResponseBodyError extends Error {
  error: ChatBskyConvoUpdateReadError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestChatBskyConvoUpdateReadResponseBodyErrorData;

  constructor(err: BadRequestChatBskyConvoUpdateReadResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestChatBskyConvoUpdateReadResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedChatBskyConvoUpdateReadResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoUpdateReadResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedChatBskyConvoUpdateReadResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedChatBskyConvoUpdateReadResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedChatBskyConvoUpdateReadResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedChatBskyConvoUpdateReadResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedChatBskyConvoUpdateReadResponseBodyError
  > = z.instanceof(UnauthorizedChatBskyConvoUpdateReadResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedChatBskyConvoUpdateReadResponseBodyError$ {
  /** @deprecated use `UnauthorizedChatBskyConvoUpdateReadResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedChatBskyConvoUpdateReadResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoUpdateReadResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedChatBskyConvoUpdateReadResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedChatBskyConvoUpdateReadResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedChatBskyConvoUpdateReadResponseBodyError$Outbound;
}

/** @internal */
export const ChatBskyConvoUpdateReadError$inboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoUpdateReadError
> = z.nativeEnum(ChatBskyConvoUpdateReadError);

/** @internal */
export const ChatBskyConvoUpdateReadError$outboundSchema: z.ZodNativeEnum<
  typeof ChatBskyConvoUpdateReadError
> = ChatBskyConvoUpdateReadError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoUpdateReadError$ {
  /** @deprecated use `ChatBskyConvoUpdateReadError$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoUpdateReadError$inboundSchema;
  /** @deprecated use `ChatBskyConvoUpdateReadError$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoUpdateReadError$outboundSchema;
}

/** @internal */
export const BadRequestChatBskyConvoUpdateReadResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoUpdateReadResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ChatBskyConvoUpdateReadError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestChatBskyConvoUpdateReadResponseBodyError(v);
    });

/** @internal */
export type BadRequestChatBskyConvoUpdateReadResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestChatBskyConvoUpdateReadResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestChatBskyConvoUpdateReadResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestChatBskyConvoUpdateReadResponseBodyError
  > = z.instanceof(BadRequestChatBskyConvoUpdateReadResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ChatBskyConvoUpdateReadError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestChatBskyConvoUpdateReadResponseBodyError$ {
  /** @deprecated use `BadRequestChatBskyConvoUpdateReadResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestChatBskyConvoUpdateReadResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoUpdateReadResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestChatBskyConvoUpdateReadResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestChatBskyConvoUpdateReadResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestChatBskyConvoUpdateReadResponseBodyError$Outbound;
}
