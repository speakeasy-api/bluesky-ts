/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerDeactivateAccountResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerDeactivateAccountResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerDeactivateAccountResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError";
  }
}

export const ComAtprotoServerDeactivateAccountError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerDeactivateAccountError = ClosedEnum<
  typeof ComAtprotoServerDeactivateAccountError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerDeactivateAccountResponseBodyErrorData = {
  error: ComAtprotoServerDeactivateAccountError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerDeactivateAccountResponseBodyError
  extends Error
{
  error: ComAtprotoServerDeactivateAccountError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerDeactivateAccountResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerDeactivateAccountResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerDeactivateAccountResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError
  > = z.instanceof(
    UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerDeactivateAccountResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerDeactivateAccountError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerDeactivateAccountError> = z.nativeEnum(
    ComAtprotoServerDeactivateAccountError,
  );

/** @internal */
export const ComAtprotoServerDeactivateAccountError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerDeactivateAccountError> =
    ComAtprotoServerDeactivateAccountError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeactivateAccountError$ {
  /** @deprecated use `ComAtprotoServerDeactivateAccountError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeactivateAccountError$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeactivateAccountError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerDeactivateAccountResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerDeactivateAccountResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerDeactivateAccountError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerDeactivateAccountResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestComAtprotoServerDeactivateAccountResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerDeactivateAccountResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerDeactivateAccountResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerDeactivateAccountResponseBodyError
  > = z.instanceof(BadRequestComAtprotoServerDeactivateAccountResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerDeactivateAccountError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerDeactivateAccountResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerDeactivateAccountResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerDeactivateAccountResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerDeactivateAccountResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerDeactivateAccountResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerDeactivateAccountResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerDeactivateAccountResponseBodyError$Outbound;
}
