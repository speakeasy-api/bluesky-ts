/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerDeactivateAccountServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerDeactivateAccountServerResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerDeactivateAccountServerResponseBodyData;

  constructor(err: ComAtprotoServerDeactivateAccountServerResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerDeactivateAccountServerResponseBody";
  }
}

export const ComAtprotoServerDeactivateAccountError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerDeactivateAccountError = ClosedEnum<
  typeof ComAtprotoServerDeactivateAccountError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerDeactivateAccountResponseBodyData = {
  error: ComAtprotoServerDeactivateAccountError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerDeactivateAccountResponseBody extends Error {
  error: ComAtprotoServerDeactivateAccountError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerDeactivateAccountResponseBodyData;

  constructor(err: ComAtprotoServerDeactivateAccountResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerDeactivateAccountResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerDeactivateAccountServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerDeactivateAccountServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerDeactivateAccountServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerDeactivateAccountServerResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerDeactivateAccountServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerDeactivateAccountServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerDeactivateAccountServerResponseBody
  > = z.instanceof(ComAtprotoServerDeactivateAccountServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeactivateAccountServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerDeactivateAccountServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeactivateAccountServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeactivateAccountServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerDeactivateAccountServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerDeactivateAccountError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerDeactivateAccountError> = z.nativeEnum(
    ComAtprotoServerDeactivateAccountError,
  );

/** @internal */
export const ComAtprotoServerDeactivateAccountError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerDeactivateAccountError> =
    ComAtprotoServerDeactivateAccountError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeactivateAccountError$ {
  /** @deprecated use `ComAtprotoServerDeactivateAccountError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeactivateAccountError$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeactivateAccountError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerDeactivateAccountResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerDeactivateAccountResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerDeactivateAccountError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerDeactivateAccountResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerDeactivateAccountResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerDeactivateAccountResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerDeactivateAccountResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerDeactivateAccountResponseBody
  > = z.instanceof(ComAtprotoServerDeactivateAccountResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerDeactivateAccountError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeactivateAccountResponseBody$ {
  /** @deprecated use `ComAtprotoServerDeactivateAccountResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeactivateAccountResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeactivateAccountResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerDeactivateAccountResponseBody$Outbound;
}
