/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncListReposAtprotoSyncResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncListReposAtprotoSyncResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncListReposAtprotoSyncResponseBodyData;

  constructor(err: ComAtprotoSyncListReposAtprotoSyncResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncListReposAtprotoSyncResponseBody";
  }
}

export const ComAtprotoSyncListReposError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoSyncListReposError = ClosedEnum<
  typeof ComAtprotoSyncListReposError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncListReposResponseBodyData = {
  error: ComAtprotoSyncListReposError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncListReposResponseBody extends Error {
  error: ComAtprotoSyncListReposError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncListReposResponseBodyData;

  constructor(err: ComAtprotoSyncListReposResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncListReposResponseBody";
  }
}

/** @internal */
export const ComAtprotoSyncListReposAtprotoSyncResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoSyncListReposAtprotoSyncResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncListReposAtprotoSyncResponseBody(v);
    });

/** @internal */
export type ComAtprotoSyncListReposAtprotoSyncResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncListReposAtprotoSyncResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoSyncListReposAtprotoSyncResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncListReposAtprotoSyncResponseBody
  > = z.instanceof(ComAtprotoSyncListReposAtprotoSyncResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposAtprotoSyncResponseBody$ {
  /** @deprecated use `ComAtprotoSyncListReposAtprotoSyncResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncListReposAtprotoSyncResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposAtprotoSyncResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncListReposAtprotoSyncResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposAtprotoSyncResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoSyncListReposAtprotoSyncResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoSyncListReposError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncListReposError
> = z.nativeEnum(ComAtprotoSyncListReposError);

/** @internal */
export const ComAtprotoSyncListReposError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncListReposError
> = ComAtprotoSyncListReposError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposError$ {
  /** @deprecated use `ComAtprotoSyncListReposError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncListReposError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncListReposError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncListReposResponseBody$inboundSchema: z.ZodType<
  ComAtprotoSyncListReposResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoSyncListReposError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncListReposResponseBody(v);
  });

/** @internal */
export type ComAtprotoSyncListReposResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncListReposResponseBody$outboundSchema: z.ZodType<
  ComAtprotoSyncListReposResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncListReposResponseBody
> = z.instanceof(ComAtprotoSyncListReposResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoSyncListReposError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposResponseBody$ {
  /** @deprecated use `ComAtprotoSyncListReposResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncListReposResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncListReposResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncListReposResponseBody$Outbound;
}
