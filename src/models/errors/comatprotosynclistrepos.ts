/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncListReposAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncListReposAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncListReposAuthMissingErrorData;

  constructor(
    err: ComAtprotoSyncListReposAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncListReposAuthMissingError";
  }
}

export const ComAtprotoSyncListReposError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoSyncListReposError = ClosedEnum<
  typeof ComAtprotoSyncListReposError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncListReposBadRequestErrorData = {
  error: ComAtprotoSyncListReposError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncListReposBadRequestError extends BlueskyError {
  error: ComAtprotoSyncListReposError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncListReposBadRequestErrorData;

  constructor(
    err: ComAtprotoSyncListReposBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoSyncListReposBadRequestError";
  }
}

/** @internal */
export const ComAtprotoSyncListReposAuthMissingError$inboundSchema: z.ZodType<
  ComAtprotoSyncListReposAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncListReposAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ComAtprotoSyncListReposAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncListReposAuthMissingError$outboundSchema: z.ZodType<
  ComAtprotoSyncListReposAuthMissingError$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncListReposAuthMissingError
> = z.instanceof(ComAtprotoSyncListReposAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposAuthMissingError$ {
  /** @deprecated use `ComAtprotoSyncListReposAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncListReposAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncListReposAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncListReposAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoSyncListReposError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncListReposError
> = z.nativeEnum(ComAtprotoSyncListReposError);

/** @internal */
export const ComAtprotoSyncListReposError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncListReposError
> = ComAtprotoSyncListReposError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposError$ {
  /** @deprecated use `ComAtprotoSyncListReposError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncListReposError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncListReposError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncListReposBadRequestError$inboundSchema: z.ZodType<
  ComAtprotoSyncListReposBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoSyncListReposError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncListReposBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ComAtprotoSyncListReposBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncListReposBadRequestError$outboundSchema: z.ZodType<
  ComAtprotoSyncListReposBadRequestError$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncListReposBadRequestError
> = z.instanceof(ComAtprotoSyncListReposBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoSyncListReposError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposBadRequestError$ {
  /** @deprecated use `ComAtprotoSyncListReposBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncListReposBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncListReposBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoSyncListReposBadRequestError$Outbound;
}
