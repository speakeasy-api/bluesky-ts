/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminDisableInviteCodesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminDisableInviteCodesAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDisableInviteCodesAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminDisableInviteCodesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminDisableInviteCodesAuthMissingError";
  }
}

export const ComAtprotoAdminDisableInviteCodesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminDisableInviteCodesError = ClosedEnum<
  typeof ComAtprotoAdminDisableInviteCodesError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminDisableInviteCodesBadRequestErrorData = {
  error: ComAtprotoAdminDisableInviteCodesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminDisableInviteCodesBadRequestError
  extends BlueskyError
{
  error: ComAtprotoAdminDisableInviteCodesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminDisableInviteCodesBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminDisableInviteCodesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminDisableInviteCodesBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminDisableInviteCodesAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableInviteCodesAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminDisableInviteCodesAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminDisableInviteCodesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminDisableInviteCodesAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableInviteCodesAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminDisableInviteCodesAuthMissingError
  > = z.instanceof(ComAtprotoAdminDisableInviteCodesAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDisableInviteCodesAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDisableInviteCodesAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDisableInviteCodesAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminDisableInviteCodesAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminDisableInviteCodesError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminDisableInviteCodesError> = z.nativeEnum(
    ComAtprotoAdminDisableInviteCodesError,
  );

/** @internal */
export const ComAtprotoAdminDisableInviteCodesError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoAdminDisableInviteCodesError> =
    ComAtprotoAdminDisableInviteCodesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDisableInviteCodesError$ {
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDisableInviteCodesError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDisableInviteCodesError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminDisableInviteCodesBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableInviteCodesBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminDisableInviteCodesError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminDisableInviteCodesBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminDisableInviteCodesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminDisableInviteCodesBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminDisableInviteCodesBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminDisableInviteCodesBadRequestError
  > = z.instanceof(ComAtprotoAdminDisableInviteCodesBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminDisableInviteCodesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDisableInviteCodesBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDisableInviteCodesBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDisableInviteCodesBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoAdminDisableInviteCodesBadRequestError$Outbound;
}
