/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerRefreshSessionResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerRefreshSessionResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerRefreshSessionResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerRefreshSessionResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoServerRefreshSessionResponseBodyError";
  }
}

export const ComAtprotoServerRefreshSessionError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
} as const;
export type ComAtprotoServerRefreshSessionError = ClosedEnum<
  typeof ComAtprotoServerRefreshSessionError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerRefreshSessionResponseBodyErrorData = {
  error: ComAtprotoServerRefreshSessionError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerRefreshSessionResponseBodyError
  extends Error
{
  error: ComAtprotoServerRefreshSessionError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerRefreshSessionResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerRefreshSessionResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerRefreshSessionResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerRefreshSessionResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerRefreshSessionResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerRefreshSessionResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoServerRefreshSessionResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerRefreshSessionResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerRefreshSessionError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerRefreshSessionError
> = z.nativeEnum(ComAtprotoServerRefreshSessionError);

/** @internal */
export const ComAtprotoServerRefreshSessionError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRefreshSessionError> =
    ComAtprotoServerRefreshSessionError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionError$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerRefreshSessionResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerRefreshSessionResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRefreshSessionError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerRefreshSessionResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoServerRefreshSessionResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerRefreshSessionResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerRefreshSessionResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerRefreshSessionResponseBodyError
  > = z.instanceof(BadRequestComAtprotoServerRefreshSessionResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRefreshSessionError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerRefreshSessionResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerRefreshSessionResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerRefreshSessionResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerRefreshSessionResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerRefreshSessionResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerRefreshSessionResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerRefreshSessionResponseBodyError$Outbound;
}
