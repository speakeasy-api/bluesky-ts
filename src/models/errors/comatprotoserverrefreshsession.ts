/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerRefreshSessionAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerRefreshSessionAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRefreshSessionAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerRefreshSessionAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerRefreshSessionAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerRefreshSessionError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
} as const;
export type ComAtprotoServerRefreshSessionError = ClosedEnum<
  typeof ComAtprotoServerRefreshSessionError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerRefreshSessionResponseBodyData = {
  error: ComAtprotoServerRefreshSessionError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerRefreshSessionResponseBody extends Error {
  error: ComAtprotoServerRefreshSessionError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRefreshSessionResponseBodyData;

  constructor(err: ComAtprotoServerRefreshSessionResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerRefreshSessionResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerRefreshSessionAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRefreshSessionAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerRefreshSessionAtprotoServerResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerRefreshSessionAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRefreshSessionAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerRefreshSessionAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRefreshSessionAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerRefreshSessionError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerRefreshSessionError
> = z.nativeEnum(ComAtprotoServerRefreshSessionError);

/** @internal */
export const ComAtprotoServerRefreshSessionError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRefreshSessionError> =
    ComAtprotoServerRefreshSessionError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionError$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRefreshSessionResponseBody$inboundSchema:
  z.ZodType<ComAtprotoServerRefreshSessionResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: ComAtprotoServerRefreshSessionError$inboundSchema,
      message: z.string(),
    })
      .transform((v) => {
        return new ComAtprotoServerRefreshSessionResponseBody(v);
      });

/** @internal */
export type ComAtprotoServerRefreshSessionResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerRefreshSessionResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRefreshSessionResponseBody
  > = z.instanceof(ComAtprotoServerRefreshSessionResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRefreshSessionError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionResponseBody$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerRefreshSessionResponseBody$Outbound;
}
