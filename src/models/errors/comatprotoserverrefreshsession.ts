/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerRefreshSessionAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerRefreshSessionAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRefreshSessionAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerRefreshSessionAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerRefreshSessionAuthMissingError";
  }
}

export const ComAtprotoServerRefreshSessionError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
} as const;
export type ComAtprotoServerRefreshSessionError = ClosedEnum<
  typeof ComAtprotoServerRefreshSessionError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerRefreshSessionBadRequestErrorData = {
  error: ComAtprotoServerRefreshSessionError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerRefreshSessionBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerRefreshSessionError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRefreshSessionBadRequestErrorData;

  constructor(
    err: ComAtprotoServerRefreshSessionBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerRefreshSessionBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerRefreshSessionAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRefreshSessionAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerRefreshSessionAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerRefreshSessionAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRefreshSessionAuthMissingError
  > = z.instanceof(ComAtprotoServerRefreshSessionAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRefreshSessionAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerRefreshSessionError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerRefreshSessionError
> = z.nativeEnum(ComAtprotoServerRefreshSessionError);

/** @internal */
export const ComAtprotoServerRefreshSessionError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRefreshSessionError> =
    ComAtprotoServerRefreshSessionError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionError$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRefreshSessionBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRefreshSessionError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRefreshSessionBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerRefreshSessionBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerRefreshSessionBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRefreshSessionBadRequestError
  > = z.instanceof(ComAtprotoServerRefreshSessionBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRefreshSessionError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionBadRequestError$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoServerRefreshSessionBadRequestError$Outbound;
}
