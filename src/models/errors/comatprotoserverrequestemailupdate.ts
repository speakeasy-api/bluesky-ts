/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError";
  }
}

export const ComAtprotoServerRequestEmailUpdateError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerRequestEmailUpdateError = ClosedEnum<
  typeof ComAtprotoServerRequestEmailUpdateError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerRequestEmailUpdateResponseBodyErrorData =
  {
    error: ComAtprotoServerRequestEmailUpdateError;
    message: string;
  };

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError
  extends Error
{
  error: ComAtprotoServerRequestEmailUpdateError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerRequestEmailUpdateResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerRequestEmailUpdateResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError
  > = z.instanceof(
    UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerRequestEmailUpdateError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailUpdateError> = z
    .nativeEnum(ComAtprotoServerRequestEmailUpdateError);

/** @internal */
export const ComAtprotoServerRequestEmailUpdateError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailUpdateError> =
    ComAtprotoServerRequestEmailUpdateError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailUpdateError$ {
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailUpdateError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailUpdateError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRequestEmailUpdateError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError
  > = z.instanceof(
    BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRequestEmailUpdateError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerRequestEmailUpdateResponseBodyError$Outbound;
}
