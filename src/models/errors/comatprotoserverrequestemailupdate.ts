/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerRequestEmailUpdateAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerRequestEmailUpdateAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestEmailUpdateAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerRequestEmailUpdateAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerRequestEmailUpdateAuthMissingError";
  }
}

export const ComAtprotoServerRequestEmailUpdateError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerRequestEmailUpdateError = ClosedEnum<
  typeof ComAtprotoServerRequestEmailUpdateError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerRequestEmailUpdateBadRequestErrorData = {
  error: ComAtprotoServerRequestEmailUpdateError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerRequestEmailUpdateBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerRequestEmailUpdateError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestEmailUpdateBadRequestErrorData;

  constructor(
    err: ComAtprotoServerRequestEmailUpdateBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerRequestEmailUpdateBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerRequestEmailUpdateAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestEmailUpdateAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerRequestEmailUpdateAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerRequestEmailUpdateAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestEmailUpdateAuthMissingError
  > = z.instanceof(ComAtprotoServerRequestEmailUpdateAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailUpdateAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailUpdateAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailUpdateAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestEmailUpdateAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerRequestEmailUpdateError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailUpdateError> = z
    .nativeEnum(ComAtprotoServerRequestEmailUpdateError);

/** @internal */
export const ComAtprotoServerRequestEmailUpdateError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailUpdateError> =
    ComAtprotoServerRequestEmailUpdateError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailUpdateError$ {
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailUpdateError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailUpdateError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRequestEmailUpdateBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRequestEmailUpdateError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestEmailUpdateBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerRequestEmailUpdateBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerRequestEmailUpdateBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestEmailUpdateBadRequestError
  > = z.instanceof(ComAtprotoServerRequestEmailUpdateBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRequestEmailUpdateError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailUpdateBadRequestError$ {
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailUpdateBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailUpdateBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestEmailUpdateBadRequestError$Outbound;
}
