/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerRequestEmailUpdateServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerRequestEmailUpdateServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestEmailUpdateServerResponseBodyData;

  constructor(err: ComAtprotoServerRequestEmailUpdateServerResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerRequestEmailUpdateServerResponseBody";
  }
}

export const ComAtprotoServerRequestEmailUpdateError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerRequestEmailUpdateError = ClosedEnum<
  typeof ComAtprotoServerRequestEmailUpdateError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerRequestEmailUpdateResponseBodyData = {
  error: ComAtprotoServerRequestEmailUpdateError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerRequestEmailUpdateResponseBody extends Error {
  error: ComAtprotoServerRequestEmailUpdateError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestEmailUpdateResponseBodyData;

  constructor(err: ComAtprotoServerRequestEmailUpdateResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerRequestEmailUpdateResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerRequestEmailUpdateServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestEmailUpdateServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerRequestEmailUpdateServerResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerRequestEmailUpdateServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestEmailUpdateServerResponseBody
  > = z.instanceof(ComAtprotoServerRequestEmailUpdateServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailUpdateServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailUpdateServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailUpdateServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestEmailUpdateServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerRequestEmailUpdateError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailUpdateError> = z
    .nativeEnum(ComAtprotoServerRequestEmailUpdateError);

/** @internal */
export const ComAtprotoServerRequestEmailUpdateError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestEmailUpdateError> =
    ComAtprotoServerRequestEmailUpdateError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailUpdateError$ {
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailUpdateError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailUpdateError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRequestEmailUpdateResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRequestEmailUpdateError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestEmailUpdateResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerRequestEmailUpdateResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerRequestEmailUpdateResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestEmailUpdateResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestEmailUpdateResponseBody
  > = z.instanceof(ComAtprotoServerRequestEmailUpdateResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRequestEmailUpdateError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestEmailUpdateResponseBody$ {
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestEmailUpdateResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestEmailUpdateResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestEmailUpdateResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestEmailUpdateResponseBody$Outbound;
}
