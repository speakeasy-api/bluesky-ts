/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerGetAccountInviteCodesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  DuplicateCreate: "DuplicateCreate",
} as const;
export type ComAtprotoServerGetAccountInviteCodesError = ClosedEnum<
  typeof ComAtprotoServerGetAccountInviteCodesError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerGetAccountInviteCodesResponseBodyData = {
  error: ComAtprotoServerGetAccountInviteCodesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerGetAccountInviteCodesResponseBody extends Error {
  error: ComAtprotoServerGetAccountInviteCodesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerGetAccountInviteCodesResponseBodyData;

  constructor(err: ComAtprotoServerGetAccountInviteCodesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerGetAccountInviteCodesResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody(
        v,
      );
    });

/** @internal */
export type ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody
  > = z.instanceof(
    ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerGetAccountInviteCodesComAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerGetAccountInviteCodesError> = z
    .nativeEnum(ComAtprotoServerGetAccountInviteCodesError);

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerGetAccountInviteCodesError> =
    ComAtprotoServerGetAccountInviteCodesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetAccountInviteCodesError$ {
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetAccountInviteCodesError$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetAccountInviteCodesError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerGetAccountInviteCodesError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerGetAccountInviteCodesResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetAccountInviteCodesResponseBody
  > = z.instanceof(ComAtprotoServerGetAccountInviteCodesResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerGetAccountInviteCodesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetAccountInviteCodesResponseBody$ {
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetAccountInviteCodesResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetAccountInviteCodesResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound;
}
