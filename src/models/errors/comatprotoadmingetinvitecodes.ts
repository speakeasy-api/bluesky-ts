/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoAdminGetInviteCodesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoAdminGetInviteCodesAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetInviteCodesAuthMissingErrorData;

  constructor(
    err: ComAtprotoAdminGetInviteCodesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetInviteCodesAuthMissingError";
  }
}

export const ComAtprotoAdminGetInviteCodesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoAdminGetInviteCodesError = ClosedEnum<
  typeof ComAtprotoAdminGetInviteCodesError
>;

/**
 * Bad Request
 */
export type ComAtprotoAdminGetInviteCodesBadRequestErrorData = {
  error: ComAtprotoAdminGetInviteCodesError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoAdminGetInviteCodesBadRequestError extends BlueskyError {
  error: ComAtprotoAdminGetInviteCodesError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoAdminGetInviteCodesBadRequestErrorData;

  constructor(
    err: ComAtprotoAdminGetInviteCodesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoAdminGetInviteCodesBadRequestError";
  }
}

/** @internal */
export const ComAtprotoAdminGetInviteCodesAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetInviteCodesAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetInviteCodesAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetInviteCodesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetInviteCodesAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetInviteCodesAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetInviteCodesAuthMissingError
  > = z.instanceof(ComAtprotoAdminGetInviteCodesAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetInviteCodesAuthMissingError$ {
  /** @deprecated use `ComAtprotoAdminGetInviteCodesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetInviteCodesAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetInviteCodesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetInviteCodesAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetInviteCodesAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetInviteCodesAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoAdminGetInviteCodesError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminGetInviteCodesError
> = z.nativeEnum(ComAtprotoAdminGetInviteCodesError);

/** @internal */
export const ComAtprotoAdminGetInviteCodesError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoAdminGetInviteCodesError
> = ComAtprotoAdminGetInviteCodesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetInviteCodesError$ {
  /** @deprecated use `ComAtprotoAdminGetInviteCodesError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoAdminGetInviteCodesError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetInviteCodesError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetInviteCodesError$outboundSchema;
}

/** @internal */
export const ComAtprotoAdminGetInviteCodesBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetInviteCodesBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoAdminGetInviteCodesError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoAdminGetInviteCodesBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoAdminGetInviteCodesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoAdminGetInviteCodesBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetInviteCodesBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetInviteCodesBadRequestError
  > = z.instanceof(ComAtprotoAdminGetInviteCodesBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoAdminGetInviteCodesError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetInviteCodesBadRequestError$ {
  /** @deprecated use `ComAtprotoAdminGetInviteCodesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetInviteCodesBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetInviteCodesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetInviteCodesBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetInviteCodesBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetInviteCodesBadRequestError$Outbound;
}
