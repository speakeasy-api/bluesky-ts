/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerRequestPasswordResetAtprotoServerResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestPasswordResetAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerRequestPasswordResetAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerRequestPasswordResetError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerRequestPasswordResetError = ClosedEnum<
  typeof ComAtprotoServerRequestPasswordResetError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerRequestPasswordResetResponseBodyData = {
  error: ComAtprotoServerRequestPasswordResetError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerRequestPasswordResetResponseBody extends Error {
  error: ComAtprotoServerRequestPasswordResetError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerRequestPasswordResetResponseBodyData;

  constructor(err: ComAtprotoServerRequestPasswordResetResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerRequestPasswordResetResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody(
        v,
      );
    });

/** @internal */
export type ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody
  > = z.instanceof(
    ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestPasswordResetAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerRequestPasswordResetError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestPasswordResetError> = z
    .nativeEnum(ComAtprotoServerRequestPasswordResetError);

/** @internal */
export const ComAtprotoServerRequestPasswordResetError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRequestPasswordResetError> =
    ComAtprotoServerRequestPasswordResetError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestPasswordResetError$ {
  /** @deprecated use `ComAtprotoServerRequestPasswordResetError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestPasswordResetError$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestPasswordResetError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestPasswordResetError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRequestPasswordResetResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerRequestPasswordResetResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerRequestPasswordResetError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerRequestPasswordResetResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerRequestPasswordResetResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerRequestPasswordResetResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRequestPasswordResetResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRequestPasswordResetResponseBody
  > = z.instanceof(ComAtprotoServerRequestPasswordResetResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerRequestPasswordResetError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRequestPasswordResetResponseBody$ {
  /** @deprecated use `ComAtprotoServerRequestPasswordResetResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRequestPasswordResetResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRequestPasswordResetResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRequestPasswordResetResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRequestPasswordResetResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerRequestPasswordResetResponseBody$Outbound;
}
