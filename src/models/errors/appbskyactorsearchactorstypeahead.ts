/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyErrorData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyErrorData;

  constructor(
    err: UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError";
  }
}

export const AppBskyActorSearchActorsTypeaheadError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyActorSearchActorsTypeaheadError = ClosedEnum<
  typeof AppBskyActorSearchActorsTypeaheadError
>;

/**
 * Bad Request
 */
export type BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyErrorData = {
  error: AppBskyActorSearchActorsTypeaheadError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError
  extends Error
{
  error: AppBskyActorSearchActorsTypeaheadError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyErrorData;

  constructor(
    err: BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError(
        v,
      );
    });

/** @internal */
export type UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError
  > = z.instanceof(
    UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$ {
  /** @deprecated use `UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound;
}

/** @internal */
export const AppBskyActorSearchActorsTypeaheadError$inboundSchema:
  z.ZodNativeEnum<typeof AppBskyActorSearchActorsTypeaheadError> = z.nativeEnum(
    AppBskyActorSearchActorsTypeaheadError,
  );

/** @internal */
export const AppBskyActorSearchActorsTypeaheadError$outboundSchema:
  z.ZodNativeEnum<typeof AppBskyActorSearchActorsTypeaheadError> =
    AppBskyActorSearchActorsTypeaheadError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsTypeaheadError$ {
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorSearchActorsTypeaheadError$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorSearchActorsTypeaheadError$outboundSchema;
}

/** @internal */
export const BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyActorSearchActorsTypeaheadError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError(
        v,
      );
    });

/** @internal */
export type BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError
  > = z.instanceof(BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyActorSearchActorsTypeaheadError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$ {
  /** @deprecated use `BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestAppBskyActorSearchActorsTypeaheadResponseBodyError$Outbound;
}
