/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyActorSearchActorsTypeaheadAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyActorSearchActorsTypeaheadAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorSearchActorsTypeaheadAuthMissingErrorData;

  constructor(
    err: AppBskyActorSearchActorsTypeaheadAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorSearchActorsTypeaheadAuthMissingError";
  }
}

export const AppBskyActorSearchActorsTypeaheadError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyActorSearchActorsTypeaheadError = ClosedEnum<
  typeof AppBskyActorSearchActorsTypeaheadError
>;

/**
 * Bad Request
 */
export type AppBskyActorSearchActorsTypeaheadBadRequestErrorData = {
  error: AppBskyActorSearchActorsTypeaheadError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyActorSearchActorsTypeaheadBadRequestError
  extends BlueskyError
{
  error: AppBskyActorSearchActorsTypeaheadError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorSearchActorsTypeaheadBadRequestErrorData;

  constructor(
    err: AppBskyActorSearchActorsTypeaheadBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorSearchActorsTypeaheadBadRequestError";
  }
}

/** @internal */
export const AppBskyActorSearchActorsTypeaheadAuthMissingError$inboundSchema:
  z.ZodType<
    AppBskyActorSearchActorsTypeaheadAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyActorSearchActorsTypeaheadAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyActorSearchActorsTypeaheadAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyActorSearchActorsTypeaheadAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyActorSearchActorsTypeaheadAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyActorSearchActorsTypeaheadAuthMissingError
  > = z.instanceof(AppBskyActorSearchActorsTypeaheadAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsTypeaheadAuthMissingError$ {
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorSearchActorsTypeaheadAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorSearchActorsTypeaheadAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadAuthMissingError$Outbound` instead. */
  export type Outbound =
    AppBskyActorSearchActorsTypeaheadAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyActorSearchActorsTypeaheadError$inboundSchema:
  z.ZodNativeEnum<typeof AppBskyActorSearchActorsTypeaheadError> = z.nativeEnum(
    AppBskyActorSearchActorsTypeaheadError,
  );

/** @internal */
export const AppBskyActorSearchActorsTypeaheadError$outboundSchema:
  z.ZodNativeEnum<typeof AppBskyActorSearchActorsTypeaheadError> =
    AppBskyActorSearchActorsTypeaheadError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsTypeaheadError$ {
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorSearchActorsTypeaheadError$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorSearchActorsTypeaheadError$outboundSchema;
}

/** @internal */
export const AppBskyActorSearchActorsTypeaheadBadRequestError$inboundSchema:
  z.ZodType<
    AppBskyActorSearchActorsTypeaheadBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: AppBskyActorSearchActorsTypeaheadError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new AppBskyActorSearchActorsTypeaheadBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type AppBskyActorSearchActorsTypeaheadBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyActorSearchActorsTypeaheadBadRequestError$outboundSchema:
  z.ZodType<
    AppBskyActorSearchActorsTypeaheadBadRequestError$Outbound,
    z.ZodTypeDef,
    AppBskyActorSearchActorsTypeaheadBadRequestError
  > = z.instanceof(AppBskyActorSearchActorsTypeaheadBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyActorSearchActorsTypeaheadError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsTypeaheadBadRequestError$ {
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorSearchActorsTypeaheadBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorSearchActorsTypeaheadBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsTypeaheadBadRequestError$Outbound` instead. */
  export type Outbound =
    AppBskyActorSearchActorsTypeaheadBadRequestError$Outbound;
}
