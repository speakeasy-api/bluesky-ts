/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type AppBskyVideoGetUploadLimitsVideoResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyVideoGetUploadLimitsVideoResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyVideoGetUploadLimitsVideoResponseBodyData;

  constructor(err: AppBskyVideoGetUploadLimitsVideoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyVideoGetUploadLimitsVideoResponseBody";
  }
}

export const AppBskyVideoGetUploadLimitsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyVideoGetUploadLimitsError = ClosedEnum<
  typeof AppBskyVideoGetUploadLimitsError
>;

/**
 * Bad Request
 */
export type AppBskyVideoGetUploadLimitsResponseBodyData = {
  error: AppBskyVideoGetUploadLimitsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyVideoGetUploadLimitsResponseBody extends Error {
  error: AppBskyVideoGetUploadLimitsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyVideoGetUploadLimitsResponseBodyData;

  constructor(err: AppBskyVideoGetUploadLimitsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "AppBskyVideoGetUploadLimitsResponseBody";
  }
}

/** @internal */
export const AppBskyVideoGetUploadLimitsVideoResponseBody$inboundSchema:
  z.ZodType<
    AppBskyVideoGetUploadLimitsVideoResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new AppBskyVideoGetUploadLimitsVideoResponseBody(v);
    });

/** @internal */
export type AppBskyVideoGetUploadLimitsVideoResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyVideoGetUploadLimitsVideoResponseBody$outboundSchema:
  z.ZodType<
    AppBskyVideoGetUploadLimitsVideoResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyVideoGetUploadLimitsVideoResponseBody
  > = z.instanceof(AppBskyVideoGetUploadLimitsVideoResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoGetUploadLimitsVideoResponseBody$ {
  /** @deprecated use `AppBskyVideoGetUploadLimitsVideoResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyVideoGetUploadLimitsVideoResponseBody$inboundSchema;
  /** @deprecated use `AppBskyVideoGetUploadLimitsVideoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyVideoGetUploadLimitsVideoResponseBody$outboundSchema;
  /** @deprecated use `AppBskyVideoGetUploadLimitsVideoResponseBody$Outbound` instead. */
  export type Outbound = AppBskyVideoGetUploadLimitsVideoResponseBody$Outbound;
}

/** @internal */
export const AppBskyVideoGetUploadLimitsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoGetUploadLimitsError
> = z.nativeEnum(AppBskyVideoGetUploadLimitsError);

/** @internal */
export const AppBskyVideoGetUploadLimitsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyVideoGetUploadLimitsError
> = AppBskyVideoGetUploadLimitsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoGetUploadLimitsError$ {
  /** @deprecated use `AppBskyVideoGetUploadLimitsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyVideoGetUploadLimitsError$inboundSchema;
  /** @deprecated use `AppBskyVideoGetUploadLimitsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyVideoGetUploadLimitsError$outboundSchema;
}

/** @internal */
export const AppBskyVideoGetUploadLimitsResponseBody$inboundSchema: z.ZodType<
  AppBskyVideoGetUploadLimitsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyVideoGetUploadLimitsError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new AppBskyVideoGetUploadLimitsResponseBody(v);
  });

/** @internal */
export type AppBskyVideoGetUploadLimitsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyVideoGetUploadLimitsResponseBody$outboundSchema: z.ZodType<
  AppBskyVideoGetUploadLimitsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyVideoGetUploadLimitsResponseBody
> = z.instanceof(AppBskyVideoGetUploadLimitsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyVideoGetUploadLimitsError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoGetUploadLimitsResponseBody$ {
  /** @deprecated use `AppBskyVideoGetUploadLimitsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyVideoGetUploadLimitsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyVideoGetUploadLimitsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyVideoGetUploadLimitsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyVideoGetUploadLimitsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyVideoGetUploadLimitsResponseBody$Outbound;
}
