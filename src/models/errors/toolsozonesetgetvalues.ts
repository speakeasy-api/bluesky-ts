/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneSetGetValuesOzoneSetResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneSetGetValuesOzoneSetResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSetGetValuesOzoneSetResponseBodyData;

  constructor(err: ToolsOzoneSetGetValuesOzoneSetResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneSetGetValuesOzoneSetResponseBody";
  }
}

export const ToolsOzoneSetGetValuesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  SetNotFound: "SetNotFound",
} as const;
export type ToolsOzoneSetGetValuesError = ClosedEnum<
  typeof ToolsOzoneSetGetValuesError
>;

/**
 * Bad Request
 */
export type ToolsOzoneSetGetValuesResponseBodyData = {
  error: ToolsOzoneSetGetValuesError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneSetGetValuesResponseBody extends Error {
  error: ToolsOzoneSetGetValuesError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSetGetValuesResponseBodyData;

  constructor(err: ToolsOzoneSetGetValuesResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneSetGetValuesResponseBody";
  }
}

/** @internal */
export const ToolsOzoneSetGetValuesOzoneSetResponseBody$inboundSchema:
  z.ZodType<ToolsOzoneSetGetValuesOzoneSetResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: z.literal("AuthMissing"),
      message: z.string(),
    })
      .transform((v) => {
        return new ToolsOzoneSetGetValuesOzoneSetResponseBody(v);
      });

/** @internal */
export type ToolsOzoneSetGetValuesOzoneSetResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneSetGetValuesOzoneSetResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSetGetValuesOzoneSetResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSetGetValuesOzoneSetResponseBody
  > = z.instanceof(ToolsOzoneSetGetValuesOzoneSetResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetGetValuesOzoneSetResponseBody$ {
  /** @deprecated use `ToolsOzoneSetGetValuesOzoneSetResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSetGetValuesOzoneSetResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesOzoneSetResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetGetValuesOzoneSetResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesOzoneSetResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSetGetValuesOzoneSetResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneSetGetValuesError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSetGetValuesError
> = z.nativeEnum(ToolsOzoneSetGetValuesError);

/** @internal */
export const ToolsOzoneSetGetValuesError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSetGetValuesError
> = ToolsOzoneSetGetValuesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetGetValuesError$ {
  /** @deprecated use `ToolsOzoneSetGetValuesError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetGetValuesError$inboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetGetValuesError$outboundSchema;
}

/** @internal */
export const ToolsOzoneSetGetValuesResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneSetGetValuesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneSetGetValuesError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneSetGetValuesResponseBody(v);
  });

/** @internal */
export type ToolsOzoneSetGetValuesResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneSetGetValuesResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneSetGetValuesResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetGetValuesResponseBody
> = z.instanceof(ToolsOzoneSetGetValuesResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ToolsOzoneSetGetValuesError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetGetValuesResponseBody$ {
  /** @deprecated use `ToolsOzoneSetGetValuesResponseBody$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetGetValuesResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetGetValuesResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSetGetValuesResponseBody$Outbound;
}
