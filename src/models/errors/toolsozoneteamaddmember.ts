/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedToolsOzoneTeamAddMemberResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedToolsOzoneTeamAddMemberResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedToolsOzoneTeamAddMemberResponseBodyErrorData;

  constructor(err: UnauthorizedToolsOzoneTeamAddMemberResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedToolsOzoneTeamAddMemberResponseBodyError";
  }
}

export const ToolsOzoneTeamAddMemberError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  MemberAlreadyExists: "MemberAlreadyExists",
} as const;
export type ToolsOzoneTeamAddMemberError = ClosedEnum<
  typeof ToolsOzoneTeamAddMemberError
>;

/**
 * Bad Request
 */
export type BadRequestToolsOzoneTeamAddMemberResponseBodyErrorData = {
  error: ToolsOzoneTeamAddMemberError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestToolsOzoneTeamAddMemberResponseBodyError extends Error {
  error: ToolsOzoneTeamAddMemberError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestToolsOzoneTeamAddMemberResponseBodyErrorData;

  constructor(err: BadRequestToolsOzoneTeamAddMemberResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestToolsOzoneTeamAddMemberResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneTeamAddMemberResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedToolsOzoneTeamAddMemberResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedToolsOzoneTeamAddMemberResponseBodyError
  > = z.instanceof(UnauthorizedToolsOzoneTeamAddMemberResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$ {
  /** @deprecated use `UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedToolsOzoneTeamAddMemberResponseBodyError$Outbound;
}

/** @internal */
export const ToolsOzoneTeamAddMemberError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamAddMemberError
> = z.nativeEnum(ToolsOzoneTeamAddMemberError);

/** @internal */
export const ToolsOzoneTeamAddMemberError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamAddMemberError
> = ToolsOzoneTeamAddMemberError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamAddMemberError$ {
  /** @deprecated use `ToolsOzoneTeamAddMemberError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamAddMemberError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamAddMemberError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamAddMemberError$outboundSchema;
}

/** @internal */
export const BadRequestToolsOzoneTeamAddMemberResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestToolsOzoneTeamAddMemberResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneTeamAddMemberError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestToolsOzoneTeamAddMemberResponseBodyError(v);
    });

/** @internal */
export type BadRequestToolsOzoneTeamAddMemberResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestToolsOzoneTeamAddMemberResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestToolsOzoneTeamAddMemberResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestToolsOzoneTeamAddMemberResponseBodyError
  > = z.instanceof(BadRequestToolsOzoneTeamAddMemberResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneTeamAddMemberError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestToolsOzoneTeamAddMemberResponseBodyError$ {
  /** @deprecated use `BadRequestToolsOzoneTeamAddMemberResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestToolsOzoneTeamAddMemberResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestToolsOzoneTeamAddMemberResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestToolsOzoneTeamAddMemberResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestToolsOzoneTeamAddMemberResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestToolsOzoneTeamAddMemberResponseBodyError$Outbound;
}
