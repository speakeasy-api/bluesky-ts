/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ToolsOzoneTeamAddMemberAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ToolsOzoneTeamAddMemberAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamAddMemberAuthMissingErrorData;

  constructor(
    err: ToolsOzoneTeamAddMemberAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneTeamAddMemberAuthMissingError";
  }
}

export const ToolsOzoneTeamAddMemberError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  MemberAlreadyExists: "MemberAlreadyExists",
} as const;
export type ToolsOzoneTeamAddMemberError = ClosedEnum<
  typeof ToolsOzoneTeamAddMemberError
>;

/**
 * Bad Request
 */
export type ToolsOzoneTeamAddMemberBadRequestErrorData = {
  error: ToolsOzoneTeamAddMemberError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneTeamAddMemberBadRequestError extends BlueskyError {
  error: ToolsOzoneTeamAddMemberError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneTeamAddMemberBadRequestErrorData;

  constructor(
    err: ToolsOzoneTeamAddMemberBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ToolsOzoneTeamAddMemberBadRequestError";
  }
}

/** @internal */
export const ToolsOzoneTeamAddMemberAuthMissingError$inboundSchema: z.ZodType<
  ToolsOzoneTeamAddMemberAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneTeamAddMemberAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ToolsOzoneTeamAddMemberAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ToolsOzoneTeamAddMemberAuthMissingError$outboundSchema: z.ZodType<
  ToolsOzoneTeamAddMemberAuthMissingError$Outbound,
  z.ZodTypeDef,
  ToolsOzoneTeamAddMemberAuthMissingError
> = z.instanceof(ToolsOzoneTeamAddMemberAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamAddMemberAuthMissingError$ {
  /** @deprecated use `ToolsOzoneTeamAddMemberAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamAddMemberAuthMissingError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamAddMemberAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamAddMemberAuthMissingError$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamAddMemberAuthMissingError$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamAddMemberAuthMissingError$Outbound;
}

/** @internal */
export const ToolsOzoneTeamAddMemberError$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamAddMemberError
> = z.nativeEnum(ToolsOzoneTeamAddMemberError);

/** @internal */
export const ToolsOzoneTeamAddMemberError$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamAddMemberError
> = ToolsOzoneTeamAddMemberError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamAddMemberError$ {
  /** @deprecated use `ToolsOzoneTeamAddMemberError$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamAddMemberError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamAddMemberError$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamAddMemberError$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamAddMemberBadRequestError$inboundSchema: z.ZodType<
  ToolsOzoneTeamAddMemberBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ToolsOzoneTeamAddMemberError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new ToolsOzoneTeamAddMemberBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type ToolsOzoneTeamAddMemberBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneTeamAddMemberBadRequestError$outboundSchema: z.ZodType<
  ToolsOzoneTeamAddMemberBadRequestError$Outbound,
  z.ZodTypeDef,
  ToolsOzoneTeamAddMemberBadRequestError
> = z.instanceof(ToolsOzoneTeamAddMemberBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ToolsOzoneTeamAddMemberError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamAddMemberBadRequestError$ {
  /** @deprecated use `ToolsOzoneTeamAddMemberBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneTeamAddMemberBadRequestError$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamAddMemberBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamAddMemberBadRequestError$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamAddMemberBadRequestError$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamAddMemberBadRequestError$Outbound;
}
