/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerListAppPasswordsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerListAppPasswordsAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerListAppPasswordsAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerListAppPasswordsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerListAppPasswordsAuthMissingError";
  }
}

export const ComAtprotoServerListAppPasswordsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
} as const;
export type ComAtprotoServerListAppPasswordsError = ClosedEnum<
  typeof ComAtprotoServerListAppPasswordsError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerListAppPasswordsBadRequestErrorData = {
  error: ComAtprotoServerListAppPasswordsError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerListAppPasswordsBadRequestError
  extends BlueskyError
{
  error: ComAtprotoServerListAppPasswordsError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerListAppPasswordsBadRequestErrorData;

  constructor(
    err: ComAtprotoServerListAppPasswordsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerListAppPasswordsBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerListAppPasswordsAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerListAppPasswordsAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerListAppPasswordsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerListAppPasswordsAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerListAppPasswordsAuthMissingError
  > = z.instanceof(ComAtprotoServerListAppPasswordsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsAuthMissingError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerListAppPasswordsAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerListAppPasswordsError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerListAppPasswordsError> = z.nativeEnum(
    ComAtprotoServerListAppPasswordsError,
  );

/** @internal */
export const ComAtprotoServerListAppPasswordsError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerListAppPasswordsError> =
    ComAtprotoServerListAppPasswordsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsError$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsError$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerListAppPasswordsBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerListAppPasswordsError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerListAppPasswordsBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerListAppPasswordsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerListAppPasswordsBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerListAppPasswordsBadRequestError
  > = z.instanceof(ComAtprotoServerListAppPasswordsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerListAppPasswordsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsBadRequestError$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsBadRequestError$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerListAppPasswordsBadRequestError$Outbound;
}
