/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerListAppPasswordsAtprotoServerResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerListAppPasswordsAtprotoServerResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerListAppPasswordsAtprotoServerResponseBodyData;

  constructor(
    err: ComAtprotoServerListAppPasswordsAtprotoServerResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerListAppPasswordsAtprotoServerResponseBody";
  }
}

export const ComAtprotoServerListAppPasswordsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  AccountTakedown: "AccountTakedown",
} as const;
export type ComAtprotoServerListAppPasswordsError = ClosedEnum<
  typeof ComAtprotoServerListAppPasswordsError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerListAppPasswordsResponseBodyData = {
  error: ComAtprotoServerListAppPasswordsError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerListAppPasswordsResponseBody extends Error {
  error: ComAtprotoServerListAppPasswordsError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerListAppPasswordsResponseBodyData;

  constructor(err: ComAtprotoServerListAppPasswordsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoServerListAppPasswordsResponseBody";
  }
}

/** @internal */
export const ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsAtprotoServerResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerListAppPasswordsAtprotoServerResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerListAppPasswordsAtprotoServerResponseBody
  > = z.instanceof(ComAtprotoServerListAppPasswordsAtprotoServerResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerListAppPasswordsAtprotoServerResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoServerListAppPasswordsError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerListAppPasswordsError> = z.nativeEnum(
    ComAtprotoServerListAppPasswordsError,
  );

/** @internal */
export const ComAtprotoServerListAppPasswordsError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerListAppPasswordsError> =
    ComAtprotoServerListAppPasswordsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsError$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsError$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerListAppPasswordsResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerListAppPasswordsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerListAppPasswordsResponseBody(v);
    });

/** @internal */
export type ComAtprotoServerListAppPasswordsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerListAppPasswordsResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerListAppPasswordsResponseBody
  > = z.instanceof(ComAtprotoServerListAppPasswordsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerListAppPasswordsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsResponseBody$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerListAppPasswordsResponseBody$Outbound;
}
