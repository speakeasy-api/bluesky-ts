/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoSyncGetRecordComAtprotoSyncResponseBodyData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoSyncGetRecordComAtprotoSyncResponseBody extends Error {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetRecordComAtprotoSyncResponseBodyData;

  constructor(err: ComAtprotoSyncGetRecordComAtprotoSyncResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetRecordComAtprotoSyncResponseBody";
  }
}

export const ComAtprotoSyncGetRecordError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  RecordNotFound: "RecordNotFound",
  RepoNotFound: "RepoNotFound",
  RepoTakendown: "RepoTakendown",
  RepoSuspended: "RepoSuspended",
  RepoDeactivated: "RepoDeactivated",
} as const;
export type ComAtprotoSyncGetRecordError = ClosedEnum<
  typeof ComAtprotoSyncGetRecordError
>;

/**
 * Bad Request
 */
export type ComAtprotoSyncGetRecordResponseBodyData = {
  error: ComAtprotoSyncGetRecordError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoSyncGetRecordResponseBody extends Error {
  error: ComAtprotoSyncGetRecordError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoSyncGetRecordResponseBodyData;

  constructor(err: ComAtprotoSyncGetRecordResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoSyncGetRecordResponseBody";
  }
}

/** @internal */
export const ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoSyncGetRecordComAtprotoSyncResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoSyncGetRecordComAtprotoSyncResponseBody(v);
    });

/** @internal */
export type ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoSyncGetRecordComAtprotoSyncResponseBody
  > = z.instanceof(ComAtprotoSyncGetRecordComAtprotoSyncResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoSyncGetRecordComAtprotoSyncResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoSyncGetRecordError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRecordError
> = z.nativeEnum(ComAtprotoSyncGetRecordError);

/** @internal */
export const ComAtprotoSyncGetRecordError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRecordError
> = ComAtprotoSyncGetRecordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRecordError$ {
  /** @deprecated use `ComAtprotoSyncGetRecordError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRecordError$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRecordError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetRecordError$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncGetRecordResponseBody$inboundSchema: z.ZodType<
  ComAtprotoSyncGetRecordResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: ComAtprotoSyncGetRecordError$inboundSchema,
  message: z.string(),
})
  .transform((v) => {
    return new ComAtprotoSyncGetRecordResponseBody(v);
  });

/** @internal */
export type ComAtprotoSyncGetRecordResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoSyncGetRecordResponseBody$outboundSchema: z.ZodType<
  ComAtprotoSyncGetRecordResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetRecordResponseBody
> = z.instanceof(ComAtprotoSyncGetRecordResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: ComAtprotoSyncGetRecordError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRecordResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetRecordResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetRecordResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRecordResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRecordResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRecordResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRecordResponseBody$Outbound;
}
