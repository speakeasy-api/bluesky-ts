/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBodyData;

  constructor(
    err: ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody";
  }
}

export const ToolsOzoneSignatureSearchAccountsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ToolsOzoneSignatureSearchAccountsError = ClosedEnum<
  typeof ToolsOzoneSignatureSearchAccountsError
>;

/**
 * Bad Request
 */
export type ToolsOzoneSignatureSearchAccountsResponseBodyData = {
  error: ToolsOzoneSignatureSearchAccountsError;
  message: string;
};

/**
 * Bad Request
 */
export class ToolsOzoneSignatureSearchAccountsResponseBody extends Error {
  error: ToolsOzoneSignatureSearchAccountsError;

  /** The original data that was passed to this error instance. */
  data$: ToolsOzoneSignatureSearchAccountsResponseBodyData;

  constructor(err: ToolsOzoneSignatureSearchAccountsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ToolsOzoneSignatureSearchAccountsResponseBody";
  }
}

/** @internal */
export const ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody(
        v,
      );
    });

/** @internal */
export type ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody
  > = z.instanceof(
    ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$ {
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneSignatureSearchAccountsToolsOzoneSignatureResponseBody$Outbound;
}

/** @internal */
export const ToolsOzoneSignatureSearchAccountsError$inboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneSignatureSearchAccountsError> = z.nativeEnum(
    ToolsOzoneSignatureSearchAccountsError,
  );

/** @internal */
export const ToolsOzoneSignatureSearchAccountsError$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneSignatureSearchAccountsError> =
    ToolsOzoneSignatureSearchAccountsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureSearchAccountsError$ {
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsError$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureSearchAccountsError$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsError$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureSearchAccountsError$outboundSchema;
}

/** @internal */
export const ToolsOzoneSignatureSearchAccountsResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneSignatureSearchAccountsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ToolsOzoneSignatureSearchAccountsError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ToolsOzoneSignatureSearchAccountsResponseBody(v);
    });

/** @internal */
export type ToolsOzoneSignatureSearchAccountsResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ToolsOzoneSignatureSearchAccountsResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureSearchAccountsResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureSearchAccountsResponseBody
  > = z.instanceof(ToolsOzoneSignatureSearchAccountsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ToolsOzoneSignatureSearchAccountsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureSearchAccountsResponseBody$ {
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureSearchAccountsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureSearchAccountsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSignatureSearchAccountsResponseBody$Outbound;
}
