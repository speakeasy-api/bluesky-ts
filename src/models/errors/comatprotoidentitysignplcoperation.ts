/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBodyData =
  {
    error: "AuthMissing";
    message: string;
  };

/**
 * Unauthorized
 */
export class ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBodyData;

  constructor(
    err: ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBodyData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name =
      "ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody";
  }
}

export const ComAtprotoIdentitySignPlcOperationError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoIdentitySignPlcOperationError = ClosedEnum<
  typeof ComAtprotoIdentitySignPlcOperationError
>;

/**
 * Bad Request
 */
export type ComAtprotoIdentitySignPlcOperationResponseBodyData = {
  error: ComAtprotoIdentitySignPlcOperationError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoIdentitySignPlcOperationResponseBody extends Error {
  error: ComAtprotoIdentitySignPlcOperationError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoIdentitySignPlcOperationResponseBodyData;

  constructor(err: ComAtprotoIdentitySignPlcOperationResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "ComAtprotoIdentitySignPlcOperationResponseBody";
  }
}

/** @internal */
export const ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody(
        v,
      );
    });

/** @internal */
export type ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody
  > = z.instanceof(
    ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody,
  )
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$ {
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoIdentitySignPlcOperationComAtprotoIdentityResponseBody$Outbound;
}

/** @internal */
export const ComAtprotoIdentitySignPlcOperationError$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentitySignPlcOperationError> = z
    .nativeEnum(ComAtprotoIdentitySignPlcOperationError);

/** @internal */
export const ComAtprotoIdentitySignPlcOperationError$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoIdentitySignPlcOperationError> =
    ComAtprotoIdentitySignPlcOperationError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentitySignPlcOperationError$ {
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentitySignPlcOperationError$inboundSchema;
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentitySignPlcOperationError$outboundSchema;
}

/** @internal */
export const ComAtprotoIdentitySignPlcOperationResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoIdentitySignPlcOperationResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoIdentitySignPlcOperationError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoIdentitySignPlcOperationResponseBody(v);
    });

/** @internal */
export type ComAtprotoIdentitySignPlcOperationResponseBody$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoIdentitySignPlcOperationResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoIdentitySignPlcOperationResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoIdentitySignPlcOperationResponseBody
  > = z.instanceof(ComAtprotoIdentitySignPlcOperationResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoIdentitySignPlcOperationError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentitySignPlcOperationResponseBody$ {
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentitySignPlcOperationResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentitySignPlcOperationResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentitySignPlcOperationResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoIdentitySignPlcOperationResponseBody$Outbound;
}
