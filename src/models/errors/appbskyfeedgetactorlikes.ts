/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyFeedGetActorLikesAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyFeedGetActorLikesAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetActorLikesAuthMissingErrorData;

  constructor(
    err: AppBskyFeedGetActorLikesAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetActorLikesAuthMissingError";
  }
}

export const AppBskyFeedGetActorLikesError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  BlockedActor: "BlockedActor",
  BlockedByActor: "BlockedByActor",
} as const;
export type AppBskyFeedGetActorLikesError = ClosedEnum<
  typeof AppBskyFeedGetActorLikesError
>;

/**
 * Bad Request
 */
export type AppBskyFeedGetActorLikesBadRequestErrorData = {
  error: AppBskyFeedGetActorLikesError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyFeedGetActorLikesBadRequestError extends BlueskyError {
  error: AppBskyFeedGetActorLikesError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyFeedGetActorLikesBadRequestErrorData;

  constructor(
    err: AppBskyFeedGetActorLikesBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyFeedGetActorLikesBadRequestError";
  }
}

/** @internal */
export const AppBskyFeedGetActorLikesAuthMissingError$inboundSchema: z.ZodType<
  AppBskyFeedGetActorLikesAuthMissingError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.literal("AuthMissing").default("AuthMissing"),
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetActorLikesAuthMissingError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetActorLikesAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyFeedGetActorLikesAuthMissingError$outboundSchema: z.ZodType<
  AppBskyFeedGetActorLikesAuthMissingError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetActorLikesAuthMissingError
> = z.instanceof(AppBskyFeedGetActorLikesAuthMissingError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.literal("AuthMissing").default("AuthMissing" as const),
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorLikesAuthMissingError$ {
  /** @deprecated use `AppBskyFeedGetActorLikesAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetActorLikesAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorLikesAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetActorLikesAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetActorLikesAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetActorLikesAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyFeedGetActorLikesError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetActorLikesError
> = z.nativeEnum(AppBskyFeedGetActorLikesError);

/** @internal */
export const AppBskyFeedGetActorLikesError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyFeedGetActorLikesError
> = AppBskyFeedGetActorLikesError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorLikesError$ {
  /** @deprecated use `AppBskyFeedGetActorLikesError$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetActorLikesError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorLikesError$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetActorLikesError$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetActorLikesBadRequestError$inboundSchema: z.ZodType<
  AppBskyFeedGetActorLikesBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyFeedGetActorLikesError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyFeedGetActorLikesBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyFeedGetActorLikesBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyFeedGetActorLikesBadRequestError$outboundSchema: z.ZodType<
  AppBskyFeedGetActorLikesBadRequestError$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetActorLikesBadRequestError
> = z.instanceof(AppBskyFeedGetActorLikesBadRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: AppBskyFeedGetActorLikesError$outboundSchema,
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorLikesBadRequestError$ {
  /** @deprecated use `AppBskyFeedGetActorLikesBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetActorLikesBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorLikesBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetActorLikesBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyFeedGetActorLikesBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyFeedGetActorLikesBadRequestError$Outbound;
}
