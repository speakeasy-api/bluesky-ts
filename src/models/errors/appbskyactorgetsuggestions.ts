/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type AppBskyActorGetSuggestionsAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class AppBskyActorGetSuggestionsAuthMissingError extends BlueskyError {
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorGetSuggestionsAuthMissingErrorData;

  constructor(
    err: AppBskyActorGetSuggestionsAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorGetSuggestionsAuthMissingError";
  }
}

export const AppBskyActorGetSuggestionsError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
} as const;
export type AppBskyActorGetSuggestionsError = ClosedEnum<
  typeof AppBskyActorGetSuggestionsError
>;

/**
 * Bad Request
 */
export type AppBskyActorGetSuggestionsBadRequestErrorData = {
  error: AppBskyActorGetSuggestionsError;
  message: string;
};

/**
 * Bad Request
 */
export class AppBskyActorGetSuggestionsBadRequestError extends BlueskyError {
  error: AppBskyActorGetSuggestionsError;

  /** The original data that was passed to this error instance. */
  data$: AppBskyActorGetSuggestionsBadRequestErrorData;

  constructor(
    err: AppBskyActorGetSuggestionsBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "AppBskyActorGetSuggestionsBadRequestError";
  }
}

/** @internal */
export const AppBskyActorGetSuggestionsAuthMissingError$inboundSchema:
  z.ZodType<AppBskyActorGetSuggestionsAuthMissingError, z.ZodTypeDef, unknown> =
    z.object({
      error: z.literal("AuthMissing").default("AuthMissing"),
      message: z.string(),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new AppBskyActorGetSuggestionsAuthMissingError(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type AppBskyActorGetSuggestionsAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const AppBskyActorGetSuggestionsAuthMissingError$outboundSchema:
  z.ZodType<
    AppBskyActorGetSuggestionsAuthMissingError$Outbound,
    z.ZodTypeDef,
    AppBskyActorGetSuggestionsAuthMissingError
  > = z.instanceof(AppBskyActorGetSuggestionsAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetSuggestionsAuthMissingError$ {
  /** @deprecated use `AppBskyActorGetSuggestionsAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorGetSuggestionsAuthMissingError$inboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetSuggestionsAuthMissingError$outboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsAuthMissingError$Outbound` instead. */
  export type Outbound = AppBskyActorGetSuggestionsAuthMissingError$Outbound;
}

/** @internal */
export const AppBskyActorGetSuggestionsError$inboundSchema: z.ZodNativeEnum<
  typeof AppBskyActorGetSuggestionsError
> = z.nativeEnum(AppBskyActorGetSuggestionsError);

/** @internal */
export const AppBskyActorGetSuggestionsError$outboundSchema: z.ZodNativeEnum<
  typeof AppBskyActorGetSuggestionsError
> = AppBskyActorGetSuggestionsError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetSuggestionsError$ {
  /** @deprecated use `AppBskyActorGetSuggestionsError$inboundSchema` instead. */
  export const inboundSchema = AppBskyActorGetSuggestionsError$inboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsError$outboundSchema` instead. */
  export const outboundSchema = AppBskyActorGetSuggestionsError$outboundSchema;
}

/** @internal */
export const AppBskyActorGetSuggestionsBadRequestError$inboundSchema: z.ZodType<
  AppBskyActorGetSuggestionsBadRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: AppBskyActorGetSuggestionsError$inboundSchema,
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new AppBskyActorGetSuggestionsBadRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type AppBskyActorGetSuggestionsBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const AppBskyActorGetSuggestionsBadRequestError$outboundSchema:
  z.ZodType<
    AppBskyActorGetSuggestionsBadRequestError$Outbound,
    z.ZodTypeDef,
    AppBskyActorGetSuggestionsBadRequestError
  > = z.instanceof(AppBskyActorGetSuggestionsBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: AppBskyActorGetSuggestionsError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetSuggestionsBadRequestError$ {
  /** @deprecated use `AppBskyActorGetSuggestionsBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorGetSuggestionsBadRequestError$inboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetSuggestionsBadRequestError$outboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsBadRequestError$Outbound` instead. */
  export type Outbound = AppBskyActorGetSuggestionsBadRequestError$Outbound;
}
