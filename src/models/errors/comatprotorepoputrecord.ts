/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoRepoPutRecordResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoRepoPutRecordResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoRepoPutRecordResponseBodyErrorData;

  constructor(err: UnauthorizedComAtprotoRepoPutRecordResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoRepoPutRecordResponseBodyError";
  }
}

export const ComAtprotoRepoPutRecordError = {
  InvalidRequest: "InvalidRequest",
  ExpiredToken: "ExpiredToken",
  InvalidToken: "InvalidToken",
  InvalidSwap: "InvalidSwap",
} as const;
export type ComAtprotoRepoPutRecordError = ClosedEnum<
  typeof ComAtprotoRepoPutRecordError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoRepoPutRecordResponseBodyErrorData = {
  error: ComAtprotoRepoPutRecordError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoRepoPutRecordResponseBodyError extends Error {
  error: ComAtprotoRepoPutRecordError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoRepoPutRecordResponseBodyErrorData;

  constructor(err: BadRequestComAtprotoRepoPutRecordResponseBodyErrorData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoRepoPutRecordResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoRepoPutRecordResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoRepoPutRecordResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoRepoPutRecordResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoRepoPutRecordResponseBodyError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const UnauthorizedComAtprotoRepoPutRecordResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoRepoPutRecordResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoRepoPutRecordResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoRepoPutRecordResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoRepoPutRecordResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoRepoPutRecordResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoRepoPutRecordResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoRepoPutRecordResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoRepoPutRecordResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoRepoPutRecordResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoRepoPutRecordResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoRepoPutRecordError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoRepoPutRecordError
> = z.nativeEnum(ComAtprotoRepoPutRecordError);

/** @internal */
export const ComAtprotoRepoPutRecordError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoRepoPutRecordError
> = ComAtprotoRepoPutRecordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoPutRecordError$ {
  /** @deprecated use `ComAtprotoRepoPutRecordError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoRepoPutRecordError$inboundSchema;
  /** @deprecated use `ComAtprotoRepoPutRecordError$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoRepoPutRecordError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoRepoPutRecordResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoRepoPutRecordResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoRepoPutRecordError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoRepoPutRecordResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoRepoPutRecordResponseBodyError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const BadRequestComAtprotoRepoPutRecordResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoRepoPutRecordResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoRepoPutRecordResponseBodyError
  > = z.instanceof(BadRequestComAtprotoRepoPutRecordResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoRepoPutRecordError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoRepoPutRecordResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoRepoPutRecordResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoRepoPutRecordResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoRepoPutRecordResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoRepoPutRecordResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoRepoPutRecordResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoRepoPutRecordResponseBodyError$Outbound;
}
