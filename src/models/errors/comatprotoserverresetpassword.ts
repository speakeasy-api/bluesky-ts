/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BlueskyError } from "./blueskyerror.js";

/**
 * Unauthorized
 */
export type ComAtprotoServerResetPasswordAuthMissingErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class ComAtprotoServerResetPasswordAuthMissingError
  extends BlueskyError
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerResetPasswordAuthMissingErrorData;

  constructor(
    err: ComAtprotoServerResetPasswordAuthMissingErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerResetPasswordAuthMissingError";
  }
}

export const ComAtprotoServerResetPasswordError = {
  ExpiredToken: "ExpiredToken",
  InvalidRequest: "InvalidRequest",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerResetPasswordError = ClosedEnum<
  typeof ComAtprotoServerResetPasswordError
>;

/**
 * Bad Request
 */
export type ComAtprotoServerResetPasswordBadRequestErrorData = {
  error: ComAtprotoServerResetPasswordError;
  message: string;
};

/**
 * Bad Request
 */
export class ComAtprotoServerResetPasswordBadRequestError extends BlueskyError {
  error: ComAtprotoServerResetPasswordError;

  /** The original data that was passed to this error instance. */
  data$: ComAtprotoServerResetPasswordBadRequestErrorData;

  constructor(
    err: ComAtprotoServerResetPasswordBadRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "ComAtprotoServerResetPasswordBadRequestError";
  }
}

/** @internal */
export const ComAtprotoServerResetPasswordAuthMissingError$inboundSchema:
  z.ZodType<
    ComAtprotoServerResetPasswordAuthMissingError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing").default("AuthMissing"),
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerResetPasswordAuthMissingError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerResetPasswordAuthMissingError$Outbound = {
  error: "AuthMissing";
  message: string;
};

/** @internal */
export const ComAtprotoServerResetPasswordAuthMissingError$outboundSchema:
  z.ZodType<
    ComAtprotoServerResetPasswordAuthMissingError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerResetPasswordAuthMissingError
  > = z.instanceof(ComAtprotoServerResetPasswordAuthMissingError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerResetPasswordAuthMissingError$ {
  /** @deprecated use `ComAtprotoServerResetPasswordAuthMissingError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerResetPasswordAuthMissingError$inboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordAuthMissingError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerResetPasswordAuthMissingError$outboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordAuthMissingError$Outbound` instead. */
  export type Outbound = ComAtprotoServerResetPasswordAuthMissingError$Outbound;
}

/** @internal */
export const ComAtprotoServerResetPasswordError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerResetPasswordError
> = z.nativeEnum(ComAtprotoServerResetPasswordError);

/** @internal */
export const ComAtprotoServerResetPasswordError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerResetPasswordError
> = ComAtprotoServerResetPasswordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerResetPasswordError$ {
  /** @deprecated use `ComAtprotoServerResetPasswordError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerResetPasswordError$inboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerResetPasswordError$outboundSchema;
}

/** @internal */
export const ComAtprotoServerResetPasswordBadRequestError$inboundSchema:
  z.ZodType<
    ComAtprotoServerResetPasswordBadRequestError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerResetPasswordError$inboundSchema,
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new ComAtprotoServerResetPasswordBadRequestError(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type ComAtprotoServerResetPasswordBadRequestError$Outbound = {
  error: string;
  message: string;
};

/** @internal */
export const ComAtprotoServerResetPasswordBadRequestError$outboundSchema:
  z.ZodType<
    ComAtprotoServerResetPasswordBadRequestError$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerResetPasswordBadRequestError
  > = z.instanceof(ComAtprotoServerResetPasswordBadRequestError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerResetPasswordError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerResetPasswordBadRequestError$ {
  /** @deprecated use `ComAtprotoServerResetPasswordBadRequestError$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerResetPasswordBadRequestError$inboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordBadRequestError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerResetPasswordBadRequestError$outboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordBadRequestError$Outbound` instead. */
  export type Outbound = ComAtprotoServerResetPasswordBadRequestError$Outbound;
}
