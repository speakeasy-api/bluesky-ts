/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Unauthorized
 */
export type UnauthorizedComAtprotoServerResetPasswordResponseBodyErrorData = {
  error: "AuthMissing";
  message: string;
};

/**
 * Unauthorized
 */
export class UnauthorizedComAtprotoServerResetPasswordResponseBodyError
  extends Error
{
  error: "AuthMissing";

  /** The original data that was passed to this error instance. */
  data$: UnauthorizedComAtprotoServerResetPasswordResponseBodyErrorData;

  constructor(
    err: UnauthorizedComAtprotoServerResetPasswordResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "UnauthorizedComAtprotoServerResetPasswordResponseBodyError";
  }
}

export const ComAtprotoServerResetPasswordError = {
  ExpiredToken: "ExpiredToken",
  InvalidRequest: "InvalidRequest",
  InvalidToken: "InvalidToken",
} as const;
export type ComAtprotoServerResetPasswordError = ClosedEnum<
  typeof ComAtprotoServerResetPasswordError
>;

/**
 * Bad Request
 */
export type BadRequestComAtprotoServerResetPasswordResponseBodyErrorData = {
  error: ComAtprotoServerResetPasswordError;
  message: string;
};

/**
 * Bad Request
 */
export class BadRequestComAtprotoServerResetPasswordResponseBodyError
  extends Error
{
  error: ComAtprotoServerResetPasswordError;

  /** The original data that was passed to this error instance. */
  data$: BadRequestComAtprotoServerResetPasswordResponseBodyErrorData;

  constructor(
    err: BadRequestComAtprotoServerResetPasswordResponseBodyErrorData,
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.error = err.error;

    this.name = "BadRequestComAtprotoServerResetPasswordResponseBodyError";
  }
}

/** @internal */
export const UnauthorizedComAtprotoServerResetPasswordResponseBodyError$inboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerResetPasswordResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: z.literal("AuthMissing"),
    message: z.string(),
  })
    .transform((v) => {
      return new UnauthorizedComAtprotoServerResetPasswordResponseBodyError(v);
    });

/** @internal */
export type UnauthorizedComAtprotoServerResetPasswordResponseBodyError$Outbound =
  {
    error: "AuthMissing";
    message: string;
  };

/** @internal */
export const UnauthorizedComAtprotoServerResetPasswordResponseBodyError$outboundSchema:
  z.ZodType<
    UnauthorizedComAtprotoServerResetPasswordResponseBodyError$Outbound,
    z.ZodTypeDef,
    UnauthorizedComAtprotoServerResetPasswordResponseBodyError
  > = z.instanceof(UnauthorizedComAtprotoServerResetPasswordResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.literal("AuthMissing").default("AuthMissing" as const),
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UnauthorizedComAtprotoServerResetPasswordResponseBodyError$ {
  /** @deprecated use `UnauthorizedComAtprotoServerResetPasswordResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    UnauthorizedComAtprotoServerResetPasswordResponseBodyError$inboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerResetPasswordResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    UnauthorizedComAtprotoServerResetPasswordResponseBodyError$outboundSchema;
  /** @deprecated use `UnauthorizedComAtprotoServerResetPasswordResponseBodyError$Outbound` instead. */
  export type Outbound =
    UnauthorizedComAtprotoServerResetPasswordResponseBodyError$Outbound;
}

/** @internal */
export const ComAtprotoServerResetPasswordError$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerResetPasswordError
> = z.nativeEnum(ComAtprotoServerResetPasswordError);

/** @internal */
export const ComAtprotoServerResetPasswordError$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoServerResetPasswordError
> = ComAtprotoServerResetPasswordError$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerResetPasswordError$ {
  /** @deprecated use `ComAtprotoServerResetPasswordError$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerResetPasswordError$inboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordError$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerResetPasswordError$outboundSchema;
}

/** @internal */
export const BadRequestComAtprotoServerResetPasswordResponseBodyError$inboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerResetPasswordResponseBodyError,
    z.ZodTypeDef,
    unknown
  > = z.object({
    error: ComAtprotoServerResetPasswordError$inboundSchema,
    message: z.string(),
  })
    .transform((v) => {
      return new BadRequestComAtprotoServerResetPasswordResponseBodyError(v);
    });

/** @internal */
export type BadRequestComAtprotoServerResetPasswordResponseBodyError$Outbound =
  {
    error: string;
    message: string;
  };

/** @internal */
export const BadRequestComAtprotoServerResetPasswordResponseBodyError$outboundSchema:
  z.ZodType<
    BadRequestComAtprotoServerResetPasswordResponseBodyError$Outbound,
    z.ZodTypeDef,
    BadRequestComAtprotoServerResetPasswordResponseBodyError
  > = z.instanceof(BadRequestComAtprotoServerResetPasswordResponseBodyError)
    .transform(v => v.data$)
    .pipe(z.object({
      error: ComAtprotoServerResetPasswordError$outboundSchema,
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestComAtprotoServerResetPasswordResponseBodyError$ {
  /** @deprecated use `BadRequestComAtprotoServerResetPasswordResponseBodyError$inboundSchema` instead. */
  export const inboundSchema =
    BadRequestComAtprotoServerResetPasswordResponseBodyError$inboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerResetPasswordResponseBodyError$outboundSchema` instead. */
  export const outboundSchema =
    BadRequestComAtprotoServerResetPasswordResponseBodyError$outboundSchema;
  /** @deprecated use `BadRequestComAtprotoServerResetPasswordResponseBodyError$Outbound` instead. */
  export type Outbound =
    BadRequestComAtprotoServerResetPasswordResponseBodyError$Outbound;
}
