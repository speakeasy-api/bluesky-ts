/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyGraphUnmuteActorBody = {
  actor: string;
};

/** @internal */
export const AppBskyGraphUnmuteActorBody$inboundSchema: z.ZodType<
  AppBskyGraphUnmuteActorBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  actor: z.string(),
});

/** @internal */
export type AppBskyGraphUnmuteActorBody$Outbound = {
  actor: string;
};

/** @internal */
export const AppBskyGraphUnmuteActorBody$outboundSchema: z.ZodType<
  AppBskyGraphUnmuteActorBody$Outbound,
  z.ZodTypeDef,
  AppBskyGraphUnmuteActorBody
> = z.object({
  actor: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphUnmuteActorBody$ {
  /** @deprecated use `AppBskyGraphUnmuteActorBody$inboundSchema` instead. */
  export const inboundSchema = AppBskyGraphUnmuteActorBody$inboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteActorBody$outboundSchema` instead. */
  export const outboundSchema = AppBskyGraphUnmuteActorBody$outboundSchema;
  /** @deprecated use `AppBskyGraphUnmuteActorBody$Outbound` instead. */
  export type Outbound = AppBskyGraphUnmuteActorBody$Outbound;
}

export function appBskyGraphUnmuteActorBodyToJSON(
  appBskyGraphUnmuteActorBody: AppBskyGraphUnmuteActorBody,
): string {
  return JSON.stringify(
    AppBskyGraphUnmuteActorBody$outboundSchema.parse(
      appBskyGraphUnmuteActorBody,
    ),
  );
}

export function appBskyGraphUnmuteActorBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyGraphUnmuteActorBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyGraphUnmuteActorBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyGraphUnmuteActorBody' from JSON`,
  );
}
