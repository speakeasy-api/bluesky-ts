/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerDeleteAccountRequestBody = {
  did: string;
  password: string;
  token: string;
};

/** @internal */
export const ComAtprotoServerDeleteAccountRequestBody$inboundSchema: z.ZodType<
  ComAtprotoServerDeleteAccountRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  password: z.string(),
  token: z.string(),
});

/** @internal */
export type ComAtprotoServerDeleteAccountRequestBody$Outbound = {
  did: string;
  password: string;
  token: string;
};

/** @internal */
export const ComAtprotoServerDeleteAccountRequestBody$outboundSchema: z.ZodType<
  ComAtprotoServerDeleteAccountRequestBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerDeleteAccountRequestBody
> = z.object({
  did: z.string(),
  password: z.string(),
  token: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeleteAccountRequestBody$ {
  /** @deprecated use `ComAtprotoServerDeleteAccountRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeleteAccountRequestBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteAccountRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeleteAccountRequestBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerDeleteAccountRequestBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerDeleteAccountRequestBody$Outbound;
}

export function comAtprotoServerDeleteAccountRequestBodyToJSON(
  comAtprotoServerDeleteAccountRequestBody:
    ComAtprotoServerDeleteAccountRequestBody,
): string {
  return JSON.stringify(
    ComAtprotoServerDeleteAccountRequestBody$outboundSchema.parse(
      comAtprotoServerDeleteAccountRequestBody,
    ),
  );
}

export function comAtprotoServerDeleteAccountRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerDeleteAccountRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerDeleteAccountRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerDeleteAccountRequestBody' from JSON`,
  );
}
