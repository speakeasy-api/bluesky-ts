/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerDeactivateAccountBody = {
  /**
   * A recommendation to server as to how long they should hold onto the deactivated account before deleting.
   */
  deleteAfter?: Date | undefined;
};

/** @internal */
export const ComAtprotoServerDeactivateAccountBody$inboundSchema: z.ZodType<
  ComAtprotoServerDeactivateAccountBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  deleteAfter: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type ComAtprotoServerDeactivateAccountBody$Outbound = {
  deleteAfter?: string | undefined;
};

/** @internal */
export const ComAtprotoServerDeactivateAccountBody$outboundSchema: z.ZodType<
  ComAtprotoServerDeactivateAccountBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerDeactivateAccountBody
> = z.object({
  deleteAfter: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeactivateAccountBody$ {
  /** @deprecated use `ComAtprotoServerDeactivateAccountBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeactivateAccountBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeactivateAccountBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerDeactivateAccountBody$Outbound;
}

export function comAtprotoServerDeactivateAccountBodyToJSON(
  comAtprotoServerDeactivateAccountBody: ComAtprotoServerDeactivateAccountBody,
): string {
  return JSON.stringify(
    ComAtprotoServerDeactivateAccountBody$outboundSchema.parse(
      comAtprotoServerDeactivateAccountBody,
    ),
  );
}

export function comAtprotoServerDeactivateAccountBodyFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoServerDeactivateAccountBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerDeactivateAccountBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoServerDeactivateAccountBody' from JSON`,
  );
}
