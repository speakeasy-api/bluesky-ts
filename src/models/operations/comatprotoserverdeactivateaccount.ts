/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerDeactivateAccountRequestBody = {
  /**
   * A recommendation to server as to how long they should hold onto the deactivated account before deleting.
   */
  deleteAfter?: Date | undefined;
};

/** @internal */
export const ComAtprotoServerDeactivateAccountRequestBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerDeactivateAccountRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    deleteAfter: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ).optional(),
  });

/** @internal */
export type ComAtprotoServerDeactivateAccountRequestBody$Outbound = {
  deleteAfter?: string | undefined;
};

/** @internal */
export const ComAtprotoServerDeactivateAccountRequestBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerDeactivateAccountRequestBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerDeactivateAccountRequestBody
  > = z.object({
    deleteAfter: z.date().transform(v => v.toISOString()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerDeactivateAccountRequestBody$ {
  /** @deprecated use `ComAtprotoServerDeactivateAccountRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerDeactivateAccountRequestBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerDeactivateAccountRequestBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerDeactivateAccountRequestBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerDeactivateAccountRequestBody$Outbound;
}

export function comAtprotoServerDeactivateAccountRequestBodyToJSON(
  comAtprotoServerDeactivateAccountRequestBody:
    ComAtprotoServerDeactivateAccountRequestBody,
): string {
  return JSON.stringify(
    ComAtprotoServerDeactivateAccountRequestBody$outboundSchema.parse(
      comAtprotoServerDeactivateAccountRequestBody,
    ),
  );
}

export function comAtprotoServerDeactivateAccountRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerDeactivateAccountRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerDeactivateAccountRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerDeactivateAccountRequestBody' from JSON`,
  );
}
