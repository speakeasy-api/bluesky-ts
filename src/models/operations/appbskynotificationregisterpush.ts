/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const Platform = {
  Ios: "ios",
  Android: "android",
  Web: "web",
} as const;
export type Platform = ClosedEnum<typeof Platform>;

export type AppBskyNotificationRegisterPushRequestBody = {
  serviceDid: string;
  token: string;
  platform: Platform;
  appId: string;
};

/** @internal */
export const Platform$inboundSchema: z.ZodNativeEnum<typeof Platform> = z
  .nativeEnum(Platform);

/** @internal */
export const Platform$outboundSchema: z.ZodNativeEnum<typeof Platform> =
  Platform$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Platform$ {
  /** @deprecated use `Platform$inboundSchema` instead. */
  export const inboundSchema = Platform$inboundSchema;
  /** @deprecated use `Platform$outboundSchema` instead. */
  export const outboundSchema = Platform$outboundSchema;
}

/** @internal */
export const AppBskyNotificationRegisterPushRequestBody$inboundSchema:
  z.ZodType<AppBskyNotificationRegisterPushRequestBody, z.ZodTypeDef, unknown> =
    z.object({
      serviceDid: z.string(),
      token: z.string(),
      platform: Platform$inboundSchema,
      appId: z.string(),
    });

/** @internal */
export type AppBskyNotificationRegisterPushRequestBody$Outbound = {
  serviceDid: string;
  token: string;
  platform: string;
  appId: string;
};

/** @internal */
export const AppBskyNotificationRegisterPushRequestBody$outboundSchema:
  z.ZodType<
    AppBskyNotificationRegisterPushRequestBody$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationRegisterPushRequestBody
  > = z.object({
    serviceDid: z.string(),
    token: z.string(),
    platform: Platform$outboundSchema,
    appId: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationRegisterPushRequestBody$ {
  /** @deprecated use `AppBskyNotificationRegisterPushRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationRegisterPushRequestBody$inboundSchema;
  /** @deprecated use `AppBskyNotificationRegisterPushRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationRegisterPushRequestBody$outboundSchema;
  /** @deprecated use `AppBskyNotificationRegisterPushRequestBody$Outbound` instead. */
  export type Outbound = AppBskyNotificationRegisterPushRequestBody$Outbound;
}

export function appBskyNotificationRegisterPushRequestBodyToJSON(
  appBskyNotificationRegisterPushRequestBody:
    AppBskyNotificationRegisterPushRequestBody,
): string {
  return JSON.stringify(
    AppBskyNotificationRegisterPushRequestBody$outboundSchema.parse(
      appBskyNotificationRegisterPushRequestBody,
    ),
  );
}

export function appBskyNotificationRegisterPushRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  AppBskyNotificationRegisterPushRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyNotificationRegisterPushRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppBskyNotificationRegisterPushRequestBody' from JSON`,
  );
}
