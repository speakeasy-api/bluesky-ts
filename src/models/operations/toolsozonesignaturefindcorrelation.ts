/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSignatureFindCorrelationRequest = {
  dids: Array<string>;
};

/**
 * OK
 */
export type ToolsOzoneSignatureFindCorrelationResponse = {
  details: Array<components.ToolsOzoneSignatureDefsSigDetail>;
};

/** @internal */
export const ToolsOzoneSignatureFindCorrelationRequest$inboundSchema: z.ZodType<
  ToolsOzoneSignatureFindCorrelationRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  dids: z.array(z.string()),
});

/** @internal */
export type ToolsOzoneSignatureFindCorrelationRequest$Outbound = {
  dids: Array<string>;
};

/** @internal */
export const ToolsOzoneSignatureFindCorrelationRequest$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindCorrelationRequest$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureFindCorrelationRequest
  > = z.object({
    dids: z.array(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureFindCorrelationRequest$ {
  /** @deprecated use `ToolsOzoneSignatureFindCorrelationRequest$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureFindCorrelationRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindCorrelationRequest$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureFindCorrelationRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindCorrelationRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSignatureFindCorrelationRequest$Outbound;
}

export function toolsOzoneSignatureFindCorrelationRequestToJSON(
  toolsOzoneSignatureFindCorrelationRequest:
    ToolsOzoneSignatureFindCorrelationRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureFindCorrelationRequest$outboundSchema.parse(
      toolsOzoneSignatureFindCorrelationRequest,
    ),
  );
}

export function toolsOzoneSignatureFindCorrelationRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureFindCorrelationRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureFindCorrelationRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureFindCorrelationRequest' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSignatureFindCorrelationResponse$inboundSchema:
  z.ZodType<ToolsOzoneSignatureFindCorrelationResponse, z.ZodTypeDef, unknown> =
    z.object({
      details: z.array(
        components.ToolsOzoneSignatureDefsSigDetail$inboundSchema,
      ),
    });

/** @internal */
export type ToolsOzoneSignatureFindCorrelationResponse$Outbound = {
  details: Array<components.ToolsOzoneSignatureDefsSigDetail$Outbound>;
};

/** @internal */
export const ToolsOzoneSignatureFindCorrelationResponse$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindCorrelationResponse$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureFindCorrelationResponse
  > = z.object({
    details: z.array(
      components.ToolsOzoneSignatureDefsSigDetail$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureFindCorrelationResponse$ {
  /** @deprecated use `ToolsOzoneSignatureFindCorrelationResponse$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureFindCorrelationResponse$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindCorrelationResponse$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureFindCorrelationResponse$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindCorrelationResponse$Outbound` instead. */
  export type Outbound = ToolsOzoneSignatureFindCorrelationResponse$Outbound;
}

export function toolsOzoneSignatureFindCorrelationResponseToJSON(
  toolsOzoneSignatureFindCorrelationResponse:
    ToolsOzoneSignatureFindCorrelationResponse,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureFindCorrelationResponse$outboundSchema.parse(
      toolsOzoneSignatureFindCorrelationResponse,
    ),
  );
}

export function toolsOzoneSignatureFindCorrelationResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureFindCorrelationResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureFindCorrelationResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureFindCorrelationResponse' from JSON`,
  );
}
