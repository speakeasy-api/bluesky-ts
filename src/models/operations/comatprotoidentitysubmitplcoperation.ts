/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoIdentitySubmitPlcOperationBody = {
  operation?: any | undefined;
};

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationBody$inboundSchema: z.ZodType<
  ComAtprotoIdentitySubmitPlcOperationBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  operation: z.any().optional(),
});

/** @internal */
export type ComAtprotoIdentitySubmitPlcOperationBody$Outbound = {
  operation?: any | undefined;
};

/** @internal */
export const ComAtprotoIdentitySubmitPlcOperationBody$outboundSchema: z.ZodType<
  ComAtprotoIdentitySubmitPlcOperationBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoIdentitySubmitPlcOperationBody
> = z.object({
  operation: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentitySubmitPlcOperationBody$ {
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentitySubmitPlcOperationBody$inboundSchema;
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentitySubmitPlcOperationBody$outboundSchema;
  /** @deprecated use `ComAtprotoIdentitySubmitPlcOperationBody$Outbound` instead. */
  export type Outbound = ComAtprotoIdentitySubmitPlcOperationBody$Outbound;
}

export function comAtprotoIdentitySubmitPlcOperationBodyToJSON(
  comAtprotoIdentitySubmitPlcOperationBody:
    ComAtprotoIdentitySubmitPlcOperationBody,
): string {
  return JSON.stringify(
    ComAtprotoIdentitySubmitPlcOperationBody$outboundSchema.parse(
      comAtprotoIdentitySubmitPlcOperationBody,
    ),
  );
}

export function comAtprotoIdentitySubmitPlcOperationBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoIdentitySubmitPlcOperationBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoIdentitySubmitPlcOperationBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoIdentitySubmitPlcOperationBody' from JSON`,
  );
}
