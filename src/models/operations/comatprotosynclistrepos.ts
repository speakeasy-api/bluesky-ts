/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoSyncListReposRequest = {
  limit?: number | undefined;
  cursor?: string | undefined;
};

/**
 * OK
 */
export type ComAtprotoSyncListReposResponseBody = {
  cursor?: string | undefined;
  repos: Array<components.ComAtprotoSyncListReposRepo>;
};

/** @internal */
export const ComAtprotoSyncListReposRequest$inboundSchema: z.ZodType<
  ComAtprotoSyncListReposRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().int().default(500),
  cursor: z.string().optional(),
});

/** @internal */
export type ComAtprotoSyncListReposRequest$Outbound = {
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const ComAtprotoSyncListReposRequest$outboundSchema: z.ZodType<
  ComAtprotoSyncListReposRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncListReposRequest
> = z.object({
  limit: z.number().int().default(500),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposRequest$ {
  /** @deprecated use `ComAtprotoSyncListReposRequest$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncListReposRequest$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposRequest$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncListReposRequest$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposRequest$Outbound` instead. */
  export type Outbound = ComAtprotoSyncListReposRequest$Outbound;
}

export function comAtprotoSyncListReposRequestToJSON(
  comAtprotoSyncListReposRequest: ComAtprotoSyncListReposRequest,
): string {
  return JSON.stringify(
    ComAtprotoSyncListReposRequest$outboundSchema.parse(
      comAtprotoSyncListReposRequest,
    ),
  );
}

export function comAtprotoSyncListReposRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoSyncListReposRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoSyncListReposRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoSyncListReposRequest' from JSON`,
  );
}

/** @internal */
export const ComAtprotoSyncListReposResponseBody$inboundSchema: z.ZodType<
  ComAtprotoSyncListReposResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
  repos: z.array(components.ComAtprotoSyncListReposRepo$inboundSchema),
});

/** @internal */
export type ComAtprotoSyncListReposResponseBody$Outbound = {
  cursor?: string | undefined;
  repos: Array<components.ComAtprotoSyncListReposRepo$Outbound>;
};

/** @internal */
export const ComAtprotoSyncListReposResponseBody$outboundSchema: z.ZodType<
  ComAtprotoSyncListReposResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncListReposResponseBody
> = z.object({
  cursor: z.string().optional(),
  repos: z.array(components.ComAtprotoSyncListReposRepo$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncListReposResponseBody$ {
  /** @deprecated use `ComAtprotoSyncListReposResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncListReposResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncListReposResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncListReposResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncListReposResponseBody$Outbound;
}

export function comAtprotoSyncListReposResponseBodyToJSON(
  comAtprotoSyncListReposResponseBody: ComAtprotoSyncListReposResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoSyncListReposResponseBody$outboundSchema.parse(
      comAtprotoSyncListReposResponseBody,
    ),
  );
}

export function comAtprotoSyncListReposResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoSyncListReposResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoSyncListReposResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoSyncListReposResponseBody' from JSON`,
  );
}
