/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type ComAtprotoServerListAppPasswordsResponse = {
  passwords: Array<components.ComAtprotoServerListAppPasswordsAppPassword>;
};

/** @internal */
export const ComAtprotoServerListAppPasswordsResponse$inboundSchema: z.ZodType<
  ComAtprotoServerListAppPasswordsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  passwords: z.array(
    components.ComAtprotoServerListAppPasswordsAppPassword$inboundSchema,
  ),
});

/** @internal */
export type ComAtprotoServerListAppPasswordsResponse$Outbound = {
  passwords: Array<
    components.ComAtprotoServerListAppPasswordsAppPassword$Outbound
  >;
};

/** @internal */
export const ComAtprotoServerListAppPasswordsResponse$outboundSchema: z.ZodType<
  ComAtprotoServerListAppPasswordsResponse$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerListAppPasswordsResponse
> = z.object({
  passwords: z.array(
    components.ComAtprotoServerListAppPasswordsAppPassword$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsResponse$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponse$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsResponse$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsResponse$outboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponse$Outbound` instead. */
  export type Outbound = ComAtprotoServerListAppPasswordsResponse$Outbound;
}

export function comAtprotoServerListAppPasswordsResponseToJSON(
  comAtprotoServerListAppPasswordsResponse:
    ComAtprotoServerListAppPasswordsResponse,
): string {
  return JSON.stringify(
    ComAtprotoServerListAppPasswordsResponse$outboundSchema.parse(
      comAtprotoServerListAppPasswordsResponse,
    ),
  );
}

export function comAtprotoServerListAppPasswordsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerListAppPasswordsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerListAppPasswordsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerListAppPasswordsResponse' from JSON`,
  );
}
