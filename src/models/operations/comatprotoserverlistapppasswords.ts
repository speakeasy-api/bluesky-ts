/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type ComAtprotoServerListAppPasswordsResponseBody = {
  passwords: Array<components.ComAtprotoServerListAppPasswordsAppPassword>;
};

/** @internal */
export const ComAtprotoServerListAppPasswordsResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    passwords: z.array(
      components.ComAtprotoServerListAppPasswordsAppPassword$inboundSchema,
    ),
  });

/** @internal */
export type ComAtprotoServerListAppPasswordsResponseBody$Outbound = {
  passwords: Array<
    components.ComAtprotoServerListAppPasswordsAppPassword$Outbound
  >;
};

/** @internal */
export const ComAtprotoServerListAppPasswordsResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerListAppPasswordsResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerListAppPasswordsResponseBody
  > = z.object({
    passwords: z.array(
      components.ComAtprotoServerListAppPasswordsAppPassword$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerListAppPasswordsResponseBody$ {
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerListAppPasswordsResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerListAppPasswordsResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerListAppPasswordsResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerListAppPasswordsResponseBody$Outbound;
}

export function comAtprotoServerListAppPasswordsResponseBodyToJSON(
  comAtprotoServerListAppPasswordsResponseBody:
    ComAtprotoServerListAppPasswordsResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoServerListAppPasswordsResponseBody$outboundSchema.parse(
      comAtprotoServerListAppPasswordsResponseBody,
    ),
  );
}

export function comAtprotoServerListAppPasswordsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerListAppPasswordsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerListAppPasswordsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerListAppPasswordsResponseBody' from JSON`,
  );
}
