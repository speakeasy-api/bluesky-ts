/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoSyncGetBlobRequest = {
  /**
   * The DID of the account.
   */
  did: string;
  /**
   * The CID of the blob to fetch
   */
  cid: string;
};

/** @internal */
export const ComAtprotoSyncGetBlobRequest$inboundSchema: z.ZodType<
  ComAtprotoSyncGetBlobRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  cid: z.string(),
});

/** @internal */
export type ComAtprotoSyncGetBlobRequest$Outbound = {
  did: string;
  cid: string;
};

/** @internal */
export const ComAtprotoSyncGetBlobRequest$outboundSchema: z.ZodType<
  ComAtprotoSyncGetBlobRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetBlobRequest
> = z.object({
  did: z.string(),
  cid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetBlobRequest$ {
  /** @deprecated use `ComAtprotoSyncGetBlobRequest$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetBlobRequest$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlobRequest$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetBlobRequest$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetBlobRequest$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetBlobRequest$Outbound;
}

export function comAtprotoSyncGetBlobRequestToJSON(
  comAtprotoSyncGetBlobRequest: ComAtprotoSyncGetBlobRequest,
): string {
  return JSON.stringify(
    ComAtprotoSyncGetBlobRequest$outboundSchema.parse(
      comAtprotoSyncGetBlobRequest,
    ),
  );
}

export function comAtprotoSyncGetBlobRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoSyncGetBlobRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoSyncGetBlobRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoSyncGetBlobRequest' from JSON`,
  );
}
