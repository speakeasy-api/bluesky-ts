/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoSyncGetRepoStatusRequest = {
  /**
   * The DID of the repo.
   */
  did: string;
};

/**
 * If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.
 */
export const ComAtprotoSyncGetRepoStatusStatus = {
  Takendown: "takendown",
  Suspended: "suspended",
  Deactivated: "deactivated",
} as const;
/**
 * If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.
 */
export type ComAtprotoSyncGetRepoStatusStatus = ClosedEnum<
  typeof ComAtprotoSyncGetRepoStatusStatus
>;

/**
 * OK
 */
export type ComAtprotoSyncGetRepoStatusResponseBody = {
  did: string;
  active: boolean;
  /**
   * If active=false, this optional field indicates a possible reason for why the account is not active. If active=false and no status is supplied, then the host makes no claim for why the repository is no longer being hosted.
   */
  status?: ComAtprotoSyncGetRepoStatusStatus | undefined;
  /**
   * Optional field, the current rev of the repo, if active=true
   */
  rev?: string | undefined;
};

/** @internal */
export const ComAtprotoSyncGetRepoStatusRequest$inboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
});

/** @internal */
export type ComAtprotoSyncGetRepoStatusRequest$Outbound = {
  did: string;
};

/** @internal */
export const ComAtprotoSyncGetRepoStatusRequest$outboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoStatusRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetRepoStatusRequest
> = z.object({
  did: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoStatusRequest$ {
  /** @deprecated use `ComAtprotoSyncGetRepoStatusRequest$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRepoStatusRequest$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusRequest$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRepoStatusRequest$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusRequest$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRepoStatusRequest$Outbound;
}

export function comAtprotoSyncGetRepoStatusRequestToJSON(
  comAtprotoSyncGetRepoStatusRequest: ComAtprotoSyncGetRepoStatusRequest,
): string {
  return JSON.stringify(
    ComAtprotoSyncGetRepoStatusRequest$outboundSchema.parse(
      comAtprotoSyncGetRepoStatusRequest,
    ),
  );
}

export function comAtprotoSyncGetRepoStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoSyncGetRepoStatusRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoSyncGetRepoStatusRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoSyncGetRepoStatusRequest' from JSON`,
  );
}

/** @internal */
export const ComAtprotoSyncGetRepoStatusStatus$inboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoStatusStatus
> = z.nativeEnum(ComAtprotoSyncGetRepoStatusStatus);

/** @internal */
export const ComAtprotoSyncGetRepoStatusStatus$outboundSchema: z.ZodNativeEnum<
  typeof ComAtprotoSyncGetRepoStatusStatus
> = ComAtprotoSyncGetRepoStatusStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoStatusStatus$ {
  /** @deprecated use `ComAtprotoSyncGetRepoStatusStatus$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRepoStatusStatus$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusStatus$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRepoStatusStatus$outboundSchema;
}

/** @internal */
export const ComAtprotoSyncGetRepoStatusResponseBody$inboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoStatusResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  active: z.boolean(),
  status: ComAtprotoSyncGetRepoStatusStatus$inboundSchema.optional(),
  rev: z.string().optional(),
});

/** @internal */
export type ComAtprotoSyncGetRepoStatusResponseBody$Outbound = {
  did: string;
  active: boolean;
  status?: string | undefined;
  rev?: string | undefined;
};

/** @internal */
export const ComAtprotoSyncGetRepoStatusResponseBody$outboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoStatusResponseBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetRepoStatusResponseBody
> = z.object({
  did: z.string(),
  active: z.boolean(),
  status: ComAtprotoSyncGetRepoStatusStatus$outboundSchema.optional(),
  rev: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoStatusResponseBody$ {
  /** @deprecated use `ComAtprotoSyncGetRepoStatusResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoSyncGetRepoStatusResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncGetRepoStatusResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoStatusResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRepoStatusResponseBody$Outbound;
}

export function comAtprotoSyncGetRepoStatusResponseBodyToJSON(
  comAtprotoSyncGetRepoStatusResponseBody:
    ComAtprotoSyncGetRepoStatusResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoSyncGetRepoStatusResponseBody$outboundSchema.parse(
      comAtprotoSyncGetRepoStatusResponseBody,
    ),
  );
}

export function comAtprotoSyncGetRepoStatusResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoSyncGetRepoStatusResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoSyncGetRepoStatusResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoSyncGetRepoStatusResponseBody' from JSON`,
  );
}
