/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneModerationGetEventRequest = {
  id: number;
};

/** @internal */
export const ToolsOzoneModerationGetEventRequest$inboundSchema: z.ZodType<
  ToolsOzoneModerationGetEventRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type ToolsOzoneModerationGetEventRequest$Outbound = {
  id: number;
};

/** @internal */
export const ToolsOzoneModerationGetEventRequest$outboundSchema: z.ZodType<
  ToolsOzoneModerationGetEventRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationGetEventRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationGetEventRequest$ {
  /** @deprecated use `ToolsOzoneModerationGetEventRequest$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationGetEventRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetEventRequest$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationGetEventRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationGetEventRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationGetEventRequest$Outbound;
}

export function toolsOzoneModerationGetEventRequestToJSON(
  toolsOzoneModerationGetEventRequest: ToolsOzoneModerationGetEventRequest,
): string {
  return JSON.stringify(
    ToolsOzoneModerationGetEventRequest$outboundSchema.parse(
      toolsOzoneModerationGetEventRequest,
    ),
  );
}

export function toolsOzoneModerationGetEventRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneModerationGetEventRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationGetEventRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneModerationGetEventRequest' from JSON`,
  );
}
