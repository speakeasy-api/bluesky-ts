/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoSendMessageBody = {
  convoId: string;
  message: components.ChatBskyConvoDefsMessageInput;
};

/** @internal */
export const ChatBskyConvoSendMessageBody$inboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  convoId: z.string(),
  message: components.ChatBskyConvoDefsMessageInput$inboundSchema,
});

/** @internal */
export type ChatBskyConvoSendMessageBody$Outbound = {
  convoId: string;
  message: components.ChatBskyConvoDefsMessageInput$Outbound;
};

/** @internal */
export const ChatBskyConvoSendMessageBody$outboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoSendMessageBody
> = z.object({
  convoId: z.string(),
  message: components.ChatBskyConvoDefsMessageInput$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBody$ {
  /** @deprecated use `ChatBskyConvoSendMessageBody$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoSendMessageBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBody$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoSendMessageBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageBody$Outbound;
}

export function chatBskyConvoSendMessageBodyToJSON(
  chatBskyConvoSendMessageBody: ChatBskyConvoSendMessageBody,
): string {
  return JSON.stringify(
    ChatBskyConvoSendMessageBody$outboundSchema.parse(
      chatBskyConvoSendMessageBody,
    ),
  );
}

export function chatBskyConvoSendMessageBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoSendMessageBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoSendMessageBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoSendMessageBody' from JSON`,
  );
}
