/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoSendMessageRequest = {
  convoId: string;
  message: components.ChatBskyConvoDefsMessageInput;
};

/** @internal */
export const ChatBskyConvoSendMessageRequest$inboundSchema: z.ZodType<
  ChatBskyConvoSendMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  convoId: z.string(),
  message: components.ChatBskyConvoDefsMessageInput$inboundSchema,
});

/** @internal */
export type ChatBskyConvoSendMessageRequest$Outbound = {
  convoId: string;
  message: components.ChatBskyConvoDefsMessageInput$Outbound;
};

/** @internal */
export const ChatBskyConvoSendMessageRequest$outboundSchema: z.ZodType<
  ChatBskyConvoSendMessageRequest$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoSendMessageRequest
> = z.object({
  convoId: z.string(),
  message: components.ChatBskyConvoDefsMessageInput$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageRequest$ {
  /** @deprecated use `ChatBskyConvoSendMessageRequest$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoSendMessageRequest$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageRequest$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoSendMessageRequest$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageRequest$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageRequest$Outbound;
}

export function chatBskyConvoSendMessageRequestToJSON(
  chatBskyConvoSendMessageRequest: ChatBskyConvoSendMessageRequest,
): string {
  return JSON.stringify(
    ChatBskyConvoSendMessageRequest$outboundSchema.parse(
      chatBskyConvoSendMessageRequest,
    ),
  );
}

export function chatBskyConvoSendMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoSendMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoSendMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoSendMessageRequest' from JSON`,
  );
}
