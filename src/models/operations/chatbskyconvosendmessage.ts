/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoSendMessageRequestBody = {
  convoId: string;
  message: components.ChatBskyConvoDefsMessageInput;
};

/** @internal */
export const ChatBskyConvoSendMessageRequestBody$inboundSchema: z.ZodType<
  ChatBskyConvoSendMessageRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  convoId: z.string(),
  message: components.ChatBskyConvoDefsMessageInput$inboundSchema,
});

/** @internal */
export type ChatBskyConvoSendMessageRequestBody$Outbound = {
  convoId: string;
  message: components.ChatBskyConvoDefsMessageInput$Outbound;
};

/** @internal */
export const ChatBskyConvoSendMessageRequestBody$outboundSchema: z.ZodType<
  ChatBskyConvoSendMessageRequestBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoSendMessageRequestBody
> = z.object({
  convoId: z.string(),
  message: components.ChatBskyConvoDefsMessageInput$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageRequestBody$ {
  /** @deprecated use `ChatBskyConvoSendMessageRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoSendMessageRequestBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageRequestBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageRequestBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageRequestBody$Outbound;
}

export function chatBskyConvoSendMessageRequestBodyToJSON(
  chatBskyConvoSendMessageRequestBody: ChatBskyConvoSendMessageRequestBody,
): string {
  return JSON.stringify(
    ChatBskyConvoSendMessageRequestBody$outboundSchema.parse(
      chatBskyConvoSendMessageRequestBody,
    ),
  );
}

export function chatBskyConvoSendMessageRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoSendMessageRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoSendMessageRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoSendMessageRequestBody' from JSON`,
  );
}
