/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSetGetValuesRequest = {
  name: string;
  limit?: number | undefined;
  cursor?: string | undefined;
};

/**
 * OK
 */
export type ToolsOzoneSetGetValuesResponseBody = {
  set: components.ToolsOzoneSetDefsSetView;
  values: Array<string>;
  cursor?: string | undefined;
};

/** @internal */
export const ToolsOzoneSetGetValuesRequest$inboundSchema: z.ZodType<
  ToolsOzoneSetGetValuesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  limit: z.number().int().default(100),
  cursor: z.string().optional(),
});

/** @internal */
export type ToolsOzoneSetGetValuesRequest$Outbound = {
  name: string;
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const ToolsOzoneSetGetValuesRequest$outboundSchema: z.ZodType<
  ToolsOzoneSetGetValuesRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetGetValuesRequest
> = z.object({
  name: z.string(),
  limit: z.number().int().default(100),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetGetValuesRequest$ {
  /** @deprecated use `ToolsOzoneSetGetValuesRequest$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetGetValuesRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesRequest$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetGetValuesRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSetGetValuesRequest$Outbound;
}

export function toolsOzoneSetGetValuesRequestToJSON(
  toolsOzoneSetGetValuesRequest: ToolsOzoneSetGetValuesRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSetGetValuesRequest$outboundSchema.parse(
      toolsOzoneSetGetValuesRequest,
    ),
  );
}

export function toolsOzoneSetGetValuesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetGetValuesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetGetValuesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetGetValuesRequest' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSetGetValuesResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneSetGetValuesResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  set: components.ToolsOzoneSetDefsSetView$inboundSchema,
  values: z.array(z.string()),
  cursor: z.string().optional(),
});

/** @internal */
export type ToolsOzoneSetGetValuesResponseBody$Outbound = {
  set: components.ToolsOzoneSetDefsSetView$Outbound;
  values: Array<string>;
  cursor?: string | undefined;
};

/** @internal */
export const ToolsOzoneSetGetValuesResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneSetGetValuesResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetGetValuesResponseBody
> = z.object({
  set: components.ToolsOzoneSetDefsSetView$outboundSchema,
  values: z.array(z.string()),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetGetValuesResponseBody$ {
  /** @deprecated use `ToolsOzoneSetGetValuesResponseBody$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetGetValuesResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetGetValuesResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetGetValuesResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSetGetValuesResponseBody$Outbound;
}

export function toolsOzoneSetGetValuesResponseBodyToJSON(
  toolsOzoneSetGetValuesResponseBody: ToolsOzoneSetGetValuesResponseBody,
): string {
  return JSON.stringify(
    ToolsOzoneSetGetValuesResponseBody$outboundSchema.parse(
      toolsOzoneSetGetValuesResponseBody,
    ),
  );
}

export function toolsOzoneSetGetValuesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetGetValuesResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSetGetValuesResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetGetValuesResponseBody' from JSON`,
  );
}
