/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoSendMessageBatchBody = {
  items: Array<components.ChatBskyConvoSendMessageBatchBatchItem>;
};

/**
 * OK
 */
export type ChatBskyConvoSendMessageBatchResponseBody = {
  items: Array<components.ChatBskyConvoDefsMessageView>;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchBody$inboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBatchBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(
    components.ChatBskyConvoSendMessageBatchBatchItem$inboundSchema,
  ),
});

/** @internal */
export type ChatBskyConvoSendMessageBatchBody$Outbound = {
  items: Array<components.ChatBskyConvoSendMessageBatchBatchItem$Outbound>;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchBody$outboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBatchBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoSendMessageBatchBody
> = z.object({
  items: z.array(
    components.ChatBskyConvoSendMessageBatchBatchItem$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBatchBody$ {
  /** @deprecated use `ChatBskyConvoSendMessageBatchBody$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoSendMessageBatchBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageBatchBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageBatchBody$Outbound;
}

export function chatBskyConvoSendMessageBatchBodyToJSON(
  chatBskyConvoSendMessageBatchBody: ChatBskyConvoSendMessageBatchBody,
): string {
  return JSON.stringify(
    ChatBskyConvoSendMessageBatchBody$outboundSchema.parse(
      chatBskyConvoSendMessageBatchBody,
    ),
  );
}

export function chatBskyConvoSendMessageBatchBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoSendMessageBatchBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoSendMessageBatchBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoSendMessageBatchBody' from JSON`,
  );
}

/** @internal */
export const ChatBskyConvoSendMessageBatchResponseBody$inboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBatchResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(components.ChatBskyConvoDefsMessageView$inboundSchema),
});

/** @internal */
export type ChatBskyConvoSendMessageBatchResponseBody$Outbound = {
  items: Array<components.ChatBskyConvoDefsMessageView$Outbound>;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchResponseBody$outboundSchema:
  z.ZodType<
    ChatBskyConvoSendMessageBatchResponseBody$Outbound,
    z.ZodTypeDef,
    ChatBskyConvoSendMessageBatchResponseBody
  > = z.object({
    items: z.array(components.ChatBskyConvoDefsMessageView$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBatchResponseBody$ {
  /** @deprecated use `ChatBskyConvoSendMessageBatchResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoSendMessageBatchResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageBatchResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageBatchResponseBody$Outbound;
}

export function chatBskyConvoSendMessageBatchResponseBodyToJSON(
  chatBskyConvoSendMessageBatchResponseBody:
    ChatBskyConvoSendMessageBatchResponseBody,
): string {
  return JSON.stringify(
    ChatBskyConvoSendMessageBatchResponseBody$outboundSchema.parse(
      chatBskyConvoSendMessageBatchResponseBody,
    ),
  );
}

export function chatBskyConvoSendMessageBatchResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatBskyConvoSendMessageBatchResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoSendMessageBatchResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatBskyConvoSendMessageBatchResponseBody' from JSON`,
  );
}
