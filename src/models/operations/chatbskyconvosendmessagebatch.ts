/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoSendMessageBatchRequest = {
  items: Array<components.ChatBskyConvoSendMessageBatchBatchItem>;
};

/**
 * OK
 */
export type ChatBskyConvoSendMessageBatchResponse = {
  items: Array<components.ChatBskyConvoDefsMessageView>;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchRequest$inboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBatchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(
    components.ChatBskyConvoSendMessageBatchBatchItem$inboundSchema,
  ),
});

/** @internal */
export type ChatBskyConvoSendMessageBatchRequest$Outbound = {
  items: Array<components.ChatBskyConvoSendMessageBatchBatchItem$Outbound>;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchRequest$outboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBatchRequest$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoSendMessageBatchRequest
> = z.object({
  items: z.array(
    components.ChatBskyConvoSendMessageBatchBatchItem$outboundSchema,
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBatchRequest$ {
  /** @deprecated use `ChatBskyConvoSendMessageBatchRequest$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoSendMessageBatchRequest$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchRequest$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageBatchRequest$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchRequest$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageBatchRequest$Outbound;
}

export function chatBskyConvoSendMessageBatchRequestToJSON(
  chatBskyConvoSendMessageBatchRequest: ChatBskyConvoSendMessageBatchRequest,
): string {
  return JSON.stringify(
    ChatBskyConvoSendMessageBatchRequest$outboundSchema.parse(
      chatBskyConvoSendMessageBatchRequest,
    ),
  );
}

export function chatBskyConvoSendMessageBatchRequestFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoSendMessageBatchRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoSendMessageBatchRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoSendMessageBatchRequest' from JSON`,
  );
}

/** @internal */
export const ChatBskyConvoSendMessageBatchResponse$inboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBatchResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(components.ChatBskyConvoDefsMessageView$inboundSchema),
});

/** @internal */
export type ChatBskyConvoSendMessageBatchResponse$Outbound = {
  items: Array<components.ChatBskyConvoDefsMessageView$Outbound>;
};

/** @internal */
export const ChatBskyConvoSendMessageBatchResponse$outboundSchema: z.ZodType<
  ChatBskyConvoSendMessageBatchResponse$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoSendMessageBatchResponse
> = z.object({
  items: z.array(components.ChatBskyConvoDefsMessageView$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoSendMessageBatchResponse$ {
  /** @deprecated use `ChatBskyConvoSendMessageBatchResponse$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoSendMessageBatchResponse$inboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchResponse$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoSendMessageBatchResponse$outboundSchema;
  /** @deprecated use `ChatBskyConvoSendMessageBatchResponse$Outbound` instead. */
  export type Outbound = ChatBskyConvoSendMessageBatchResponse$Outbound;
}

export function chatBskyConvoSendMessageBatchResponseToJSON(
  chatBskyConvoSendMessageBatchResponse: ChatBskyConvoSendMessageBatchResponse,
): string {
  return JSON.stringify(
    ChatBskyConvoSendMessageBatchResponse$outboundSchema.parse(
      chatBskyConvoSendMessageBatchResponse,
    ),
  );
}

export function chatBskyConvoSendMessageBatchResponseFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoSendMessageBatchResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoSendMessageBatchResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoSendMessageBatchResponse' from JSON`,
  );
}
