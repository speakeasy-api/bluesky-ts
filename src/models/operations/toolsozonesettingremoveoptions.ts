/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const Scope = {
  Instance: "instance",
  Personal: "personal",
} as const;
export type Scope = ClosedEnum<typeof Scope>;

export type ToolsOzoneSettingRemoveOptionsRequestBody = {
  keys: Array<string>;
  scope: Scope;
};

/**
 * OK
 */
export type ToolsOzoneSettingRemoveOptionsResponseBody = {};

/** @internal */
export const Scope$inboundSchema: z.ZodNativeEnum<typeof Scope> = z.nativeEnum(
  Scope,
);

/** @internal */
export const Scope$outboundSchema: z.ZodNativeEnum<typeof Scope> =
  Scope$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Scope$ {
  /** @deprecated use `Scope$inboundSchema` instead. */
  export const inboundSchema = Scope$inboundSchema;
  /** @deprecated use `Scope$outboundSchema` instead. */
  export const outboundSchema = Scope$outboundSchema;
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsRequestBody$inboundSchema: z.ZodType<
  ToolsOzoneSettingRemoveOptionsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  keys: z.array(z.string()),
  scope: Scope$inboundSchema,
});

/** @internal */
export type ToolsOzoneSettingRemoveOptionsRequestBody$Outbound = {
  keys: Array<string>;
  scope: string;
};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsRequestBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSettingRemoveOptionsRequestBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSettingRemoveOptionsRequestBody
  > = z.object({
    keys: z.array(z.string()),
    scope: Scope$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsRequestBody$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsRequestBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsRequestBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsRequestBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSettingRemoveOptionsRequestBody$Outbound;
}

export function toolsOzoneSettingRemoveOptionsRequestBodyToJSON(
  toolsOzoneSettingRemoveOptionsRequestBody:
    ToolsOzoneSettingRemoveOptionsRequestBody,
): string {
  return JSON.stringify(
    ToolsOzoneSettingRemoveOptionsRequestBody$outboundSchema.parse(
      toolsOzoneSettingRemoveOptionsRequestBody,
    ),
  );
}

export function toolsOzoneSettingRemoveOptionsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSettingRemoveOptionsRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSettingRemoveOptionsRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSettingRemoveOptionsRequestBody' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema:
  z.ZodType<ToolsOzoneSettingRemoveOptionsResponseBody, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type ToolsOzoneSettingRemoveOptionsResponseBody$Outbound = {};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSettingRemoveOptionsResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSettingRemoveOptionsResponseBody
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsResponseBody$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSettingRemoveOptionsResponseBody$Outbound;
}

export function toolsOzoneSettingRemoveOptionsResponseBodyToJSON(
  toolsOzoneSettingRemoveOptionsResponseBody:
    ToolsOzoneSettingRemoveOptionsResponseBody,
): string {
  return JSON.stringify(
    ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema.parse(
      toolsOzoneSettingRemoveOptionsResponseBody,
    ),
  );
}

export function toolsOzoneSettingRemoveOptionsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSettingRemoveOptionsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSettingRemoveOptionsResponseBody' from JSON`,
  );
}
