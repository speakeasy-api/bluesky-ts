/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ToolsOzoneSettingRemoveOptionsScope = {
  Instance: "instance",
  Personal: "personal",
} as const;
export type ToolsOzoneSettingRemoveOptionsScope = ClosedEnum<
  typeof ToolsOzoneSettingRemoveOptionsScope
>;

export type ToolsOzoneSettingRemoveOptionsBody = {
  keys: Array<string>;
  scope: ToolsOzoneSettingRemoveOptionsScope;
};

/**
 * OK
 */
export type ToolsOzoneSettingRemoveOptionsResponseBody = {};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsScope$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSettingRemoveOptionsScope
> = z.nativeEnum(ToolsOzoneSettingRemoveOptionsScope);

/** @internal */
export const ToolsOzoneSettingRemoveOptionsScope$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneSettingRemoveOptionsScope> =
    ToolsOzoneSettingRemoveOptionsScope$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsScope$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsScope$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsScope$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsScope$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsScope$outboundSchema;
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsBody$inboundSchema: z.ZodType<
  ToolsOzoneSettingRemoveOptionsBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  keys: z.array(z.string()),
  scope: ToolsOzoneSettingRemoveOptionsScope$inboundSchema,
});

/** @internal */
export type ToolsOzoneSettingRemoveOptionsBody$Outbound = {
  keys: Array<string>;
  scope: string;
};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsBody$outboundSchema: z.ZodType<
  ToolsOzoneSettingRemoveOptionsBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSettingRemoveOptionsBody
> = z.object({
  keys: z.array(z.string()),
  scope: ToolsOzoneSettingRemoveOptionsScope$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsBody$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsBody$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSettingRemoveOptionsBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSettingRemoveOptionsBody$Outbound;
}

export function toolsOzoneSettingRemoveOptionsBodyToJSON(
  toolsOzoneSettingRemoveOptionsBody: ToolsOzoneSettingRemoveOptionsBody,
): string {
  return JSON.stringify(
    ToolsOzoneSettingRemoveOptionsBody$outboundSchema.parse(
      toolsOzoneSettingRemoveOptionsBody,
    ),
  );
}

export function toolsOzoneSettingRemoveOptionsBodyFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSettingRemoveOptionsBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSettingRemoveOptionsBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSettingRemoveOptionsBody' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema:
  z.ZodType<ToolsOzoneSettingRemoveOptionsResponseBody, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type ToolsOzoneSettingRemoveOptionsResponseBody$Outbound = {};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSettingRemoveOptionsResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSettingRemoveOptionsResponseBody
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsResponseBody$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSettingRemoveOptionsResponseBody$Outbound;
}

export function toolsOzoneSettingRemoveOptionsResponseBodyToJSON(
  toolsOzoneSettingRemoveOptionsResponseBody:
    ToolsOzoneSettingRemoveOptionsResponseBody,
): string {
  return JSON.stringify(
    ToolsOzoneSettingRemoveOptionsResponseBody$outboundSchema.parse(
      toolsOzoneSettingRemoveOptionsResponseBody,
    ),
  );
}

export function toolsOzoneSettingRemoveOptionsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSettingRemoveOptionsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSettingRemoveOptionsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSettingRemoveOptionsResponseBody' from JSON`,
  );
}
