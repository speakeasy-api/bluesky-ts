/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ToolsOzoneSettingRemoveOptionsScope = {
  Instance: "instance",
  Personal: "personal",
} as const;
export type ToolsOzoneSettingRemoveOptionsScope = ClosedEnum<
  typeof ToolsOzoneSettingRemoveOptionsScope
>;

export type ToolsOzoneSettingRemoveOptionsRequest = {
  keys: Array<string>;
  scope: ToolsOzoneSettingRemoveOptionsScope;
};

/**
 * OK
 */
export type ToolsOzoneSettingRemoveOptionsResponse = {};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsScope$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneSettingRemoveOptionsScope
> = z.nativeEnum(ToolsOzoneSettingRemoveOptionsScope);

/** @internal */
export const ToolsOzoneSettingRemoveOptionsScope$outboundSchema:
  z.ZodNativeEnum<typeof ToolsOzoneSettingRemoveOptionsScope> =
    ToolsOzoneSettingRemoveOptionsScope$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsScope$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsScope$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsScope$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsScope$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsScope$outboundSchema;
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsRequest$inboundSchema: z.ZodType<
  ToolsOzoneSettingRemoveOptionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  keys: z.array(z.string()),
  scope: ToolsOzoneSettingRemoveOptionsScope$inboundSchema,
});

/** @internal */
export type ToolsOzoneSettingRemoveOptionsRequest$Outbound = {
  keys: Array<string>;
  scope: string;
};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsRequest$outboundSchema: z.ZodType<
  ToolsOzoneSettingRemoveOptionsRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSettingRemoveOptionsRequest
> = z.object({
  keys: z.array(z.string()),
  scope: ToolsOzoneSettingRemoveOptionsScope$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsRequest$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsRequest$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSettingRemoveOptionsRequest$Outbound;
}

export function toolsOzoneSettingRemoveOptionsRequestToJSON(
  toolsOzoneSettingRemoveOptionsRequest: ToolsOzoneSettingRemoveOptionsRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSettingRemoveOptionsRequest$outboundSchema.parse(
      toolsOzoneSettingRemoveOptionsRequest,
    ),
  );
}

export function toolsOzoneSettingRemoveOptionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSettingRemoveOptionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSettingRemoveOptionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSettingRemoveOptionsRequest' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponse$inboundSchema: z.ZodType<
  ToolsOzoneSettingRemoveOptionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ToolsOzoneSettingRemoveOptionsResponse$Outbound = {};

/** @internal */
export const ToolsOzoneSettingRemoveOptionsResponse$outboundSchema: z.ZodType<
  ToolsOzoneSettingRemoveOptionsResponse$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSettingRemoveOptionsResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSettingRemoveOptionsResponse$ {
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponse$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSettingRemoveOptionsResponse$inboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSettingRemoveOptionsResponse$outboundSchema;
  /** @deprecated use `ToolsOzoneSettingRemoveOptionsResponse$Outbound` instead. */
  export type Outbound = ToolsOzoneSettingRemoveOptionsResponse$Outbound;
}

export function toolsOzoneSettingRemoveOptionsResponseToJSON(
  toolsOzoneSettingRemoveOptionsResponse:
    ToolsOzoneSettingRemoveOptionsResponse,
): string {
  return JSON.stringify(
    ToolsOzoneSettingRemoveOptionsResponse$outboundSchema.parse(
      toolsOzoneSettingRemoveOptionsResponse,
    ),
  );
}

export function toolsOzoneSettingRemoveOptionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSettingRemoveOptionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSettingRemoveOptionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSettingRemoveOptionsResponse' from JSON`,
  );
}
