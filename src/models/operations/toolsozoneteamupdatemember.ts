/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ToolsOzoneTeamUpdateMemberRole = {
  ToolsOzoneTeamDefsNumberRoleAdmin: "tools.ozone.team.defs#roleAdmin",
  ToolsOzoneTeamDefsNumberRoleModerator: "tools.ozone.team.defs#roleModerator",
  ToolsOzoneTeamDefsNumberRoleTriage: "tools.ozone.team.defs#roleTriage",
} as const;
export type ToolsOzoneTeamUpdateMemberRole = ClosedEnum<
  typeof ToolsOzoneTeamUpdateMemberRole
>;

export type ToolsOzoneTeamUpdateMemberRequest = {
  did: string;
  disabled?: boolean | undefined;
  role?: ToolsOzoneTeamUpdateMemberRole | undefined;
};

/** @internal */
export const ToolsOzoneTeamUpdateMemberRole$inboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberRole
> = z.nativeEnum(ToolsOzoneTeamUpdateMemberRole);

/** @internal */
export const ToolsOzoneTeamUpdateMemberRole$outboundSchema: z.ZodNativeEnum<
  typeof ToolsOzoneTeamUpdateMemberRole
> = ToolsOzoneTeamUpdateMemberRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberRole$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberRole$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamUpdateMemberRole$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberRole$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneTeamUpdateMemberRole$outboundSchema;
}

/** @internal */
export const ToolsOzoneTeamUpdateMemberRequest$inboundSchema: z.ZodType<
  ToolsOzoneTeamUpdateMemberRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  disabled: z.boolean().optional(),
  role: ToolsOzoneTeamUpdateMemberRole$inboundSchema.optional(),
});

/** @internal */
export type ToolsOzoneTeamUpdateMemberRequest$Outbound = {
  did: string;
  disabled?: boolean | undefined;
  role?: string | undefined;
};

/** @internal */
export const ToolsOzoneTeamUpdateMemberRequest$outboundSchema: z.ZodType<
  ToolsOzoneTeamUpdateMemberRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneTeamUpdateMemberRequest
> = z.object({
  did: z.string(),
  disabled: z.boolean().optional(),
  role: ToolsOzoneTeamUpdateMemberRole$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneTeamUpdateMemberRequest$ {
  /** @deprecated use `ToolsOzoneTeamUpdateMemberRequest$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneTeamUpdateMemberRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberRequest$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneTeamUpdateMemberRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneTeamUpdateMemberRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneTeamUpdateMemberRequest$Outbound;
}

export function toolsOzoneTeamUpdateMemberRequestToJSON(
  toolsOzoneTeamUpdateMemberRequest: ToolsOzoneTeamUpdateMemberRequest,
): string {
  return JSON.stringify(
    ToolsOzoneTeamUpdateMemberRequest$outboundSchema.parse(
      toolsOzoneTeamUpdateMemberRequest,
    ),
  );
}

export function toolsOzoneTeamUpdateMemberRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneTeamUpdateMemberRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneTeamUpdateMemberRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneTeamUpdateMemberRequest' from JSON`,
  );
}
