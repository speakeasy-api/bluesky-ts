/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerCreateAppPasswordRequest = {
  /**
   * A short name for the App Password, to help distinguish them.
   */
  name: string;
  /**
   * If an app password has 'privileged' access to possibly sensitive account state. Meant for use with trusted clients.
   */
  privileged?: boolean | undefined;
};

/** @internal */
export const ComAtprotoServerCreateAppPasswordRequest$inboundSchema: z.ZodType<
  ComAtprotoServerCreateAppPasswordRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  privileged: z.boolean().optional(),
});

/** @internal */
export type ComAtprotoServerCreateAppPasswordRequest$Outbound = {
  name: string;
  privileged?: boolean | undefined;
};

/** @internal */
export const ComAtprotoServerCreateAppPasswordRequest$outboundSchema: z.ZodType<
  ComAtprotoServerCreateAppPasswordRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerCreateAppPasswordRequest
> = z.object({
  name: z.string(),
  privileged: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateAppPasswordRequest$ {
  /** @deprecated use `ComAtprotoServerCreateAppPasswordRequest$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateAppPasswordRequest$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordRequest$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateAppPasswordRequest$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateAppPasswordRequest$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateAppPasswordRequest$Outbound;
}

export function comAtprotoServerCreateAppPasswordRequestToJSON(
  comAtprotoServerCreateAppPasswordRequest:
    ComAtprotoServerCreateAppPasswordRequest,
): string {
  return JSON.stringify(
    ComAtprotoServerCreateAppPasswordRequest$outboundSchema.parse(
      comAtprotoServerCreateAppPasswordRequest,
    ),
  );
}

export function comAtprotoServerCreateAppPasswordRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerCreateAppPasswordRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerCreateAppPasswordRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerCreateAppPasswordRequest' from JSON`,
  );
}
