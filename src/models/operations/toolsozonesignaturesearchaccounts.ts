/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSignatureSearchAccountsRequest = {
  values: Array<string>;
  cursor?: string | undefined;
  limit?: number | undefined;
};

/**
 * OK
 */
export type ToolsOzoneSignatureSearchAccountsResponseBody = {
  cursor?: string | undefined;
  accounts: Array<components.ComAtprotoAdminDefsAccountView>;
};

/** @internal */
export const ToolsOzoneSignatureSearchAccountsRequest$inboundSchema: z.ZodType<
  ToolsOzoneSignatureSearchAccountsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  values: z.array(z.string()),
  cursor: z.string().optional(),
  limit: z.number().int().default(50),
});

/** @internal */
export type ToolsOzoneSignatureSearchAccountsRequest$Outbound = {
  values: Array<string>;
  cursor?: string | undefined;
  limit: number;
};

/** @internal */
export const ToolsOzoneSignatureSearchAccountsRequest$outboundSchema: z.ZodType<
  ToolsOzoneSignatureSearchAccountsRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSignatureSearchAccountsRequest
> = z.object({
  values: z.array(z.string()),
  cursor: z.string().optional(),
  limit: z.number().int().default(50),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureSearchAccountsRequest$ {
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsRequest$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureSearchAccountsRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsRequest$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureSearchAccountsRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSignatureSearchAccountsRequest$Outbound;
}

export function toolsOzoneSignatureSearchAccountsRequestToJSON(
  toolsOzoneSignatureSearchAccountsRequest:
    ToolsOzoneSignatureSearchAccountsRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureSearchAccountsRequest$outboundSchema.parse(
      toolsOzoneSignatureSearchAccountsRequest,
    ),
  );
}

export function toolsOzoneSignatureSearchAccountsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureSearchAccountsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureSearchAccountsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureSearchAccountsRequest' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSignatureSearchAccountsResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneSignatureSearchAccountsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cursor: z.string().optional(),
    accounts: z.array(components.ComAtprotoAdminDefsAccountView$inboundSchema),
  });

/** @internal */
export type ToolsOzoneSignatureSearchAccountsResponseBody$Outbound = {
  cursor?: string | undefined;
  accounts: Array<components.ComAtprotoAdminDefsAccountView$Outbound>;
};

/** @internal */
export const ToolsOzoneSignatureSearchAccountsResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureSearchAccountsResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureSearchAccountsResponseBody
  > = z.object({
    cursor: z.string().optional(),
    accounts: z.array(components.ComAtprotoAdminDefsAccountView$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureSearchAccountsResponseBody$ {
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureSearchAccountsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureSearchAccountsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureSearchAccountsResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSignatureSearchAccountsResponseBody$Outbound;
}

export function toolsOzoneSignatureSearchAccountsResponseBodyToJSON(
  toolsOzoneSignatureSearchAccountsResponseBody:
    ToolsOzoneSignatureSearchAccountsResponseBody,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureSearchAccountsResponseBody$outboundSchema.parse(
      toolsOzoneSignatureSearchAccountsResponseBody,
    ),
  );
}

export function toolsOzoneSignatureSearchAccountsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureSearchAccountsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureSearchAccountsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureSearchAccountsResponseBody' from JSON`,
  );
}
