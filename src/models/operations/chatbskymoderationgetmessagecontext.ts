/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyModerationGetMessageContextRequest = {
  /**
   * Conversation that the message is from. NOTE: this field will eventually be required.
   */
  convoId?: string | undefined;
  messageId: string;
  before?: number | undefined;
  after?: number | undefined;
};

export type ChatBskyModerationGetMessageContextMessage =
  | components.ChatBskyConvoDefsMessageView
  | components.ChatBskyConvoDefsDeletedMessageView;

/**
 * OK
 */
export type ChatBskyModerationGetMessageContextResponse = {
  messages: Array<
    | components.ChatBskyConvoDefsMessageView
    | components.ChatBskyConvoDefsDeletedMessageView
  >;
};

/** @internal */
export const ChatBskyModerationGetMessageContextRequest$inboundSchema:
  z.ZodType<ChatBskyModerationGetMessageContextRequest, z.ZodTypeDef, unknown> =
    z.object({
      convoId: z.string().optional(),
      messageId: z.string(),
      before: z.number().int().default(5),
      after: z.number().int().default(5),
    });

/** @internal */
export type ChatBskyModerationGetMessageContextRequest$Outbound = {
  convoId?: string | undefined;
  messageId: string;
  before: number;
  after: number;
};

/** @internal */
export const ChatBskyModerationGetMessageContextRequest$outboundSchema:
  z.ZodType<
    ChatBskyModerationGetMessageContextRequest$Outbound,
    z.ZodTypeDef,
    ChatBskyModerationGetMessageContextRequest
  > = z.object({
    convoId: z.string().optional(),
    messageId: z.string(),
    before: z.number().int().default(5),
    after: z.number().int().default(5),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationGetMessageContextRequest$ {
  /** @deprecated use `ChatBskyModerationGetMessageContextRequest$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationGetMessageContextRequest$inboundSchema;
  /** @deprecated use `ChatBskyModerationGetMessageContextRequest$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationGetMessageContextRequest$outboundSchema;
  /** @deprecated use `ChatBskyModerationGetMessageContextRequest$Outbound` instead. */
  export type Outbound = ChatBskyModerationGetMessageContextRequest$Outbound;
}

export function chatBskyModerationGetMessageContextRequestToJSON(
  chatBskyModerationGetMessageContextRequest:
    ChatBskyModerationGetMessageContextRequest,
): string {
  return JSON.stringify(
    ChatBskyModerationGetMessageContextRequest$outboundSchema.parse(
      chatBskyModerationGetMessageContextRequest,
    ),
  );
}

export function chatBskyModerationGetMessageContextRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatBskyModerationGetMessageContextRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyModerationGetMessageContextRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatBskyModerationGetMessageContextRequest' from JSON`,
  );
}

/** @internal */
export const ChatBskyModerationGetMessageContextMessage$inboundSchema:
  z.ZodType<ChatBskyModerationGetMessageContextMessage, z.ZodTypeDef, unknown> =
    z.union([
      components.ChatBskyConvoDefsMessageView$inboundSchema,
      components.ChatBskyConvoDefsDeletedMessageView$inboundSchema,
    ]);

/** @internal */
export type ChatBskyModerationGetMessageContextMessage$Outbound =
  | components.ChatBskyConvoDefsMessageView$Outbound
  | components.ChatBskyConvoDefsDeletedMessageView$Outbound;

/** @internal */
export const ChatBskyModerationGetMessageContextMessage$outboundSchema:
  z.ZodType<
    ChatBskyModerationGetMessageContextMessage$Outbound,
    z.ZodTypeDef,
    ChatBskyModerationGetMessageContextMessage
  > = z.union([
    components.ChatBskyConvoDefsMessageView$outboundSchema,
    components.ChatBskyConvoDefsDeletedMessageView$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationGetMessageContextMessage$ {
  /** @deprecated use `ChatBskyModerationGetMessageContextMessage$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationGetMessageContextMessage$inboundSchema;
  /** @deprecated use `ChatBskyModerationGetMessageContextMessage$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationGetMessageContextMessage$outboundSchema;
  /** @deprecated use `ChatBskyModerationGetMessageContextMessage$Outbound` instead. */
  export type Outbound = ChatBskyModerationGetMessageContextMessage$Outbound;
}

export function chatBskyModerationGetMessageContextMessageToJSON(
  chatBskyModerationGetMessageContextMessage:
    ChatBskyModerationGetMessageContextMessage,
): string {
  return JSON.stringify(
    ChatBskyModerationGetMessageContextMessage$outboundSchema.parse(
      chatBskyModerationGetMessageContextMessage,
    ),
  );
}

export function chatBskyModerationGetMessageContextMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatBskyModerationGetMessageContextMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyModerationGetMessageContextMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatBskyModerationGetMessageContextMessage' from JSON`,
  );
}

/** @internal */
export const ChatBskyModerationGetMessageContextResponse$inboundSchema:
  z.ZodType<
    ChatBskyModerationGetMessageContextResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    messages: z.array(
      z.union([
        components.ChatBskyConvoDefsMessageView$inboundSchema,
        components.ChatBskyConvoDefsDeletedMessageView$inboundSchema,
      ]),
    ),
  });

/** @internal */
export type ChatBskyModerationGetMessageContextResponse$Outbound = {
  messages: Array<
    | components.ChatBskyConvoDefsMessageView$Outbound
    | components.ChatBskyConvoDefsDeletedMessageView$Outbound
  >;
};

/** @internal */
export const ChatBskyModerationGetMessageContextResponse$outboundSchema:
  z.ZodType<
    ChatBskyModerationGetMessageContextResponse$Outbound,
    z.ZodTypeDef,
    ChatBskyModerationGetMessageContextResponse
  > = z.object({
    messages: z.array(
      z.union([
        components.ChatBskyConvoDefsMessageView$outboundSchema,
        components.ChatBskyConvoDefsDeletedMessageView$outboundSchema,
      ]),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationGetMessageContextResponse$ {
  /** @deprecated use `ChatBskyModerationGetMessageContextResponse$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationGetMessageContextResponse$inboundSchema;
  /** @deprecated use `ChatBskyModerationGetMessageContextResponse$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationGetMessageContextResponse$outboundSchema;
  /** @deprecated use `ChatBskyModerationGetMessageContextResponse$Outbound` instead. */
  export type Outbound = ChatBskyModerationGetMessageContextResponse$Outbound;
}

export function chatBskyModerationGetMessageContextResponseToJSON(
  chatBskyModerationGetMessageContextResponse:
    ChatBskyModerationGetMessageContextResponse,
): string {
  return JSON.stringify(
    ChatBskyModerationGetMessageContextResponse$outboundSchema.parse(
      chatBskyModerationGetMessageContextResponse,
    ),
  );
}

export function chatBskyModerationGetMessageContextResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatBskyModerationGetMessageContextResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyModerationGetMessageContextResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatBskyModerationGetMessageContextResponse' from JSON`,
  );
}
