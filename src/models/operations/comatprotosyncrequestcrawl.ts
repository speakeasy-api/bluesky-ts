/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoSyncRequestCrawlRequest = {
  /**
   * Hostname of the current service (eg, PDS) that is requesting to be crawled.
   */
  hostname: string;
};

/** @internal */
export const ComAtprotoSyncRequestCrawlRequest$inboundSchema: z.ZodType<
  ComAtprotoSyncRequestCrawlRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  hostname: z.string(),
});

/** @internal */
export type ComAtprotoSyncRequestCrawlRequest$Outbound = {
  hostname: string;
};

/** @internal */
export const ComAtprotoSyncRequestCrawlRequest$outboundSchema: z.ZodType<
  ComAtprotoSyncRequestCrawlRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncRequestCrawlRequest
> = z.object({
  hostname: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncRequestCrawlRequest$ {
  /** @deprecated use `ComAtprotoSyncRequestCrawlRequest$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncRequestCrawlRequest$inboundSchema;
  /** @deprecated use `ComAtprotoSyncRequestCrawlRequest$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoSyncRequestCrawlRequest$outboundSchema;
  /** @deprecated use `ComAtprotoSyncRequestCrawlRequest$Outbound` instead. */
  export type Outbound = ComAtprotoSyncRequestCrawlRequest$Outbound;
}

export function comAtprotoSyncRequestCrawlRequestToJSON(
  comAtprotoSyncRequestCrawlRequest: ComAtprotoSyncRequestCrawlRequest,
): string {
  return JSON.stringify(
    ComAtprotoSyncRequestCrawlRequest$outboundSchema.parse(
      comAtprotoSyncRequestCrawlRequest,
    ),
  );
}

export function comAtprotoSyncRequestCrawlRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoSyncRequestCrawlRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoSyncRequestCrawlRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoSyncRequestCrawlRequest' from JSON`,
  );
}
