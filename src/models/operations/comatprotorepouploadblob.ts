/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as b64$ from "../../lib/base64.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type ComAtprotoRepoUploadBlobResponse = {
  blob: Uint8Array | string;
};

/** @internal */
export const ComAtprotoRepoUploadBlobResponse$inboundSchema: z.ZodType<
  ComAtprotoRepoUploadBlobResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  blob: b64$.zodInbound,
});

/** @internal */
export type ComAtprotoRepoUploadBlobResponse$Outbound = {
  blob: Uint8Array;
};

/** @internal */
export const ComAtprotoRepoUploadBlobResponse$outboundSchema: z.ZodType<
  ComAtprotoRepoUploadBlobResponse$Outbound,
  z.ZodTypeDef,
  ComAtprotoRepoUploadBlobResponse
> = z.object({
  blob: b64$.zodOutbound,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoRepoUploadBlobResponse$ {
  /** @deprecated use `ComAtprotoRepoUploadBlobResponse$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoRepoUploadBlobResponse$inboundSchema;
  /** @deprecated use `ComAtprotoRepoUploadBlobResponse$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoRepoUploadBlobResponse$outboundSchema;
  /** @deprecated use `ComAtprotoRepoUploadBlobResponse$Outbound` instead. */
  export type Outbound = ComAtprotoRepoUploadBlobResponse$Outbound;
}

export function comAtprotoRepoUploadBlobResponseToJSON(
  comAtprotoRepoUploadBlobResponse: ComAtprotoRepoUploadBlobResponse,
): string {
  return JSON.stringify(
    ComAtprotoRepoUploadBlobResponse$outboundSchema.parse(
      comAtprotoRepoUploadBlobResponse,
    ),
  );
}

export function comAtprotoRepoUploadBlobResponseFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoRepoUploadBlobResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoRepoUploadBlobResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoRepoUploadBlobResponse' from JSON`,
  );
}
