/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerUpdateEmailRequestBody = {
  email: string;
  emailAuthFactor?: boolean | undefined;
  /**
   * Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed.
   */
  token?: string | undefined;
};

/** @internal */
export const ComAtprotoServerUpdateEmailRequestBody$inboundSchema: z.ZodType<
  ComAtprotoServerUpdateEmailRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  emailAuthFactor: z.boolean().optional(),
  token: z.string().optional(),
});

/** @internal */
export type ComAtprotoServerUpdateEmailRequestBody$Outbound = {
  email: string;
  emailAuthFactor?: boolean | undefined;
  token?: string | undefined;
};

/** @internal */
export const ComAtprotoServerUpdateEmailRequestBody$outboundSchema: z.ZodType<
  ComAtprotoServerUpdateEmailRequestBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerUpdateEmailRequestBody
> = z.object({
  email: z.string(),
  emailAuthFactor: z.boolean().optional(),
  token: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerUpdateEmailRequestBody$ {
  /** @deprecated use `ComAtprotoServerUpdateEmailRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerUpdateEmailRequestBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerUpdateEmailRequestBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerUpdateEmailRequestBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerUpdateEmailRequestBody$Outbound;
}

export function comAtprotoServerUpdateEmailRequestBodyToJSON(
  comAtprotoServerUpdateEmailRequestBody:
    ComAtprotoServerUpdateEmailRequestBody,
): string {
  return JSON.stringify(
    ComAtprotoServerUpdateEmailRequestBody$outboundSchema.parse(
      comAtprotoServerUpdateEmailRequestBody,
    ),
  );
}

export function comAtprotoServerUpdateEmailRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoServerUpdateEmailRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerUpdateEmailRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoServerUpdateEmailRequestBody' from JSON`,
  );
}
