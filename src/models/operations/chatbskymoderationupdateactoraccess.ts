/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyModerationUpdateActorAccessRequestBody = {
  actor: string;
  allowAccess: boolean;
  ref?: string | undefined;
};

/** @internal */
export const ChatBskyModerationUpdateActorAccessRequestBody$inboundSchema:
  z.ZodType<
    ChatBskyModerationUpdateActorAccessRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    actor: z.string(),
    allowAccess: z.boolean(),
    ref: z.string().optional(),
  });

/** @internal */
export type ChatBskyModerationUpdateActorAccessRequestBody$Outbound = {
  actor: string;
  allowAccess: boolean;
  ref?: string | undefined;
};

/** @internal */
export const ChatBskyModerationUpdateActorAccessRequestBody$outboundSchema:
  z.ZodType<
    ChatBskyModerationUpdateActorAccessRequestBody$Outbound,
    z.ZodTypeDef,
    ChatBskyModerationUpdateActorAccessRequestBody
  > = z.object({
    actor: z.string(),
    allowAccess: z.boolean(),
    ref: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationUpdateActorAccessRequestBody$ {
  /** @deprecated use `ChatBskyModerationUpdateActorAccessRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationUpdateActorAccessRequestBody$inboundSchema;
  /** @deprecated use `ChatBskyModerationUpdateActorAccessRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationUpdateActorAccessRequestBody$outboundSchema;
  /** @deprecated use `ChatBskyModerationUpdateActorAccessRequestBody$Outbound` instead. */
  export type Outbound =
    ChatBskyModerationUpdateActorAccessRequestBody$Outbound;
}

export function chatBskyModerationUpdateActorAccessRequestBodyToJSON(
  chatBskyModerationUpdateActorAccessRequestBody:
    ChatBskyModerationUpdateActorAccessRequestBody,
): string {
  return JSON.stringify(
    ChatBskyModerationUpdateActorAccessRequestBody$outboundSchema.parse(
      chatBskyModerationUpdateActorAccessRequestBody,
    ),
  );
}

export function chatBskyModerationUpdateActorAccessRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatBskyModerationUpdateActorAccessRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyModerationUpdateActorAccessRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatBskyModerationUpdateActorAccessRequestBody' from JSON`,
  );
}
