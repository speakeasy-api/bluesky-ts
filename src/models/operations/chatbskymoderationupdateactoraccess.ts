/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyModerationUpdateActorAccessRequest = {
  actor: string;
  allowAccess: boolean;
  ref?: string | undefined;
};

/** @internal */
export const ChatBskyModerationUpdateActorAccessRequest$inboundSchema:
  z.ZodType<ChatBskyModerationUpdateActorAccessRequest, z.ZodTypeDef, unknown> =
    z.object({
      actor: z.string(),
      allowAccess: z.boolean(),
      ref: z.string().optional(),
    });

/** @internal */
export type ChatBskyModerationUpdateActorAccessRequest$Outbound = {
  actor: string;
  allowAccess: boolean;
  ref?: string | undefined;
};

/** @internal */
export const ChatBskyModerationUpdateActorAccessRequest$outboundSchema:
  z.ZodType<
    ChatBskyModerationUpdateActorAccessRequest$Outbound,
    z.ZodTypeDef,
    ChatBskyModerationUpdateActorAccessRequest
  > = z.object({
    actor: z.string(),
    allowAccess: z.boolean(),
    ref: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyModerationUpdateActorAccessRequest$ {
  /** @deprecated use `ChatBskyModerationUpdateActorAccessRequest$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyModerationUpdateActorAccessRequest$inboundSchema;
  /** @deprecated use `ChatBskyModerationUpdateActorAccessRequest$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyModerationUpdateActorAccessRequest$outboundSchema;
  /** @deprecated use `ChatBskyModerationUpdateActorAccessRequest$Outbound` instead. */
  export type Outbound = ChatBskyModerationUpdateActorAccessRequest$Outbound;
}

export function chatBskyModerationUpdateActorAccessRequestToJSON(
  chatBskyModerationUpdateActorAccessRequest:
    ChatBskyModerationUpdateActorAccessRequest,
): string {
  return JSON.stringify(
    ChatBskyModerationUpdateActorAccessRequest$outboundSchema.parse(
      chatBskyModerationUpdateActorAccessRequest,
    ),
  );
}

export function chatBskyModerationUpdateActorAccessRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatBskyModerationUpdateActorAccessRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyModerationUpdateActorAccessRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatBskyModerationUpdateActorAccessRequest' from JSON`,
  );
}
