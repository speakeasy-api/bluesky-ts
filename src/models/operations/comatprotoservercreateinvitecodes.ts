/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerCreateInviteCodesRequestBody = {
  codeCount?: number | undefined;
  useCount: number;
  forAccounts?: Array<string> | undefined;
};

/**
 * OK
 */
export type ComAtprotoServerCreateInviteCodesResponseBody = {
  codes: Array<components.ComAtprotoServerCreateInviteCodesAccountCodes>;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesRequestBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    codeCount: z.number().int().default(1),
    useCount: z.number().int(),
    forAccounts: z.array(z.string()).optional(),
  });

/** @internal */
export type ComAtprotoServerCreateInviteCodesRequestBody$Outbound = {
  codeCount: number;
  useCount: number;
  forAccounts?: Array<string> | undefined;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesRequestBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesRequestBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodesRequestBody
  > = z.object({
    codeCount: z.number().int().default(1),
    useCount: z.number().int(),
    forAccounts: z.array(z.string()).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesRequestBody$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesRequestBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesRequestBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesRequestBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateInviteCodesRequestBody$Outbound;
}

export function comAtprotoServerCreateInviteCodesRequestBodyToJSON(
  comAtprotoServerCreateInviteCodesRequestBody:
    ComAtprotoServerCreateInviteCodesRequestBody,
): string {
  return JSON.stringify(
    ComAtprotoServerCreateInviteCodesRequestBody$outboundSchema.parse(
      comAtprotoServerCreateInviteCodesRequestBody,
    ),
  );
}

export function comAtprotoServerCreateInviteCodesRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerCreateInviteCodesRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerCreateInviteCodesRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerCreateInviteCodesRequestBody' from JSON`,
  );
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    codes: z.array(
      components.ComAtprotoServerCreateInviteCodesAccountCodes$inboundSchema,
    ),
  });

/** @internal */
export type ComAtprotoServerCreateInviteCodesResponseBody$Outbound = {
  codes: Array<
    components.ComAtprotoServerCreateInviteCodesAccountCodes$Outbound
  >;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodesResponseBody
  > = z.object({
    codes: z.array(
      components.ComAtprotoServerCreateInviteCodesAccountCodes$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesResponseBody$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateInviteCodesResponseBody$Outbound;
}

export function comAtprotoServerCreateInviteCodesResponseBodyToJSON(
  comAtprotoServerCreateInviteCodesResponseBody:
    ComAtprotoServerCreateInviteCodesResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoServerCreateInviteCodesResponseBody$outboundSchema.parse(
      comAtprotoServerCreateInviteCodesResponseBody,
    ),
  );
}

export function comAtprotoServerCreateInviteCodesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerCreateInviteCodesResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerCreateInviteCodesResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerCreateInviteCodesResponseBody' from JSON`,
  );
}
