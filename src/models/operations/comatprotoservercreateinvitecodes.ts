/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerCreateInviteCodesRequest = {
  codeCount?: number | undefined;
  useCount: number;
  forAccounts?: Array<string> | undefined;
};

/**
 * OK
 */
export type ComAtprotoServerCreateInviteCodesResponse = {
  codes: Array<components.ComAtprotoServerCreateInviteCodesAccountCodes>;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesRequest$inboundSchema: z.ZodType<
  ComAtprotoServerCreateInviteCodesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  codeCount: z.number().int().default(1),
  useCount: z.number().int(),
  forAccounts: z.array(z.string()).optional(),
});

/** @internal */
export type ComAtprotoServerCreateInviteCodesRequest$Outbound = {
  codeCount: number;
  useCount: number;
  forAccounts?: Array<string> | undefined;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesRequest$outboundSchema: z.ZodType<
  ComAtprotoServerCreateInviteCodesRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerCreateInviteCodesRequest
> = z.object({
  codeCount: z.number().int().default(1),
  useCount: z.number().int(),
  forAccounts: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesRequest$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesRequest$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesRequest$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesRequest$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesRequest$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesRequest$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateInviteCodesRequest$Outbound;
}

export function comAtprotoServerCreateInviteCodesRequestToJSON(
  comAtprotoServerCreateInviteCodesRequest:
    ComAtprotoServerCreateInviteCodesRequest,
): string {
  return JSON.stringify(
    ComAtprotoServerCreateInviteCodesRequest$outboundSchema.parse(
      comAtprotoServerCreateInviteCodesRequest,
    ),
  );
}

export function comAtprotoServerCreateInviteCodesRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerCreateInviteCodesRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerCreateInviteCodesRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerCreateInviteCodesRequest' from JSON`,
  );
}

/** @internal */
export const ComAtprotoServerCreateInviteCodesResponse$inboundSchema: z.ZodType<
  ComAtprotoServerCreateInviteCodesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  codes: z.array(
    components.ComAtprotoServerCreateInviteCodesAccountCodes$inboundSchema,
  ),
});

/** @internal */
export type ComAtprotoServerCreateInviteCodesResponse$Outbound = {
  codes: Array<
    components.ComAtprotoServerCreateInviteCodesAccountCodes$Outbound
  >;
};

/** @internal */
export const ComAtprotoServerCreateInviteCodesResponse$outboundSchema:
  z.ZodType<
    ComAtprotoServerCreateInviteCodesResponse$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerCreateInviteCodesResponse
  > = z.object({
    codes: z.array(
      components.ComAtprotoServerCreateInviteCodesAccountCodes$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerCreateInviteCodesResponse$ {
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponse$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerCreateInviteCodesResponse$inboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponse$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerCreateInviteCodesResponse$outboundSchema;
  /** @deprecated use `ComAtprotoServerCreateInviteCodesResponse$Outbound` instead. */
  export type Outbound = ComAtprotoServerCreateInviteCodesResponse$Outbound;
}

export function comAtprotoServerCreateInviteCodesResponseToJSON(
  comAtprotoServerCreateInviteCodesResponse:
    ComAtprotoServerCreateInviteCodesResponse,
): string {
  return JSON.stringify(
    ComAtprotoServerCreateInviteCodesResponse$outboundSchema.parse(
      comAtprotoServerCreateInviteCodesResponse,
    ),
  );
}

export function comAtprotoServerCreateInviteCodesResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerCreateInviteCodesResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerCreateInviteCodesResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerCreateInviteCodesResponse' from JSON`,
  );
}
