/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Event =
  | components.ToolsOzoneModerationDefsModEventAcknowledge
  | components.ToolsOzoneModerationDefsModEventEscalate
  | components.ToolsOzoneModerationDefsModEventUnmute
  | components.ToolsOzoneModerationDefsModEventUnmuteReporter
  | components.ToolsOzoneModerationDefsModEventReverseTakedown
  | components.ToolsOzoneModerationDefsModEventResolveAppeal
  | components.ToolsOzoneModerationDefsModEventComment
  | components.ToolsOzoneModerationDefsModEventMute
  | components.ToolsOzoneModerationDefsModEventMuteReporter
  | components.ToolsOzoneModerationDefsModEventTakedown
  | components.ToolsOzoneModerationDefsModEventLabel
  | components.ToolsOzoneModerationDefsModEventReport
  | components.ToolsOzoneModerationDefsModEventEmail
  | components.ToolsOzoneModerationDefsModEventTag
  | components.ToolsOzoneModerationDefsAccountEvent
  | components.ToolsOzoneModerationDefsRecordEvent
  | components.ToolsOzoneModerationDefsIdentityEvent;

export type ToolsOzoneModerationEmitEventSubject =
  | components.ComAtprotoAdminDefsRepoRef
  | components.ComAtprotoRepoStrongRef;

export type ToolsOzoneModerationEmitEventRequestBody = {
  event:
    | components.ToolsOzoneModerationDefsModEventAcknowledge
    | components.ToolsOzoneModerationDefsModEventEscalate
    | components.ToolsOzoneModerationDefsModEventUnmute
    | components.ToolsOzoneModerationDefsModEventUnmuteReporter
    | components.ToolsOzoneModerationDefsModEventReverseTakedown
    | components.ToolsOzoneModerationDefsModEventResolveAppeal
    | components.ToolsOzoneModerationDefsModEventComment
    | components.ToolsOzoneModerationDefsModEventMute
    | components.ToolsOzoneModerationDefsModEventMuteReporter
    | components.ToolsOzoneModerationDefsModEventTakedown
    | components.ToolsOzoneModerationDefsModEventLabel
    | components.ToolsOzoneModerationDefsModEventReport
    | components.ToolsOzoneModerationDefsModEventEmail
    | components.ToolsOzoneModerationDefsModEventTag
    | components.ToolsOzoneModerationDefsAccountEvent
    | components.ToolsOzoneModerationDefsRecordEvent
    | components.ToolsOzoneModerationDefsIdentityEvent;
  subject:
    | components.ComAtprotoAdminDefsRepoRef
    | components.ComAtprotoRepoStrongRef;
  subjectBlobCids?: Array<string> | undefined;
  createdBy: string;
};

/** @internal */
export const Event$inboundSchema: z.ZodType<Event, z.ZodTypeDef, unknown> = z
  .union([
    components.ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
    components.ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
    components.ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
    components.ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
    components.ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
    components.ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
    components.ToolsOzoneModerationDefsModEventComment$inboundSchema,
    components.ToolsOzoneModerationDefsModEventMute$inboundSchema,
    components.ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
    components.ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
    components.ToolsOzoneModerationDefsModEventLabel$inboundSchema,
    components.ToolsOzoneModerationDefsModEventReport$inboundSchema,
    components.ToolsOzoneModerationDefsModEventEmail$inboundSchema,
    components.ToolsOzoneModerationDefsModEventTag$inboundSchema,
    components.ToolsOzoneModerationDefsAccountEvent$inboundSchema,
    components.ToolsOzoneModerationDefsRecordEvent$inboundSchema,
    components.ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
  ]);

/** @internal */
export type Event$Outbound =
  | components.ToolsOzoneModerationDefsModEventAcknowledge$Outbound
  | components.ToolsOzoneModerationDefsModEventEscalate$Outbound
  | components.ToolsOzoneModerationDefsModEventUnmute$Outbound
  | components.ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound
  | components.ToolsOzoneModerationDefsModEventReverseTakedown$Outbound
  | components.ToolsOzoneModerationDefsModEventResolveAppeal$Outbound
  | components.ToolsOzoneModerationDefsModEventComment$Outbound
  | components.ToolsOzoneModerationDefsModEventMute$Outbound
  | components.ToolsOzoneModerationDefsModEventMuteReporter$Outbound
  | components.ToolsOzoneModerationDefsModEventTakedown$Outbound
  | components.ToolsOzoneModerationDefsModEventLabel$Outbound
  | components.ToolsOzoneModerationDefsModEventReport$Outbound
  | components.ToolsOzoneModerationDefsModEventEmail$Outbound
  | components.ToolsOzoneModerationDefsModEventTag$Outbound
  | components.ToolsOzoneModerationDefsAccountEvent$Outbound
  | components.ToolsOzoneModerationDefsRecordEvent$Outbound
  | components.ToolsOzoneModerationDefsIdentityEvent$Outbound;

/** @internal */
export const Event$outboundSchema: z.ZodType<
  Event$Outbound,
  z.ZodTypeDef,
  Event
> = z.union([
  components.ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
  components.ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
  components.ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
  components.ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
  components.ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
  components.ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
  components.ToolsOzoneModerationDefsModEventComment$outboundSchema,
  components.ToolsOzoneModerationDefsModEventMute$outboundSchema,
  components.ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
  components.ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
  components.ToolsOzoneModerationDefsModEventLabel$outboundSchema,
  components.ToolsOzoneModerationDefsModEventReport$outboundSchema,
  components.ToolsOzoneModerationDefsModEventEmail$outboundSchema,
  components.ToolsOzoneModerationDefsModEventTag$outboundSchema,
  components.ToolsOzoneModerationDefsAccountEvent$outboundSchema,
  components.ToolsOzoneModerationDefsRecordEvent$outboundSchema,
  components.ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Event$ {
  /** @deprecated use `Event$inboundSchema` instead. */
  export const inboundSchema = Event$inboundSchema;
  /** @deprecated use `Event$outboundSchema` instead. */
  export const outboundSchema = Event$outboundSchema;
  /** @deprecated use `Event$Outbound` instead. */
  export type Outbound = Event$Outbound;
}

export function eventToJSON(event: Event): string {
  return JSON.stringify(Event$outboundSchema.parse(event));
}

export function eventFromJSON(
  jsonString: string,
): SafeParseResult<Event, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Event$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Event' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneModerationEmitEventSubject$inboundSchema: z.ZodType<
  ToolsOzoneModerationEmitEventSubject,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ComAtprotoAdminDefsRepoRef$inboundSchema,
  components.ComAtprotoRepoStrongRef$inboundSchema,
]);

/** @internal */
export type ToolsOzoneModerationEmitEventSubject$Outbound =
  | components.ComAtprotoAdminDefsRepoRef$Outbound
  | components.ComAtprotoRepoStrongRef$Outbound;

/** @internal */
export const ToolsOzoneModerationEmitEventSubject$outboundSchema: z.ZodType<
  ToolsOzoneModerationEmitEventSubject$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationEmitEventSubject
> = z.union([
  components.ComAtprotoAdminDefsRepoRef$outboundSchema,
  components.ComAtprotoRepoStrongRef$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationEmitEventSubject$ {
  /** @deprecated use `ToolsOzoneModerationEmitEventSubject$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationEmitEventSubject$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventSubject$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationEmitEventSubject$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventSubject$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationEmitEventSubject$Outbound;
}

export function toolsOzoneModerationEmitEventSubjectToJSON(
  toolsOzoneModerationEmitEventSubject: ToolsOzoneModerationEmitEventSubject,
): string {
  return JSON.stringify(
    ToolsOzoneModerationEmitEventSubject$outboundSchema.parse(
      toolsOzoneModerationEmitEventSubject,
    ),
  );
}

export function toolsOzoneModerationEmitEventSubjectFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneModerationEmitEventSubject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationEmitEventSubject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneModerationEmitEventSubject' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneModerationEmitEventRequestBody$inboundSchema: z.ZodType<
  ToolsOzoneModerationEmitEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  event: z.union([
    components.ToolsOzoneModerationDefsModEventAcknowledge$inboundSchema,
    components.ToolsOzoneModerationDefsModEventEscalate$inboundSchema,
    components.ToolsOzoneModerationDefsModEventUnmute$inboundSchema,
    components.ToolsOzoneModerationDefsModEventUnmuteReporter$inboundSchema,
    components.ToolsOzoneModerationDefsModEventReverseTakedown$inboundSchema,
    components.ToolsOzoneModerationDefsModEventResolveAppeal$inboundSchema,
    components.ToolsOzoneModerationDefsModEventComment$inboundSchema,
    components.ToolsOzoneModerationDefsModEventMute$inboundSchema,
    components.ToolsOzoneModerationDefsModEventMuteReporter$inboundSchema,
    components.ToolsOzoneModerationDefsModEventTakedown$inboundSchema,
    components.ToolsOzoneModerationDefsModEventLabel$inboundSchema,
    components.ToolsOzoneModerationDefsModEventReport$inboundSchema,
    components.ToolsOzoneModerationDefsModEventEmail$inboundSchema,
    components.ToolsOzoneModerationDefsModEventTag$inboundSchema,
    components.ToolsOzoneModerationDefsAccountEvent$inboundSchema,
    components.ToolsOzoneModerationDefsRecordEvent$inboundSchema,
    components.ToolsOzoneModerationDefsIdentityEvent$inboundSchema,
  ]),
  subject: z.union([
    components.ComAtprotoAdminDefsRepoRef$inboundSchema,
    components.ComAtprotoRepoStrongRef$inboundSchema,
  ]),
  subjectBlobCids: z.array(z.string()).optional(),
  createdBy: z.string(),
});

/** @internal */
export type ToolsOzoneModerationEmitEventRequestBody$Outbound = {
  event:
    | components.ToolsOzoneModerationDefsModEventAcknowledge$Outbound
    | components.ToolsOzoneModerationDefsModEventEscalate$Outbound
    | components.ToolsOzoneModerationDefsModEventUnmute$Outbound
    | components.ToolsOzoneModerationDefsModEventUnmuteReporter$Outbound
    | components.ToolsOzoneModerationDefsModEventReverseTakedown$Outbound
    | components.ToolsOzoneModerationDefsModEventResolveAppeal$Outbound
    | components.ToolsOzoneModerationDefsModEventComment$Outbound
    | components.ToolsOzoneModerationDefsModEventMute$Outbound
    | components.ToolsOzoneModerationDefsModEventMuteReporter$Outbound
    | components.ToolsOzoneModerationDefsModEventTakedown$Outbound
    | components.ToolsOzoneModerationDefsModEventLabel$Outbound
    | components.ToolsOzoneModerationDefsModEventReport$Outbound
    | components.ToolsOzoneModerationDefsModEventEmail$Outbound
    | components.ToolsOzoneModerationDefsModEventTag$Outbound
    | components.ToolsOzoneModerationDefsAccountEvent$Outbound
    | components.ToolsOzoneModerationDefsRecordEvent$Outbound
    | components.ToolsOzoneModerationDefsIdentityEvent$Outbound;
  subject:
    | components.ComAtprotoAdminDefsRepoRef$Outbound
    | components.ComAtprotoRepoStrongRef$Outbound;
  subjectBlobCids?: Array<string> | undefined;
  createdBy: string;
};

/** @internal */
export const ToolsOzoneModerationEmitEventRequestBody$outboundSchema: z.ZodType<
  ToolsOzoneModerationEmitEventRequestBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneModerationEmitEventRequestBody
> = z.object({
  event: z.union([
    components.ToolsOzoneModerationDefsModEventAcknowledge$outboundSchema,
    components.ToolsOzoneModerationDefsModEventEscalate$outboundSchema,
    components.ToolsOzoneModerationDefsModEventUnmute$outboundSchema,
    components.ToolsOzoneModerationDefsModEventUnmuteReporter$outboundSchema,
    components.ToolsOzoneModerationDefsModEventReverseTakedown$outboundSchema,
    components.ToolsOzoneModerationDefsModEventResolveAppeal$outboundSchema,
    components.ToolsOzoneModerationDefsModEventComment$outboundSchema,
    components.ToolsOzoneModerationDefsModEventMute$outboundSchema,
    components.ToolsOzoneModerationDefsModEventMuteReporter$outboundSchema,
    components.ToolsOzoneModerationDefsModEventTakedown$outboundSchema,
    components.ToolsOzoneModerationDefsModEventLabel$outboundSchema,
    components.ToolsOzoneModerationDefsModEventReport$outboundSchema,
    components.ToolsOzoneModerationDefsModEventEmail$outboundSchema,
    components.ToolsOzoneModerationDefsModEventTag$outboundSchema,
    components.ToolsOzoneModerationDefsAccountEvent$outboundSchema,
    components.ToolsOzoneModerationDefsRecordEvent$outboundSchema,
    components.ToolsOzoneModerationDefsIdentityEvent$outboundSchema,
  ]),
  subject: z.union([
    components.ComAtprotoAdminDefsRepoRef$outboundSchema,
    components.ComAtprotoRepoStrongRef$outboundSchema,
  ]),
  subjectBlobCids: z.array(z.string()).optional(),
  createdBy: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneModerationEmitEventRequestBody$ {
  /** @deprecated use `ToolsOzoneModerationEmitEventRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneModerationEmitEventRequestBody$inboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneModerationEmitEventRequestBody$outboundSchema;
  /** @deprecated use `ToolsOzoneModerationEmitEventRequestBody$Outbound` instead. */
  export type Outbound = ToolsOzoneModerationEmitEventRequestBody$Outbound;
}

export function toolsOzoneModerationEmitEventRequestBodyToJSON(
  toolsOzoneModerationEmitEventRequestBody:
    ToolsOzoneModerationEmitEventRequestBody,
): string {
  return JSON.stringify(
    ToolsOzoneModerationEmitEventRequestBody$outboundSchema.parse(
      toolsOzoneModerationEmitEventRequestBody,
    ),
  );
}

export function toolsOzoneModerationEmitEventRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneModerationEmitEventRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneModerationEmitEventRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneModerationEmitEventRequestBody' from JSON`,
  );
}
