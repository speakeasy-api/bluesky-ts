/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerGetAccountInviteCodesRequest = {
  includeUsed?: boolean | undefined;
  /**
   * Controls whether any new 'earned' but not 'created' invites should be created.
   */
  createAvailable?: boolean | undefined;
};

/**
 * OK
 */
export type ComAtprotoServerGetAccountInviteCodesResponseBody = {
  codes: Array<components.ComAtprotoServerDefsInviteCode>;
};

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesRequest$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    includeUsed: z.boolean().default(true),
    createAvailable: z.boolean().default(true),
  });

/** @internal */
export type ComAtprotoServerGetAccountInviteCodesRequest$Outbound = {
  includeUsed: boolean;
  createAvailable: boolean;
};

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesRequest$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesRequest$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetAccountInviteCodesRequest
  > = z.object({
    includeUsed: z.boolean().default(true),
    createAvailable: z.boolean().default(true),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetAccountInviteCodesRequest$ {
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesRequest$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetAccountInviteCodesRequest$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesRequest$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetAccountInviteCodesRequest$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesRequest$Outbound` instead. */
  export type Outbound = ComAtprotoServerGetAccountInviteCodesRequest$Outbound;
}

export function comAtprotoServerGetAccountInviteCodesRequestToJSON(
  comAtprotoServerGetAccountInviteCodesRequest:
    ComAtprotoServerGetAccountInviteCodesRequest,
): string {
  return JSON.stringify(
    ComAtprotoServerGetAccountInviteCodesRequest$outboundSchema.parse(
      comAtprotoServerGetAccountInviteCodesRequest,
    ),
  );
}

export function comAtprotoServerGetAccountInviteCodesRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerGetAccountInviteCodesRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerGetAccountInviteCodesRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerGetAccountInviteCodesRequest' from JSON`,
  );
}

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    codes: z.array(components.ComAtprotoServerDefsInviteCode$inboundSchema),
  });

/** @internal */
export type ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound = {
  codes: Array<components.ComAtprotoServerDefsInviteCode$Outbound>;
};

/** @internal */
export const ComAtprotoServerGetAccountInviteCodesResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerGetAccountInviteCodesResponseBody
  > = z.object({
    codes: z.array(components.ComAtprotoServerDefsInviteCode$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerGetAccountInviteCodesResponseBody$ {
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerGetAccountInviteCodesResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerGetAccountInviteCodesResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound` instead. */
  export type Outbound =
    ComAtprotoServerGetAccountInviteCodesResponseBody$Outbound;
}

export function comAtprotoServerGetAccountInviteCodesResponseBodyToJSON(
  comAtprotoServerGetAccountInviteCodesResponseBody:
    ComAtprotoServerGetAccountInviteCodesResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoServerGetAccountInviteCodesResponseBody$outboundSchema.parse(
      comAtprotoServerGetAccountInviteCodesResponseBody,
    ),
  );
}

export function comAtprotoServerGetAccountInviteCodesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerGetAccountInviteCodesResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerGetAccountInviteCodesResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerGetAccountInviteCodesResponseBody' from JSON`,
  );
}
