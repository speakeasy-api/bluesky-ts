/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type ToolsOzoneCommunicationListTemplatesResponseBody = {
  communicationTemplates: Array<
    components.ToolsOzoneCommunicationDefsTemplateView
  >;
};

/** @internal */
export const ToolsOzoneCommunicationListTemplatesResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationListTemplatesResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    communicationTemplates: z.array(
      components.ToolsOzoneCommunicationDefsTemplateView$inboundSchema,
    ),
  });

/** @internal */
export type ToolsOzoneCommunicationListTemplatesResponseBody$Outbound = {
  communicationTemplates: Array<
    components.ToolsOzoneCommunicationDefsTemplateView$Outbound
  >;
};

/** @internal */
export const ToolsOzoneCommunicationListTemplatesResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationListTemplatesResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneCommunicationListTemplatesResponseBody
  > = z.object({
    communicationTemplates: z.array(
      components.ToolsOzoneCommunicationDefsTemplateView$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationListTemplatesResponseBody$ {
  /** @deprecated use `ToolsOzoneCommunicationListTemplatesResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationListTemplatesResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationListTemplatesResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationListTemplatesResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationListTemplatesResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneCommunicationListTemplatesResponseBody$Outbound;
}

export function toolsOzoneCommunicationListTemplatesResponseBodyToJSON(
  toolsOzoneCommunicationListTemplatesResponseBody:
    ToolsOzoneCommunicationListTemplatesResponseBody,
): string {
  return JSON.stringify(
    ToolsOzoneCommunicationListTemplatesResponseBody$outboundSchema.parse(
      toolsOzoneCommunicationListTemplatesResponseBody,
    ),
  );
}

export function toolsOzoneCommunicationListTemplatesResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneCommunicationListTemplatesResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneCommunicationListTemplatesResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneCommunicationListTemplatesResponseBody' from JSON`,
  );
}
