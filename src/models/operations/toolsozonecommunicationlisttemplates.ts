/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type ToolsOzoneCommunicationListTemplatesResponse = {
  communicationTemplates: Array<
    components.ToolsOzoneCommunicationDefsTemplateView
  >;
};

/** @internal */
export const ToolsOzoneCommunicationListTemplatesResponse$inboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationListTemplatesResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    communicationTemplates: z.array(
      components.ToolsOzoneCommunicationDefsTemplateView$inboundSchema,
    ),
  });

/** @internal */
export type ToolsOzoneCommunicationListTemplatesResponse$Outbound = {
  communicationTemplates: Array<
    components.ToolsOzoneCommunicationDefsTemplateView$Outbound
  >;
};

/** @internal */
export const ToolsOzoneCommunicationListTemplatesResponse$outboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationListTemplatesResponse$Outbound,
    z.ZodTypeDef,
    ToolsOzoneCommunicationListTemplatesResponse
  > = z.object({
    communicationTemplates: z.array(
      components.ToolsOzoneCommunicationDefsTemplateView$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationListTemplatesResponse$ {
  /** @deprecated use `ToolsOzoneCommunicationListTemplatesResponse$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationListTemplatesResponse$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationListTemplatesResponse$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationListTemplatesResponse$outboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationListTemplatesResponse$Outbound` instead. */
  export type Outbound = ToolsOzoneCommunicationListTemplatesResponse$Outbound;
}

export function toolsOzoneCommunicationListTemplatesResponseToJSON(
  toolsOzoneCommunicationListTemplatesResponse:
    ToolsOzoneCommunicationListTemplatesResponse,
): string {
  return JSON.stringify(
    ToolsOzoneCommunicationListTemplatesResponse$outboundSchema.parse(
      toolsOzoneCommunicationListTemplatesResponse,
    ),
  );
}

export function toolsOzoneCommunicationListTemplatesResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneCommunicationListTemplatesResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneCommunicationListTemplatesResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneCommunicationListTemplatesResponse' from JSON`,
  );
}
