/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyFeedGetActorFeedsRequest = {
  actor: string;
  limit?: number | undefined;
  cursor?: string | undefined;
};

/**
 * OK
 */
export type AppBskyFeedGetActorFeedsResponseBody = {
  cursor?: string | undefined;
  feeds: Array<components.AppBskyFeedDefsGeneratorView>;
};

/** @internal */
export const AppBskyFeedGetActorFeedsRequest$inboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  actor: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/** @internal */
export type AppBskyFeedGetActorFeedsRequest$Outbound = {
  actor: string;
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const AppBskyFeedGetActorFeedsRequest$outboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsRequest$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetActorFeedsRequest
> = z.object({
  actor: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorFeedsRequest$ {
  /** @deprecated use `AppBskyFeedGetActorFeedsRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetActorFeedsRequest$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsRequest$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetActorFeedsRequest$outboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsRequest$Outbound` instead. */
  export type Outbound = AppBskyFeedGetActorFeedsRequest$Outbound;
}

export function appBskyFeedGetActorFeedsRequestToJSON(
  appBskyFeedGetActorFeedsRequest: AppBskyFeedGetActorFeedsRequest,
): string {
  return JSON.stringify(
    AppBskyFeedGetActorFeedsRequest$outboundSchema.parse(
      appBskyFeedGetActorFeedsRequest,
    ),
  );
}

export function appBskyFeedGetActorFeedsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetActorFeedsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetActorFeedsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetActorFeedsRequest' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedGetActorFeedsResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
  feeds: z.array(components.AppBskyFeedDefsGeneratorView$inboundSchema),
});

/** @internal */
export type AppBskyFeedGetActorFeedsResponseBody$Outbound = {
  cursor?: string | undefined;
  feeds: Array<components.AppBskyFeedDefsGeneratorView$Outbound>;
};

/** @internal */
export const AppBskyFeedGetActorFeedsResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetActorFeedsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetActorFeedsResponseBody
> = z.object({
  cursor: z.string().optional(),
  feeds: z.array(components.AppBskyFeedDefsGeneratorView$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetActorFeedsResponseBody$ {
  /** @deprecated use `AppBskyFeedGetActorFeedsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetActorFeedsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetActorFeedsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetActorFeedsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetActorFeedsResponseBody$Outbound;
}

export function appBskyFeedGetActorFeedsResponseBodyToJSON(
  appBskyFeedGetActorFeedsResponseBody: AppBskyFeedGetActorFeedsResponseBody,
): string {
  return JSON.stringify(
    AppBskyFeedGetActorFeedsResponseBody$outboundSchema.parse(
      appBskyFeedGetActorFeedsResponseBody,
    ),
  );
}

export function appBskyFeedGetActorFeedsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetActorFeedsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyFeedGetActorFeedsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetActorFeedsResponseBody' from JSON`,
  );
}
