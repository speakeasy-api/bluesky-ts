/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoGetConvoForMembersRequest = {
  members: Array<string>;
};

/**
 * OK
 */
export type ChatBskyConvoGetConvoForMembersResponse = {
  convo: components.ChatBskyConvoDefsConvoView;
};

/** @internal */
export const ChatBskyConvoGetConvoForMembersRequest$inboundSchema: z.ZodType<
  ChatBskyConvoGetConvoForMembersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  members: z.array(z.string()),
});

/** @internal */
export type ChatBskyConvoGetConvoForMembersRequest$Outbound = {
  members: Array<string>;
};

/** @internal */
export const ChatBskyConvoGetConvoForMembersRequest$outboundSchema: z.ZodType<
  ChatBskyConvoGetConvoForMembersRequest$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoGetConvoForMembersRequest
> = z.object({
  members: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersRequest$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersRequest$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersRequest$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersRequest$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersRequest$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersRequest$Outbound` instead. */
  export type Outbound = ChatBskyConvoGetConvoForMembersRequest$Outbound;
}

export function chatBskyConvoGetConvoForMembersRequestToJSON(
  chatBskyConvoGetConvoForMembersRequest:
    ChatBskyConvoGetConvoForMembersRequest,
): string {
  return JSON.stringify(
    ChatBskyConvoGetConvoForMembersRequest$outboundSchema.parse(
      chatBskyConvoGetConvoForMembersRequest,
    ),
  );
}

export function chatBskyConvoGetConvoForMembersRequestFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoGetConvoForMembersRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoGetConvoForMembersRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoGetConvoForMembersRequest' from JSON`,
  );
}

/** @internal */
export const ChatBskyConvoGetConvoForMembersResponse$inboundSchema: z.ZodType<
  ChatBskyConvoGetConvoForMembersResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$inboundSchema,
});

/** @internal */
export type ChatBskyConvoGetConvoForMembersResponse$Outbound = {
  convo: components.ChatBskyConvoDefsConvoView$Outbound;
};

/** @internal */
export const ChatBskyConvoGetConvoForMembersResponse$outboundSchema: z.ZodType<
  ChatBskyConvoGetConvoForMembersResponse$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoGetConvoForMembersResponse
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoForMembersResponse$ {
  /** @deprecated use `ChatBskyConvoGetConvoForMembersResponse$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoGetConvoForMembersResponse$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersResponse$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoGetConvoForMembersResponse$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoForMembersResponse$Outbound` instead. */
  export type Outbound = ChatBskyConvoGetConvoForMembersResponse$Outbound;
}

export function chatBskyConvoGetConvoForMembersResponseToJSON(
  chatBskyConvoGetConvoForMembersResponse:
    ChatBskyConvoGetConvoForMembersResponse,
): string {
  return JSON.stringify(
    ChatBskyConvoGetConvoForMembersResponse$outboundSchema.parse(
      chatBskyConvoGetConvoForMembersResponse,
    ),
  );
}

export function chatBskyConvoGetConvoForMembersResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatBskyConvoGetConvoForMembersResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoGetConvoForMembersResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatBskyConvoGetConvoForMembersResponse' from JSON`,
  );
}
