/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyFeedGetPostThreadRequest = {
  /**
   * Reference (AT-URI) to post record.
   */
  uri: string;
  /**
   * How many levels of reply depth should be included in response.
   */
  depth?: number | undefined;
  /**
   * How many levels of parent (and grandparent, etc) post to include.
   */
  parentHeight?: number | undefined;
};

export type Thread =
  | components.AppBskyFeedDefsNotFoundPost
  | components.AppBskyFeedDefsThreadViewPost
  | components.AppBskyFeedDefsBlockedPost;

/**
 * OK
 */
export type AppBskyFeedGetPostThreadResponseBody = {
  thread:
    | components.AppBskyFeedDefsNotFoundPost
    | components.AppBskyFeedDefsThreadViewPost
    | components.AppBskyFeedDefsBlockedPost;
  threadgate?: components.AppBskyFeedDefsThreadgateView | undefined;
};

/** @internal */
export const AppBskyFeedGetPostThreadRequest$inboundSchema: z.ZodType<
  AppBskyFeedGetPostThreadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uri: z.string(),
  depth: z.number().int().default(6),
  parentHeight: z.number().int().default(80),
});

/** @internal */
export type AppBskyFeedGetPostThreadRequest$Outbound = {
  uri: string;
  depth: number;
  parentHeight: number;
};

/** @internal */
export const AppBskyFeedGetPostThreadRequest$outboundSchema: z.ZodType<
  AppBskyFeedGetPostThreadRequest$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetPostThreadRequest
> = z.object({
  uri: z.string(),
  depth: z.number().int().default(6),
  parentHeight: z.number().int().default(80),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostThreadRequest$ {
  /** @deprecated use `AppBskyFeedGetPostThreadRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetPostThreadRequest$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadRequest$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetPostThreadRequest$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadRequest$Outbound` instead. */
  export type Outbound = AppBskyFeedGetPostThreadRequest$Outbound;
}

export function appBskyFeedGetPostThreadRequestToJSON(
  appBskyFeedGetPostThreadRequest: AppBskyFeedGetPostThreadRequest,
): string {
  return JSON.stringify(
    AppBskyFeedGetPostThreadRequest$outboundSchema.parse(
      appBskyFeedGetPostThreadRequest,
    ),
  );
}

export function appBskyFeedGetPostThreadRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetPostThreadRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetPostThreadRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetPostThreadRequest' from JSON`,
  );
}

/** @internal */
export const Thread$inboundSchema: z.ZodType<Thread, z.ZodTypeDef, unknown> = z
  .union([
    components.AppBskyFeedDefsNotFoundPost$inboundSchema,
    components.AppBskyFeedDefsThreadViewPost$inboundSchema,
    components.AppBskyFeedDefsBlockedPost$inboundSchema,
  ]);

/** @internal */
export type Thread$Outbound =
  | components.AppBskyFeedDefsNotFoundPost$Outbound
  | components.AppBskyFeedDefsThreadViewPost$Outbound
  | components.AppBskyFeedDefsBlockedPost$Outbound;

/** @internal */
export const Thread$outboundSchema: z.ZodType<
  Thread$Outbound,
  z.ZodTypeDef,
  Thread
> = z.union([
  components.AppBskyFeedDefsNotFoundPost$outboundSchema,
  components.AppBskyFeedDefsThreadViewPost$outboundSchema,
  components.AppBskyFeedDefsBlockedPost$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Thread$ {
  /** @deprecated use `Thread$inboundSchema` instead. */
  export const inboundSchema = Thread$inboundSchema;
  /** @deprecated use `Thread$outboundSchema` instead. */
  export const outboundSchema = Thread$outboundSchema;
  /** @deprecated use `Thread$Outbound` instead. */
  export type Outbound = Thread$Outbound;
}

export function threadToJSON(thread: Thread): string {
  return JSON.stringify(Thread$outboundSchema.parse(thread));
}

export function threadFromJSON(
  jsonString: string,
): SafeParseResult<Thread, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Thread$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Thread' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedGetPostThreadResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetPostThreadResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  thread: z.union([
    components.AppBskyFeedDefsNotFoundPost$inboundSchema,
    components.AppBskyFeedDefsThreadViewPost$inboundSchema,
    components.AppBskyFeedDefsBlockedPost$inboundSchema,
  ]),
  threadgate: components.AppBskyFeedDefsThreadgateView$inboundSchema.optional(),
});

/** @internal */
export type AppBskyFeedGetPostThreadResponseBody$Outbound = {
  thread:
    | components.AppBskyFeedDefsNotFoundPost$Outbound
    | components.AppBskyFeedDefsThreadViewPost$Outbound
    | components.AppBskyFeedDefsBlockedPost$Outbound;
  threadgate?: components.AppBskyFeedDefsThreadgateView$Outbound | undefined;
};

/** @internal */
export const AppBskyFeedGetPostThreadResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetPostThreadResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetPostThreadResponseBody
> = z.object({
  thread: z.union([
    components.AppBskyFeedDefsNotFoundPost$outboundSchema,
    components.AppBskyFeedDefsThreadViewPost$outboundSchema,
    components.AppBskyFeedDefsBlockedPost$outboundSchema,
  ]),
  threadgate: components.AppBskyFeedDefsThreadgateView$outboundSchema
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetPostThreadResponseBody$ {
  /** @deprecated use `AppBskyFeedGetPostThreadResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetPostThreadResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetPostThreadResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetPostThreadResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetPostThreadResponseBody$Outbound;
}

export function appBskyFeedGetPostThreadResponseBodyToJSON(
  appBskyFeedGetPostThreadResponseBody: AppBskyFeedGetPostThreadResponseBody,
): string {
  return JSON.stringify(
    AppBskyFeedGetPostThreadResponseBody$outboundSchema.parse(
      appBskyFeedGetPostThreadResponseBody,
    ),
  );
}

export function appBskyFeedGetPostThreadResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetPostThreadResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyFeedGetPostThreadResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetPostThreadResponseBody' from JSON`,
  );
}
