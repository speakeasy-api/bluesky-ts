/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyLabelerGetServicesRequest = {
  dids: Array<string>;
  detailed?: boolean | undefined;
};

export type View =
  | components.AppBskyLabelerDefsLabelerViewDetailed
  | components.AppBskyLabelerDefsLabelerView;

/**
 * OK
 */
export type AppBskyLabelerGetServicesResponse = {
  views: Array<
    | components.AppBskyLabelerDefsLabelerViewDetailed
    | components.AppBskyLabelerDefsLabelerView
  >;
};

/** @internal */
export const AppBskyLabelerGetServicesRequest$inboundSchema: z.ZodType<
  AppBskyLabelerGetServicesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  dids: z.array(z.string()),
  detailed: z.boolean().optional(),
});

/** @internal */
export type AppBskyLabelerGetServicesRequest$Outbound = {
  dids: Array<string>;
  detailed?: boolean | undefined;
};

/** @internal */
export const AppBskyLabelerGetServicesRequest$outboundSchema: z.ZodType<
  AppBskyLabelerGetServicesRequest$Outbound,
  z.ZodTypeDef,
  AppBskyLabelerGetServicesRequest
> = z.object({
  dids: z.array(z.string()),
  detailed: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyLabelerGetServicesRequest$ {
  /** @deprecated use `AppBskyLabelerGetServicesRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyLabelerGetServicesRequest$inboundSchema;
  /** @deprecated use `AppBskyLabelerGetServicesRequest$outboundSchema` instead. */
  export const outboundSchema = AppBskyLabelerGetServicesRequest$outboundSchema;
  /** @deprecated use `AppBskyLabelerGetServicesRequest$Outbound` instead. */
  export type Outbound = AppBskyLabelerGetServicesRequest$Outbound;
}

export function appBskyLabelerGetServicesRequestToJSON(
  appBskyLabelerGetServicesRequest: AppBskyLabelerGetServicesRequest,
): string {
  return JSON.stringify(
    AppBskyLabelerGetServicesRequest$outboundSchema.parse(
      appBskyLabelerGetServicesRequest,
    ),
  );
}

export function appBskyLabelerGetServicesRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyLabelerGetServicesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyLabelerGetServicesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyLabelerGetServicesRequest' from JSON`,
  );
}

/** @internal */
export const View$inboundSchema: z.ZodType<View, z.ZodTypeDef, unknown> = z
  .union([
    components.AppBskyLabelerDefsLabelerViewDetailed$inboundSchema,
    components.AppBskyLabelerDefsLabelerView$inboundSchema,
  ]);

/** @internal */
export type View$Outbound =
  | components.AppBskyLabelerDefsLabelerViewDetailed$Outbound
  | components.AppBskyLabelerDefsLabelerView$Outbound;

/** @internal */
export const View$outboundSchema: z.ZodType<View$Outbound, z.ZodTypeDef, View> =
  z.union([
    components.AppBskyLabelerDefsLabelerViewDetailed$outboundSchema,
    components.AppBskyLabelerDefsLabelerView$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace View$ {
  /** @deprecated use `View$inboundSchema` instead. */
  export const inboundSchema = View$inboundSchema;
  /** @deprecated use `View$outboundSchema` instead. */
  export const outboundSchema = View$outboundSchema;
  /** @deprecated use `View$Outbound` instead. */
  export type Outbound = View$Outbound;
}

export function viewToJSON(view: View): string {
  return JSON.stringify(View$outboundSchema.parse(view));
}

export function viewFromJSON(
  jsonString: string,
): SafeParseResult<View, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => View$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'View' from JSON`,
  );
}

/** @internal */
export const AppBskyLabelerGetServicesResponse$inboundSchema: z.ZodType<
  AppBskyLabelerGetServicesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  views: z.array(
    z.union([
      components.AppBskyLabelerDefsLabelerViewDetailed$inboundSchema,
      components.AppBskyLabelerDefsLabelerView$inboundSchema,
    ]),
  ),
});

/** @internal */
export type AppBskyLabelerGetServicesResponse$Outbound = {
  views: Array<
    | components.AppBskyLabelerDefsLabelerViewDetailed$Outbound
    | components.AppBskyLabelerDefsLabelerView$Outbound
  >;
};

/** @internal */
export const AppBskyLabelerGetServicesResponse$outboundSchema: z.ZodType<
  AppBskyLabelerGetServicesResponse$Outbound,
  z.ZodTypeDef,
  AppBskyLabelerGetServicesResponse
> = z.object({
  views: z.array(
    z.union([
      components.AppBskyLabelerDefsLabelerViewDetailed$outboundSchema,
      components.AppBskyLabelerDefsLabelerView$outboundSchema,
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyLabelerGetServicesResponse$ {
  /** @deprecated use `AppBskyLabelerGetServicesResponse$inboundSchema` instead. */
  export const inboundSchema = AppBskyLabelerGetServicesResponse$inboundSchema;
  /** @deprecated use `AppBskyLabelerGetServicesResponse$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyLabelerGetServicesResponse$outboundSchema;
  /** @deprecated use `AppBskyLabelerGetServicesResponse$Outbound` instead. */
  export type Outbound = AppBskyLabelerGetServicesResponse$Outbound;
}

export function appBskyLabelerGetServicesResponseToJSON(
  appBskyLabelerGetServicesResponse: AppBskyLabelerGetServicesResponse,
): string {
  return JSON.stringify(
    AppBskyLabelerGetServicesResponse$outboundSchema.parse(
      appBskyLabelerGetServicesResponse,
    ),
  );
}

export function appBskyLabelerGetServicesResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyLabelerGetServicesResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyLabelerGetServicesResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyLabelerGetServicesResponse' from JSON`,
  );
}
