/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSignatureFindRelatedAccountsRequest = {
  did: string;
  cursor?: string | undefined;
  limit?: number | undefined;
};

/**
 * OK
 */
export type ToolsOzoneSignatureFindRelatedAccountsResponseBody = {
  cursor?: string | undefined;
  accounts: Array<
    components.ToolsOzoneSignatureFindRelatedAccountsRelatedAccount
  >;
};

export type ToolsOzoneSignatureFindRelatedAccountsResponse = {
  result: ToolsOzoneSignatureFindRelatedAccountsResponseBody;
};

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsRequest$inboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    did: z.string(),
    cursor: z.string().optional(),
    limit: z.number().int().default(50),
  });

/** @internal */
export type ToolsOzoneSignatureFindRelatedAccountsRequest$Outbound = {
  did: string;
  cursor?: string | undefined;
  limit: number;
};

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsRequest$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsRequest$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureFindRelatedAccountsRequest
  > = z.object({
    did: z.string(),
    cursor: z.string().optional(),
    limit: z.number().int().default(50),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureFindRelatedAccountsRequest$ {
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsRequest$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsRequest$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSignatureFindRelatedAccountsRequest$Outbound;
}

export function toolsOzoneSignatureFindRelatedAccountsRequestToJSON(
  toolsOzoneSignatureFindRelatedAccountsRequest:
    ToolsOzoneSignatureFindRelatedAccountsRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureFindRelatedAccountsRequest$outboundSchema.parse(
      toolsOzoneSignatureFindRelatedAccountsRequest,
    ),
  );
}

export function toolsOzoneSignatureFindRelatedAccountsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureFindRelatedAccountsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureFindRelatedAccountsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureFindRelatedAccountsRequest' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsResponseBody$inboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    cursor: z.string().optional(),
    accounts: z.array(
      components
        .ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$inboundSchema,
    ),
  });

/** @internal */
export type ToolsOzoneSignatureFindRelatedAccountsResponseBody$Outbound = {
  cursor?: string | undefined;
  accounts: Array<
    components.ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$Outbound
  >;
};

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsResponseBody$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsResponseBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureFindRelatedAccountsResponseBody
  > = z.object({
    cursor: z.string().optional(),
    accounts: z.array(
      components
        .ToolsOzoneSignatureFindRelatedAccountsRelatedAccount$outboundSchema,
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureFindRelatedAccountsResponseBody$ {
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsResponseBody$Outbound` instead. */
  export type Outbound =
    ToolsOzoneSignatureFindRelatedAccountsResponseBody$Outbound;
}

export function toolsOzoneSignatureFindRelatedAccountsResponseBodyToJSON(
  toolsOzoneSignatureFindRelatedAccountsResponseBody:
    ToolsOzoneSignatureFindRelatedAccountsResponseBody,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureFindRelatedAccountsResponseBody$outboundSchema.parse(
      toolsOzoneSignatureFindRelatedAccountsResponseBody,
    ),
  );
}

export function toolsOzoneSignatureFindRelatedAccountsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureFindRelatedAccountsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureFindRelatedAccountsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureFindRelatedAccountsResponseBody' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsResponse$inboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Result: z.lazy(() =>
      ToolsOzoneSignatureFindRelatedAccountsResponseBody$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "Result": "result",
    });
  });

/** @internal */
export type ToolsOzoneSignatureFindRelatedAccountsResponse$Outbound = {
  Result: ToolsOzoneSignatureFindRelatedAccountsResponseBody$Outbound;
};

/** @internal */
export const ToolsOzoneSignatureFindRelatedAccountsResponse$outboundSchema:
  z.ZodType<
    ToolsOzoneSignatureFindRelatedAccountsResponse$Outbound,
    z.ZodTypeDef,
    ToolsOzoneSignatureFindRelatedAccountsResponse
  > = z.object({
    result: z.lazy(() =>
      ToolsOzoneSignatureFindRelatedAccountsResponseBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSignatureFindRelatedAccountsResponse$ {
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsResponse$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsResponse$inboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsResponse$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSignatureFindRelatedAccountsResponse$outboundSchema;
  /** @deprecated use `ToolsOzoneSignatureFindRelatedAccountsResponse$Outbound` instead. */
  export type Outbound =
    ToolsOzoneSignatureFindRelatedAccountsResponse$Outbound;
}

export function toolsOzoneSignatureFindRelatedAccountsResponseToJSON(
  toolsOzoneSignatureFindRelatedAccountsResponse:
    ToolsOzoneSignatureFindRelatedAccountsResponse,
): string {
  return JSON.stringify(
    ToolsOzoneSignatureFindRelatedAccountsResponse$outboundSchema.parse(
      toolsOzoneSignatureFindRelatedAccountsResponse,
    ),
  );
}

export function toolsOzoneSignatureFindRelatedAccountsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneSignatureFindRelatedAccountsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSignatureFindRelatedAccountsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneSignatureFindRelatedAccountsResponse' from JSON`,
  );
}
