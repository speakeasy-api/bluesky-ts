/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type ToolsOzoneServerGetConfigResponse = {
  appview?: components.ToolsOzoneServerGetConfigServiceConfig | undefined;
  pds?: components.ToolsOzoneServerGetConfigServiceConfig | undefined;
  blobDivert?: components.ToolsOzoneServerGetConfigServiceConfig | undefined;
  chat?: components.ToolsOzoneServerGetConfigServiceConfig | undefined;
  viewer?: components.ToolsOzoneServerGetConfigViewerConfig | undefined;
};

/** @internal */
export const ToolsOzoneServerGetConfigResponse$inboundSchema: z.ZodType<
  ToolsOzoneServerGetConfigResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  appview: components.ToolsOzoneServerGetConfigServiceConfig$inboundSchema
    .optional(),
  pds: components.ToolsOzoneServerGetConfigServiceConfig$inboundSchema
    .optional(),
  blobDivert: components.ToolsOzoneServerGetConfigServiceConfig$inboundSchema
    .optional(),
  chat: components.ToolsOzoneServerGetConfigServiceConfig$inboundSchema
    .optional(),
  viewer: components.ToolsOzoneServerGetConfigViewerConfig$inboundSchema
    .optional(),
});

/** @internal */
export type ToolsOzoneServerGetConfigResponse$Outbound = {
  appview?:
    | components.ToolsOzoneServerGetConfigServiceConfig$Outbound
    | undefined;
  pds?: components.ToolsOzoneServerGetConfigServiceConfig$Outbound | undefined;
  blobDivert?:
    | components.ToolsOzoneServerGetConfigServiceConfig$Outbound
    | undefined;
  chat?: components.ToolsOzoneServerGetConfigServiceConfig$Outbound | undefined;
  viewer?:
    | components.ToolsOzoneServerGetConfigViewerConfig$Outbound
    | undefined;
};

/** @internal */
export const ToolsOzoneServerGetConfigResponse$outboundSchema: z.ZodType<
  ToolsOzoneServerGetConfigResponse$Outbound,
  z.ZodTypeDef,
  ToolsOzoneServerGetConfigResponse
> = z.object({
  appview: components.ToolsOzoneServerGetConfigServiceConfig$outboundSchema
    .optional(),
  pds: components.ToolsOzoneServerGetConfigServiceConfig$outboundSchema
    .optional(),
  blobDivert: components.ToolsOzoneServerGetConfigServiceConfig$outboundSchema
    .optional(),
  chat: components.ToolsOzoneServerGetConfigServiceConfig$outboundSchema
    .optional(),
  viewer: components.ToolsOzoneServerGetConfigViewerConfig$outboundSchema
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneServerGetConfigResponse$ {
  /** @deprecated use `ToolsOzoneServerGetConfigResponse$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneServerGetConfigResponse$inboundSchema;
  /** @deprecated use `ToolsOzoneServerGetConfigResponse$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneServerGetConfigResponse$outboundSchema;
  /** @deprecated use `ToolsOzoneServerGetConfigResponse$Outbound` instead. */
  export type Outbound = ToolsOzoneServerGetConfigResponse$Outbound;
}

export function toolsOzoneServerGetConfigResponseToJSON(
  toolsOzoneServerGetConfigResponse: ToolsOzoneServerGetConfigResponse,
): string {
  return JSON.stringify(
    ToolsOzoneServerGetConfigResponse$outboundSchema.parse(
      toolsOzoneServerGetConfigResponse,
    ),
  );
}

export function toolsOzoneServerGetConfigResponseFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneServerGetConfigResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneServerGetConfigResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneServerGetConfigResponse' from JSON`,
  );
}
