/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSetAddValuesRequest = {
  /**
   * Name of the set to add values to
   */
  name: string;
  values: Array<string>;
};

/** @internal */
export const ToolsOzoneSetAddValuesRequest$inboundSchema: z.ZodType<
  ToolsOzoneSetAddValuesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  values: z.array(z.string()),
});

/** @internal */
export type ToolsOzoneSetAddValuesRequest$Outbound = {
  name: string;
  values: Array<string>;
};

/** @internal */
export const ToolsOzoneSetAddValuesRequest$outboundSchema: z.ZodType<
  ToolsOzoneSetAddValuesRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetAddValuesRequest
> = z.object({
  name: z.string(),
  values: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetAddValuesRequest$ {
  /** @deprecated use `ToolsOzoneSetAddValuesRequest$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetAddValuesRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSetAddValuesRequest$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetAddValuesRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSetAddValuesRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSetAddValuesRequest$Outbound;
}

export function toolsOzoneSetAddValuesRequestToJSON(
  toolsOzoneSetAddValuesRequest: ToolsOzoneSetAddValuesRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSetAddValuesRequest$outboundSchema.parse(
      toolsOzoneSetAddValuesRequest,
    ),
  );
}

export function toolsOzoneSetAddValuesRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetAddValuesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetAddValuesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetAddValuesRequest' from JSON`,
  );
}
