/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSetAddValuesRequestBody = {
  /**
   * Name of the set to add values to
   */
  name: string;
  values: Array<string>;
};

/** @internal */
export const ToolsOzoneSetAddValuesRequestBody$inboundSchema: z.ZodType<
  ToolsOzoneSetAddValuesRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  values: z.array(z.string()),
});

/** @internal */
export type ToolsOzoneSetAddValuesRequestBody$Outbound = {
  name: string;
  values: Array<string>;
};

/** @internal */
export const ToolsOzoneSetAddValuesRequestBody$outboundSchema: z.ZodType<
  ToolsOzoneSetAddValuesRequestBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetAddValuesRequestBody
> = z.object({
  name: z.string(),
  values: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetAddValuesRequestBody$ {
  /** @deprecated use `ToolsOzoneSetAddValuesRequestBody$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetAddValuesRequestBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetAddValuesRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetAddValuesRequestBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetAddValuesRequestBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSetAddValuesRequestBody$Outbound;
}

export function toolsOzoneSetAddValuesRequestBodyToJSON(
  toolsOzoneSetAddValuesRequestBody: ToolsOzoneSetAddValuesRequestBody,
): string {
  return JSON.stringify(
    ToolsOzoneSetAddValuesRequestBody$outboundSchema.parse(
      toolsOzoneSetAddValuesRequestBody,
    ),
  );
}

export function toolsOzoneSetAddValuesRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetAddValuesRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetAddValuesRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetAddValuesRequestBody' from JSON`,
  );
}
