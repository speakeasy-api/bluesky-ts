/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoSyncGetRecordRequest = {
  /**
   * The DID of the repo.
   */
  did: string;
  collection: string;
  /**
   * Record Key
   */
  rkey: string;
};

/** @internal */
export const ComAtprotoSyncGetRecordRequest$inboundSchema: z.ZodType<
  ComAtprotoSyncGetRecordRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  collection: z.string(),
  rkey: z.string(),
});

/** @internal */
export type ComAtprotoSyncGetRecordRequest$Outbound = {
  did: string;
  collection: string;
  rkey: string;
};

/** @internal */
export const ComAtprotoSyncGetRecordRequest$outboundSchema: z.ZodType<
  ComAtprotoSyncGetRecordRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetRecordRequest
> = z.object({
  did: z.string(),
  collection: z.string(),
  rkey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRecordRequest$ {
  /** @deprecated use `ComAtprotoSyncGetRecordRequest$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRecordRequest$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRecordRequest$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetRecordRequest$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRecordRequest$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRecordRequest$Outbound;
}

export function comAtprotoSyncGetRecordRequestToJSON(
  comAtprotoSyncGetRecordRequest: ComAtprotoSyncGetRecordRequest,
): string {
  return JSON.stringify(
    ComAtprotoSyncGetRecordRequest$outboundSchema.parse(
      comAtprotoSyncGetRecordRequest,
    ),
  );
}

export function comAtprotoSyncGetRecordRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoSyncGetRecordRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoSyncGetRecordRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoSyncGetRecordRequest' from JSON`,
  );
}
