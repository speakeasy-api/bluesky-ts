/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneCommunicationDeleteTemplateBody = {
  id: string;
};

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateBody$inboundSchema: z.ZodType<
  ToolsOzoneCommunicationDeleteTemplateBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type ToolsOzoneCommunicationDeleteTemplateBody$Outbound = {
  id: string;
};

/** @internal */
export const ToolsOzoneCommunicationDeleteTemplateBody$outboundSchema:
  z.ZodType<
    ToolsOzoneCommunicationDeleteTemplateBody$Outbound,
    z.ZodTypeDef,
    ToolsOzoneCommunicationDeleteTemplateBody
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneCommunicationDeleteTemplateBody$ {
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneCommunicationDeleteTemplateBody$inboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneCommunicationDeleteTemplateBody$outboundSchema;
  /** @deprecated use `ToolsOzoneCommunicationDeleteTemplateBody$Outbound` instead. */
  export type Outbound = ToolsOzoneCommunicationDeleteTemplateBody$Outbound;
}

export function toolsOzoneCommunicationDeleteTemplateBodyToJSON(
  toolsOzoneCommunicationDeleteTemplateBody:
    ToolsOzoneCommunicationDeleteTemplateBody,
): string {
  return JSON.stringify(
    ToolsOzoneCommunicationDeleteTemplateBody$outboundSchema.parse(
      toolsOzoneCommunicationDeleteTemplateBody,
    ),
  );
}

export function toolsOzoneCommunicationDeleteTemplateBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ToolsOzoneCommunicationDeleteTemplateBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneCommunicationDeleteTemplateBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ToolsOzoneCommunicationDeleteTemplateBody' from JSON`,
  );
}
