/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoModerationCreateReportBodySubject =
  | components.ComAtprotoAdminDefsRepoRef
  | components.ComAtprotoRepoStrongRef;

export type ComAtprotoModerationCreateReportBody = {
  reasonType: string;
  /**
   * Additional context about the content and violation.
   */
  reason?: string | undefined;
  subject:
    | components.ComAtprotoAdminDefsRepoRef
    | components.ComAtprotoRepoStrongRef;
};

export type ComAtprotoModerationCreateReportResponseSubject =
  | components.ComAtprotoAdminDefsRepoRef
  | components.ComAtprotoRepoStrongRef;

/**
 * OK
 */
export type ComAtprotoModerationCreateReportResponseBody = {
  id: number;
  reasonType: string;
  reason?: string | undefined;
  subject:
    | components.ComAtprotoAdminDefsRepoRef
    | components.ComAtprotoRepoStrongRef;
  reportedBy: string;
  createdAt: Date;
};

/** @internal */
export const ComAtprotoModerationCreateReportBodySubject$inboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportBodySubject,
    z.ZodTypeDef,
    unknown
  > = z.union([
    components.ComAtprotoAdminDefsRepoRef$inboundSchema,
    components.ComAtprotoRepoStrongRef$inboundSchema,
  ]);

/** @internal */
export type ComAtprotoModerationCreateReportBodySubject$Outbound =
  | components.ComAtprotoAdminDefsRepoRef$Outbound
  | components.ComAtprotoRepoStrongRef$Outbound;

/** @internal */
export const ComAtprotoModerationCreateReportBodySubject$outboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportBodySubject$Outbound,
    z.ZodTypeDef,
    ComAtprotoModerationCreateReportBodySubject
  > = z.union([
    components.ComAtprotoAdminDefsRepoRef$outboundSchema,
    components.ComAtprotoRepoStrongRef$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportBodySubject$ {
  /** @deprecated use `ComAtprotoModerationCreateReportBodySubject$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportBodySubject$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportBodySubject$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportBodySubject$outboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportBodySubject$Outbound` instead. */
  export type Outbound = ComAtprotoModerationCreateReportBodySubject$Outbound;
}

export function comAtprotoModerationCreateReportBodySubjectToJSON(
  comAtprotoModerationCreateReportBodySubject:
    ComAtprotoModerationCreateReportBodySubject,
): string {
  return JSON.stringify(
    ComAtprotoModerationCreateReportBodySubject$outboundSchema.parse(
      comAtprotoModerationCreateReportBodySubject,
    ),
  );
}

export function comAtprotoModerationCreateReportBodySubjectFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoModerationCreateReportBodySubject,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoModerationCreateReportBodySubject$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoModerationCreateReportBodySubject' from JSON`,
  );
}

/** @internal */
export const ComAtprotoModerationCreateReportBody$inboundSchema: z.ZodType<
  ComAtprotoModerationCreateReportBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  reasonType: z.string(),
  reason: z.string().optional(),
  subject: z.union([
    components.ComAtprotoAdminDefsRepoRef$inboundSchema,
    components.ComAtprotoRepoStrongRef$inboundSchema,
  ]),
});

/** @internal */
export type ComAtprotoModerationCreateReportBody$Outbound = {
  reasonType: string;
  reason?: string | undefined;
  subject:
    | components.ComAtprotoAdminDefsRepoRef$Outbound
    | components.ComAtprotoRepoStrongRef$Outbound;
};

/** @internal */
export const ComAtprotoModerationCreateReportBody$outboundSchema: z.ZodType<
  ComAtprotoModerationCreateReportBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoModerationCreateReportBody
> = z.object({
  reasonType: z.string(),
  reason: z.string().optional(),
  subject: z.union([
    components.ComAtprotoAdminDefsRepoRef$outboundSchema,
    components.ComAtprotoRepoStrongRef$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportBody$ {
  /** @deprecated use `ComAtprotoModerationCreateReportBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportBody$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportBody$outboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportBody$Outbound` instead. */
  export type Outbound = ComAtprotoModerationCreateReportBody$Outbound;
}

export function comAtprotoModerationCreateReportBodyToJSON(
  comAtprotoModerationCreateReportBody: ComAtprotoModerationCreateReportBody,
): string {
  return JSON.stringify(
    ComAtprotoModerationCreateReportBody$outboundSchema.parse(
      comAtprotoModerationCreateReportBody,
    ),
  );
}

export function comAtprotoModerationCreateReportBodyFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoModerationCreateReportBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoModerationCreateReportBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoModerationCreateReportBody' from JSON`,
  );
}

/** @internal */
export const ComAtprotoModerationCreateReportResponseSubject$inboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportResponseSubject,
    z.ZodTypeDef,
    unknown
  > = z.union([
    components.ComAtprotoAdminDefsRepoRef$inboundSchema,
    components.ComAtprotoRepoStrongRef$inboundSchema,
  ]);

/** @internal */
export type ComAtprotoModerationCreateReportResponseSubject$Outbound =
  | components.ComAtprotoAdminDefsRepoRef$Outbound
  | components.ComAtprotoRepoStrongRef$Outbound;

/** @internal */
export const ComAtprotoModerationCreateReportResponseSubject$outboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportResponseSubject$Outbound,
    z.ZodTypeDef,
    ComAtprotoModerationCreateReportResponseSubject
  > = z.union([
    components.ComAtprotoAdminDefsRepoRef$outboundSchema,
    components.ComAtprotoRepoStrongRef$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportResponseSubject$ {
  /** @deprecated use `ComAtprotoModerationCreateReportResponseSubject$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportResponseSubject$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportResponseSubject$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportResponseSubject$outboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportResponseSubject$Outbound` instead. */
  export type Outbound =
    ComAtprotoModerationCreateReportResponseSubject$Outbound;
}

export function comAtprotoModerationCreateReportResponseSubjectToJSON(
  comAtprotoModerationCreateReportResponseSubject:
    ComAtprotoModerationCreateReportResponseSubject,
): string {
  return JSON.stringify(
    ComAtprotoModerationCreateReportResponseSubject$outboundSchema.parse(
      comAtprotoModerationCreateReportResponseSubject,
    ),
  );
}

export function comAtprotoModerationCreateReportResponseSubjectFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoModerationCreateReportResponseSubject,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoModerationCreateReportResponseSubject$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoModerationCreateReportResponseSubject' from JSON`,
  );
}

/** @internal */
export const ComAtprotoModerationCreateReportResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.number().int(),
    reasonType: z.string(),
    reason: z.string().optional(),
    subject: z.union([
      components.ComAtprotoAdminDefsRepoRef$inboundSchema,
      components.ComAtprotoRepoStrongRef$inboundSchema,
    ]),
    reportedBy: z.string(),
    createdAt: z.string().datetime({ offset: true }).transform(v =>
      new Date(v)
    ),
  });

/** @internal */
export type ComAtprotoModerationCreateReportResponseBody$Outbound = {
  id: number;
  reasonType: string;
  reason?: string | undefined;
  subject:
    | components.ComAtprotoAdminDefsRepoRef$Outbound
    | components.ComAtprotoRepoStrongRef$Outbound;
  reportedBy: string;
  createdAt: string;
};

/** @internal */
export const ComAtprotoModerationCreateReportResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoModerationCreateReportResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoModerationCreateReportResponseBody
  > = z.object({
    id: z.number().int(),
    reasonType: z.string(),
    reason: z.string().optional(),
    subject: z.union([
      components.ComAtprotoAdminDefsRepoRef$outboundSchema,
      components.ComAtprotoRepoStrongRef$outboundSchema,
    ]),
    reportedBy: z.string(),
    createdAt: z.date().transform(v => v.toISOString()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoModerationCreateReportResponseBody$ {
  /** @deprecated use `ComAtprotoModerationCreateReportResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoModerationCreateReportResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoModerationCreateReportResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoModerationCreateReportResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoModerationCreateReportResponseBody$Outbound;
}

export function comAtprotoModerationCreateReportResponseBodyToJSON(
  comAtprotoModerationCreateReportResponseBody:
    ComAtprotoModerationCreateReportResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoModerationCreateReportResponseBody$outboundSchema.parse(
      comAtprotoModerationCreateReportResponseBody,
    ),
  );
}

export function comAtprotoModerationCreateReportResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoModerationCreateReportResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoModerationCreateReportResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoModerationCreateReportResponseBody' from JSON`,
  );
}
