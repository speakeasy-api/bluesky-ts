/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoAdminGetSubjectStatusRequest = {
  did?: string | undefined;
  uri?: string | undefined;
  blob?: string | undefined;
};

export type ComAtprotoAdminGetSubjectStatusSubject =
  | components.ComAtprotoAdminDefsRepoRef
  | components.ComAtprotoRepoStrongRef
  | components.ComAtprotoAdminDefsRepoBlobRef;

/**
 * OK
 */
export type ComAtprotoAdminGetSubjectStatusResponseBody = {
  subject:
    | components.ComAtprotoAdminDefsRepoRef
    | components.ComAtprotoRepoStrongRef
    | components.ComAtprotoAdminDefsRepoBlobRef;
  takedown?: components.ComAtprotoAdminDefsStatusAttr | undefined;
  deactivated?: components.ComAtprotoAdminDefsStatusAttr | undefined;
};

/** @internal */
export const ComAtprotoAdminGetSubjectStatusRequest$inboundSchema: z.ZodType<
  ComAtprotoAdminGetSubjectStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string().optional(),
  uri: z.string().optional(),
  blob: z.string().optional(),
});

/** @internal */
export type ComAtprotoAdminGetSubjectStatusRequest$Outbound = {
  did?: string | undefined;
  uri?: string | undefined;
  blob?: string | undefined;
};

/** @internal */
export const ComAtprotoAdminGetSubjectStatusRequest$outboundSchema: z.ZodType<
  ComAtprotoAdminGetSubjectStatusRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminGetSubjectStatusRequest
> = z.object({
  did: z.string().optional(),
  uri: z.string().optional(),
  blob: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetSubjectStatusRequest$ {
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusRequest$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetSubjectStatusRequest$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusRequest$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetSubjectStatusRequest$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusRequest$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetSubjectStatusRequest$Outbound;
}

export function comAtprotoAdminGetSubjectStatusRequestToJSON(
  comAtprotoAdminGetSubjectStatusRequest:
    ComAtprotoAdminGetSubjectStatusRequest,
): string {
  return JSON.stringify(
    ComAtprotoAdminGetSubjectStatusRequest$outboundSchema.parse(
      comAtprotoAdminGetSubjectStatusRequest,
    ),
  );
}

export function comAtprotoAdminGetSubjectStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoAdminGetSubjectStatusRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoAdminGetSubjectStatusRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoAdminGetSubjectStatusRequest' from JSON`,
  );
}

/** @internal */
export const ComAtprotoAdminGetSubjectStatusSubject$inboundSchema: z.ZodType<
  ComAtprotoAdminGetSubjectStatusSubject,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ComAtprotoAdminDefsRepoRef$inboundSchema,
  components.ComAtprotoRepoStrongRef$inboundSchema,
  components.ComAtprotoAdminDefsRepoBlobRef$inboundSchema,
]);

/** @internal */
export type ComAtprotoAdminGetSubjectStatusSubject$Outbound =
  | components.ComAtprotoAdminDefsRepoRef$Outbound
  | components.ComAtprotoRepoStrongRef$Outbound
  | components.ComAtprotoAdminDefsRepoBlobRef$Outbound;

/** @internal */
export const ComAtprotoAdminGetSubjectStatusSubject$outboundSchema: z.ZodType<
  ComAtprotoAdminGetSubjectStatusSubject$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminGetSubjectStatusSubject
> = z.union([
  components.ComAtprotoAdminDefsRepoRef$outboundSchema,
  components.ComAtprotoRepoStrongRef$outboundSchema,
  components.ComAtprotoAdminDefsRepoBlobRef$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetSubjectStatusSubject$ {
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusSubject$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetSubjectStatusSubject$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusSubject$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetSubjectStatusSubject$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusSubject$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetSubjectStatusSubject$Outbound;
}

export function comAtprotoAdminGetSubjectStatusSubjectToJSON(
  comAtprotoAdminGetSubjectStatusSubject:
    ComAtprotoAdminGetSubjectStatusSubject,
): string {
  return JSON.stringify(
    ComAtprotoAdminGetSubjectStatusSubject$outboundSchema.parse(
      comAtprotoAdminGetSubjectStatusSubject,
    ),
  );
}

export function comAtprotoAdminGetSubjectStatusSubjectFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoAdminGetSubjectStatusSubject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoAdminGetSubjectStatusSubject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoAdminGetSubjectStatusSubject' from JSON`,
  );
}

/** @internal */
export const ComAtprotoAdminGetSubjectStatusResponseBody$inboundSchema:
  z.ZodType<
    ComAtprotoAdminGetSubjectStatusResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    subject: z.union([
      components.ComAtprotoAdminDefsRepoRef$inboundSchema,
      components.ComAtprotoRepoStrongRef$inboundSchema,
      components.ComAtprotoAdminDefsRepoBlobRef$inboundSchema,
    ]),
    takedown: components.ComAtprotoAdminDefsStatusAttr$inboundSchema.optional(),
    deactivated: components.ComAtprotoAdminDefsStatusAttr$inboundSchema
      .optional(),
  });

/** @internal */
export type ComAtprotoAdminGetSubjectStatusResponseBody$Outbound = {
  subject:
    | components.ComAtprotoAdminDefsRepoRef$Outbound
    | components.ComAtprotoRepoStrongRef$Outbound
    | components.ComAtprotoAdminDefsRepoBlobRef$Outbound;
  takedown?: components.ComAtprotoAdminDefsStatusAttr$Outbound | undefined;
  deactivated?: components.ComAtprotoAdminDefsStatusAttr$Outbound | undefined;
};

/** @internal */
export const ComAtprotoAdminGetSubjectStatusResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoAdminGetSubjectStatusResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoAdminGetSubjectStatusResponseBody
  > = z.object({
    subject: z.union([
      components.ComAtprotoAdminDefsRepoRef$outboundSchema,
      components.ComAtprotoRepoStrongRef$outboundSchema,
      components.ComAtprotoAdminDefsRepoBlobRef$outboundSchema,
    ]),
    takedown: components.ComAtprotoAdminDefsStatusAttr$outboundSchema
      .optional(),
    deactivated: components.ComAtprotoAdminDefsStatusAttr$outboundSchema
      .optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminGetSubjectStatusResponseBody$ {
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminGetSubjectStatusResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminGetSubjectStatusResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoAdminGetSubjectStatusResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoAdminGetSubjectStatusResponseBody$Outbound;
}

export function comAtprotoAdminGetSubjectStatusResponseBodyToJSON(
  comAtprotoAdminGetSubjectStatusResponseBody:
    ComAtprotoAdminGetSubjectStatusResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoAdminGetSubjectStatusResponseBody$outboundSchema.parse(
      comAtprotoAdminGetSubjectStatusResponseBody,
    ),
  );
}

export function comAtprotoAdminGetSubjectStatusResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoAdminGetSubjectStatusResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoAdminGetSubjectStatusResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoAdminGetSubjectStatusResponseBody' from JSON`,
  );
}
