/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoGetConvoRequest = {
  convoId: string;
};

/**
 * OK
 */
export type ChatBskyConvoGetConvoResponse = {
  convo: components.ChatBskyConvoDefsConvoView;
};

/** @internal */
export const ChatBskyConvoGetConvoRequest$inboundSchema: z.ZodType<
  ChatBskyConvoGetConvoRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  convoId: z.string(),
});

/** @internal */
export type ChatBskyConvoGetConvoRequest$Outbound = {
  convoId: string;
};

/** @internal */
export const ChatBskyConvoGetConvoRequest$outboundSchema: z.ZodType<
  ChatBskyConvoGetConvoRequest$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoGetConvoRequest
> = z.object({
  convoId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoRequest$ {
  /** @deprecated use `ChatBskyConvoGetConvoRequest$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoGetConvoRequest$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoRequest$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoGetConvoRequest$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoRequest$Outbound` instead. */
  export type Outbound = ChatBskyConvoGetConvoRequest$Outbound;
}

export function chatBskyConvoGetConvoRequestToJSON(
  chatBskyConvoGetConvoRequest: ChatBskyConvoGetConvoRequest,
): string {
  return JSON.stringify(
    ChatBskyConvoGetConvoRequest$outboundSchema.parse(
      chatBskyConvoGetConvoRequest,
    ),
  );
}

export function chatBskyConvoGetConvoRequestFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoGetConvoRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoGetConvoRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoGetConvoRequest' from JSON`,
  );
}

/** @internal */
export const ChatBskyConvoGetConvoResponse$inboundSchema: z.ZodType<
  ChatBskyConvoGetConvoResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$inboundSchema,
});

/** @internal */
export type ChatBskyConvoGetConvoResponse$Outbound = {
  convo: components.ChatBskyConvoDefsConvoView$Outbound;
};

/** @internal */
export const ChatBskyConvoGetConvoResponse$outboundSchema: z.ZodType<
  ChatBskyConvoGetConvoResponse$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoGetConvoResponse
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoGetConvoResponse$ {
  /** @deprecated use `ChatBskyConvoGetConvoResponse$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoGetConvoResponse$inboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoResponse$outboundSchema` instead. */
  export const outboundSchema = ChatBskyConvoGetConvoResponse$outboundSchema;
  /** @deprecated use `ChatBskyConvoGetConvoResponse$Outbound` instead. */
  export type Outbound = ChatBskyConvoGetConvoResponse$Outbound;
}

export function chatBskyConvoGetConvoResponseToJSON(
  chatBskyConvoGetConvoResponse: ChatBskyConvoGetConvoResponse,
): string {
  return JSON.stringify(
    ChatBskyConvoGetConvoResponse$outboundSchema.parse(
      chatBskyConvoGetConvoResponse,
    ),
  );
}

export function chatBskyConvoGetConvoResponseFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoGetConvoResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoGetConvoResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoGetConvoResponse' from JSON`,
  );
}
