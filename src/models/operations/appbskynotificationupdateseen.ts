/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyNotificationUpdateSeenRequest = {
  seenAt: Date;
};

/** @internal */
export const AppBskyNotificationUpdateSeenRequest$inboundSchema: z.ZodType<
  AppBskyNotificationUpdateSeenRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  seenAt: z.string().datetime({ offset: true }).transform(v => new Date(v)),
});

/** @internal */
export type AppBskyNotificationUpdateSeenRequest$Outbound = {
  seenAt: string;
};

/** @internal */
export const AppBskyNotificationUpdateSeenRequest$outboundSchema: z.ZodType<
  AppBskyNotificationUpdateSeenRequest$Outbound,
  z.ZodTypeDef,
  AppBskyNotificationUpdateSeenRequest
> = z.object({
  seenAt: z.date().transform(v => v.toISOString()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationUpdateSeenRequest$ {
  /** @deprecated use `AppBskyNotificationUpdateSeenRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationUpdateSeenRequest$inboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationUpdateSeenRequest$outboundSchema;
  /** @deprecated use `AppBskyNotificationUpdateSeenRequest$Outbound` instead. */
  export type Outbound = AppBskyNotificationUpdateSeenRequest$Outbound;
}

export function appBskyNotificationUpdateSeenRequestToJSON(
  appBskyNotificationUpdateSeenRequest: AppBskyNotificationUpdateSeenRequest,
): string {
  return JSON.stringify(
    AppBskyNotificationUpdateSeenRequest$outboundSchema.parse(
      appBskyNotificationUpdateSeenRequest,
    ),
  );
}

export function appBskyNotificationUpdateSeenRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyNotificationUpdateSeenRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyNotificationUpdateSeenRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyNotificationUpdateSeenRequest' from JSON`,
  );
}
