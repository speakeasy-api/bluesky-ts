/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyActorDeleteAccountUnknown = {};

/**
 * OK
 */
export type ChatBskyActorDeleteAccountResponseBody = {
  unknown?: ChatBskyActorDeleteAccountUnknown | undefined;
};

/** @internal */
export const ChatBskyActorDeleteAccountUnknown$inboundSchema: z.ZodType<
  ChatBskyActorDeleteAccountUnknown,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ChatBskyActorDeleteAccountUnknown$Outbound = {};

/** @internal */
export const ChatBskyActorDeleteAccountUnknown$outboundSchema: z.ZodType<
  ChatBskyActorDeleteAccountUnknown$Outbound,
  z.ZodTypeDef,
  ChatBskyActorDeleteAccountUnknown
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyActorDeleteAccountUnknown$ {
  /** @deprecated use `ChatBskyActorDeleteAccountUnknown$inboundSchema` instead. */
  export const inboundSchema = ChatBskyActorDeleteAccountUnknown$inboundSchema;
  /** @deprecated use `ChatBskyActorDeleteAccountUnknown$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyActorDeleteAccountUnknown$outboundSchema;
  /** @deprecated use `ChatBskyActorDeleteAccountUnknown$Outbound` instead. */
  export type Outbound = ChatBskyActorDeleteAccountUnknown$Outbound;
}

export function chatBskyActorDeleteAccountUnknownToJSON(
  chatBskyActorDeleteAccountUnknown: ChatBskyActorDeleteAccountUnknown,
): string {
  return JSON.stringify(
    ChatBskyActorDeleteAccountUnknown$outboundSchema.parse(
      chatBskyActorDeleteAccountUnknown,
    ),
  );
}

export function chatBskyActorDeleteAccountUnknownFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyActorDeleteAccountUnknown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyActorDeleteAccountUnknown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyActorDeleteAccountUnknown' from JSON`,
  );
}

/** @internal */
export const ChatBskyActorDeleteAccountResponseBody$inboundSchema: z.ZodType<
  ChatBskyActorDeleteAccountResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _unknown_: z.lazy(() => ChatBskyActorDeleteAccountUnknown$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "_unknown_": "unknown",
  });
});

/** @internal */
export type ChatBskyActorDeleteAccountResponseBody$Outbound = {
  _unknown_?: ChatBskyActorDeleteAccountUnknown$Outbound | undefined;
};

/** @internal */
export const ChatBskyActorDeleteAccountResponseBody$outboundSchema: z.ZodType<
  ChatBskyActorDeleteAccountResponseBody$Outbound,
  z.ZodTypeDef,
  ChatBskyActorDeleteAccountResponseBody
> = z.object({
  unknown: z.lazy(() => ChatBskyActorDeleteAccountUnknown$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    unknown: "_unknown_",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyActorDeleteAccountResponseBody$ {
  /** @deprecated use `ChatBskyActorDeleteAccountResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyActorDeleteAccountResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyActorDeleteAccountResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyActorDeleteAccountResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyActorDeleteAccountResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyActorDeleteAccountResponseBody$Outbound;
}

export function chatBskyActorDeleteAccountResponseBodyToJSON(
  chatBskyActorDeleteAccountResponseBody:
    ChatBskyActorDeleteAccountResponseBody,
): string {
  return JSON.stringify(
    ChatBskyActorDeleteAccountResponseBody$outboundSchema.parse(
      chatBskyActorDeleteAccountResponseBody,
    ),
  );
}

export function chatBskyActorDeleteAccountResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyActorDeleteAccountResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyActorDeleteAccountResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyActorDeleteAccountResponseBody' from JSON`,
  );
}
