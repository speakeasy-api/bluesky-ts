/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSetQuerySetsRequest = {
  limit?: number | undefined;
  cursor?: string | undefined;
  namePrefix?: string | undefined;
  sortBy?: string | undefined;
  /**
   * Defaults to ascending order of name field.
   */
  sortDirection?: string | undefined;
};

/**
 * OK
 */
export type ToolsOzoneSetQuerySetsResponseBody = {
  sets: Array<components.ToolsOzoneSetDefsSetView>;
  cursor?: string | undefined;
};

/** @internal */
export const ToolsOzoneSetQuerySetsRequest$inboundSchema: z.ZodType<
  ToolsOzoneSetQuerySetsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
  namePrefix: z.string().optional(),
  sortBy: z.string().default("name"),
  sortDirection: z.string().default("asc"),
});

/** @internal */
export type ToolsOzoneSetQuerySetsRequest$Outbound = {
  limit: number;
  cursor?: string | undefined;
  namePrefix?: string | undefined;
  sortBy: string;
  sortDirection: string;
};

/** @internal */
export const ToolsOzoneSetQuerySetsRequest$outboundSchema: z.ZodType<
  ToolsOzoneSetQuerySetsRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetQuerySetsRequest
> = z.object({
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
  namePrefix: z.string().optional(),
  sortBy: z.string().default("name"),
  sortDirection: z.string().default("asc"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetQuerySetsRequest$ {
  /** @deprecated use `ToolsOzoneSetQuerySetsRequest$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetQuerySetsRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSetQuerySetsRequest$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetQuerySetsRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSetQuerySetsRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSetQuerySetsRequest$Outbound;
}

export function toolsOzoneSetQuerySetsRequestToJSON(
  toolsOzoneSetQuerySetsRequest: ToolsOzoneSetQuerySetsRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSetQuerySetsRequest$outboundSchema.parse(
      toolsOzoneSetQuerySetsRequest,
    ),
  );
}

export function toolsOzoneSetQuerySetsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetQuerySetsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetQuerySetsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetQuerySetsRequest' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSetQuerySetsResponseBody$inboundSchema: z.ZodType<
  ToolsOzoneSetQuerySetsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  sets: z.array(components.ToolsOzoneSetDefsSetView$inboundSchema),
  cursor: z.string().optional(),
});

/** @internal */
export type ToolsOzoneSetQuerySetsResponseBody$Outbound = {
  sets: Array<components.ToolsOzoneSetDefsSetView$Outbound>;
  cursor?: string | undefined;
};

/** @internal */
export const ToolsOzoneSetQuerySetsResponseBody$outboundSchema: z.ZodType<
  ToolsOzoneSetQuerySetsResponseBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetQuerySetsResponseBody
> = z.object({
  sets: z.array(components.ToolsOzoneSetDefsSetView$outboundSchema),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetQuerySetsResponseBody$ {
  /** @deprecated use `ToolsOzoneSetQuerySetsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetQuerySetsResponseBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetQuerySetsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetQuerySetsResponseBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetQuerySetsResponseBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSetQuerySetsResponseBody$Outbound;
}

export function toolsOzoneSetQuerySetsResponseBodyToJSON(
  toolsOzoneSetQuerySetsResponseBody: ToolsOzoneSetQuerySetsResponseBody,
): string {
  return JSON.stringify(
    ToolsOzoneSetQuerySetsResponseBody$outboundSchema.parse(
      toolsOzoneSetQuerySetsResponseBody,
    ),
  );
}

export function toolsOzoneSetQuerySetsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetQuerySetsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSetQuerySetsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetQuerySetsResponseBody' from JSON`,
  );
}
