/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type AppBskyVideoGetUploadLimitsResponseBody = {
  canUpload: boolean;
  remainingDailyVideos?: number | undefined;
  remainingDailyBytes?: number | undefined;
  message?: string | undefined;
  error?: string | undefined;
};

/** @internal */
export const AppBskyVideoGetUploadLimitsResponseBody$inboundSchema: z.ZodType<
  AppBskyVideoGetUploadLimitsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  canUpload: z.boolean(),
  remainingDailyVideos: z.number().int().optional(),
  remainingDailyBytes: z.number().int().optional(),
  message: z.string().optional(),
  error: z.string().optional(),
});

/** @internal */
export type AppBskyVideoGetUploadLimitsResponseBody$Outbound = {
  canUpload: boolean;
  remainingDailyVideos?: number | undefined;
  remainingDailyBytes?: number | undefined;
  message?: string | undefined;
  error?: string | undefined;
};

/** @internal */
export const AppBskyVideoGetUploadLimitsResponseBody$outboundSchema: z.ZodType<
  AppBskyVideoGetUploadLimitsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyVideoGetUploadLimitsResponseBody
> = z.object({
  canUpload: z.boolean(),
  remainingDailyVideos: z.number().int().optional(),
  remainingDailyBytes: z.number().int().optional(),
  message: z.string().optional(),
  error: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoGetUploadLimitsResponseBody$ {
  /** @deprecated use `AppBskyVideoGetUploadLimitsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyVideoGetUploadLimitsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyVideoGetUploadLimitsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyVideoGetUploadLimitsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyVideoGetUploadLimitsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyVideoGetUploadLimitsResponseBody$Outbound;
}

export function appBskyVideoGetUploadLimitsResponseBodyToJSON(
  appBskyVideoGetUploadLimitsResponseBody:
    AppBskyVideoGetUploadLimitsResponseBody,
): string {
  return JSON.stringify(
    AppBskyVideoGetUploadLimitsResponseBody$outboundSchema.parse(
      appBskyVideoGetUploadLimitsResponseBody,
    ),
  );
}

export function appBskyVideoGetUploadLimitsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  AppBskyVideoGetUploadLimitsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyVideoGetUploadLimitsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppBskyVideoGetUploadLimitsResponseBody' from JSON`,
  );
}
