/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyFeedGetFeedSkeletonRequest = {
  /**
   * Reference to feed generator record describing the specific feed being requested.
   */
  feed: string;
  limit?: number | undefined;
  cursor?: string | undefined;
};

/**
 * OK
 */
export type AppBskyFeedGetFeedSkeletonResponseBody = {
  cursor?: string | undefined;
  feed: Array<components.AppBskyFeedDefsSkeletonFeedPost>;
};

/** @internal */
export const AppBskyFeedGetFeedSkeletonRequest$inboundSchema: z.ZodType<
  AppBskyFeedGetFeedSkeletonRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  feed: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/** @internal */
export type AppBskyFeedGetFeedSkeletonRequest$Outbound = {
  feed: string;
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const AppBskyFeedGetFeedSkeletonRequest$outboundSchema: z.ZodType<
  AppBskyFeedGetFeedSkeletonRequest$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetFeedSkeletonRequest
> = z.object({
  feed: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedSkeletonRequest$ {
  /** @deprecated use `AppBskyFeedGetFeedSkeletonRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetFeedSkeletonRequest$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetFeedSkeletonRequest$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonRequest$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedSkeletonRequest$Outbound;
}

export function appBskyFeedGetFeedSkeletonRequestToJSON(
  appBskyFeedGetFeedSkeletonRequest: AppBskyFeedGetFeedSkeletonRequest,
): string {
  return JSON.stringify(
    AppBskyFeedGetFeedSkeletonRequest$outboundSchema.parse(
      appBskyFeedGetFeedSkeletonRequest,
    ),
  );
}

export function appBskyFeedGetFeedSkeletonRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetFeedSkeletonRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetFeedSkeletonRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetFeedSkeletonRequest' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedGetFeedSkeletonResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetFeedSkeletonResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
  feed: z.array(components.AppBskyFeedDefsSkeletonFeedPost$inboundSchema),
});

/** @internal */
export type AppBskyFeedGetFeedSkeletonResponseBody$Outbound = {
  cursor?: string | undefined;
  feed: Array<components.AppBskyFeedDefsSkeletonFeedPost$Outbound>;
};

/** @internal */
export const AppBskyFeedGetFeedSkeletonResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetFeedSkeletonResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetFeedSkeletonResponseBody
> = z.object({
  cursor: z.string().optional(),
  feed: z.array(components.AppBskyFeedDefsSkeletonFeedPost$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedSkeletonResponseBody$ {
  /** @deprecated use `AppBskyFeedGetFeedSkeletonResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetFeedSkeletonResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetFeedSkeletonResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedSkeletonResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedSkeletonResponseBody$Outbound;
}

export function appBskyFeedGetFeedSkeletonResponseBodyToJSON(
  appBskyFeedGetFeedSkeletonResponseBody:
    AppBskyFeedGetFeedSkeletonResponseBody,
): string {
  return JSON.stringify(
    AppBskyFeedGetFeedSkeletonResponseBody$outboundSchema.parse(
      appBskyFeedGetFeedSkeletonResponseBody,
    ),
  );
}

export function appBskyFeedGetFeedSkeletonResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetFeedSkeletonResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyFeedGetFeedSkeletonResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetFeedSkeletonResponseBody' from JSON`,
  );
}
