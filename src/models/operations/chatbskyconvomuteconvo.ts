/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoMuteConvoRequestBody = {
  convoId: string;
};

/**
 * OK
 */
export type ChatBskyConvoMuteConvoResponseBody = {
  convo: components.ChatBskyConvoDefsConvoView;
};

/** @internal */
export const ChatBskyConvoMuteConvoRequestBody$inboundSchema: z.ZodType<
  ChatBskyConvoMuteConvoRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  convoId: z.string(),
});

/** @internal */
export type ChatBskyConvoMuteConvoRequestBody$Outbound = {
  convoId: string;
};

/** @internal */
export const ChatBskyConvoMuteConvoRequestBody$outboundSchema: z.ZodType<
  ChatBskyConvoMuteConvoRequestBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoMuteConvoRequestBody
> = z.object({
  convoId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoMuteConvoRequestBody$ {
  /** @deprecated use `ChatBskyConvoMuteConvoRequestBody$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoMuteConvoRequestBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoMuteConvoRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoMuteConvoRequestBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoMuteConvoRequestBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoMuteConvoRequestBody$Outbound;
}

export function chatBskyConvoMuteConvoRequestBodyToJSON(
  chatBskyConvoMuteConvoRequestBody: ChatBskyConvoMuteConvoRequestBody,
): string {
  return JSON.stringify(
    ChatBskyConvoMuteConvoRequestBody$outboundSchema.parse(
      chatBskyConvoMuteConvoRequestBody,
    ),
  );
}

export function chatBskyConvoMuteConvoRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoMuteConvoRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatBskyConvoMuteConvoRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoMuteConvoRequestBody' from JSON`,
  );
}

/** @internal */
export const ChatBskyConvoMuteConvoResponseBody$inboundSchema: z.ZodType<
  ChatBskyConvoMuteConvoResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$inboundSchema,
});

/** @internal */
export type ChatBskyConvoMuteConvoResponseBody$Outbound = {
  convo: components.ChatBskyConvoDefsConvoView$Outbound;
};

/** @internal */
export const ChatBskyConvoMuteConvoResponseBody$outboundSchema: z.ZodType<
  ChatBskyConvoMuteConvoResponseBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoMuteConvoResponseBody
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoMuteConvoResponseBody$ {
  /** @deprecated use `ChatBskyConvoMuteConvoResponseBody$inboundSchema` instead. */
  export const inboundSchema = ChatBskyConvoMuteConvoResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoMuteConvoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoMuteConvoResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoMuteConvoResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoMuteConvoResponseBody$Outbound;
}

export function chatBskyConvoMuteConvoResponseBodyToJSON(
  chatBskyConvoMuteConvoResponseBody: ChatBskyConvoMuteConvoResponseBody,
): string {
  return JSON.stringify(
    ChatBskyConvoMuteConvoResponseBody$outboundSchema.parse(
      chatBskyConvoMuteConvoResponseBody,
    ),
  );
}

export function chatBskyConvoMuteConvoResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoMuteConvoResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoMuteConvoResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoMuteConvoResponseBody' from JSON`,
  );
}
