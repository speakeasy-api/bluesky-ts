/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyFeedGetFeedRequest = {
  feed: string;
  limit?: number | undefined;
  cursor?: string | undefined;
};

/**
 * OK
 */
export type AppBskyFeedGetFeedResponseBody = {
  cursor?: string | undefined;
  feed: Array<components.AppBskyFeedDefsFeedViewPost>;
};

export type AppBskyFeedGetFeedResponse = {
  result: AppBskyFeedGetFeedResponseBody;
};

/** @internal */
export const AppBskyFeedGetFeedRequest$inboundSchema: z.ZodType<
  AppBskyFeedGetFeedRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  feed: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/** @internal */
export type AppBskyFeedGetFeedRequest$Outbound = {
  feed: string;
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const AppBskyFeedGetFeedRequest$outboundSchema: z.ZodType<
  AppBskyFeedGetFeedRequest$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetFeedRequest
> = z.object({
  feed: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedRequest$ {
  /** @deprecated use `AppBskyFeedGetFeedRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetFeedRequest$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedRequest$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetFeedRequest$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedRequest$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedRequest$Outbound;
}

export function appBskyFeedGetFeedRequestToJSON(
  appBskyFeedGetFeedRequest: AppBskyFeedGetFeedRequest,
): string {
  return JSON.stringify(
    AppBskyFeedGetFeedRequest$outboundSchema.parse(appBskyFeedGetFeedRequest),
  );
}

export function appBskyFeedGetFeedRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetFeedRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetFeedRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetFeedRequest' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedGetFeedResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetFeedResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
  feed: z.array(components.AppBskyFeedDefsFeedViewPost$inboundSchema),
});

/** @internal */
export type AppBskyFeedGetFeedResponseBody$Outbound = {
  cursor?: string | undefined;
  feed: Array<components.AppBskyFeedDefsFeedViewPost$Outbound>;
};

/** @internal */
export const AppBskyFeedGetFeedResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetFeedResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetFeedResponseBody
> = z.object({
  cursor: z.string().optional(),
  feed: z.array(components.AppBskyFeedDefsFeedViewPost$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedResponseBody$ {
  /** @deprecated use `AppBskyFeedGetFeedResponseBody$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetFeedResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedResponseBody$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetFeedResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedResponseBody$Outbound;
}

export function appBskyFeedGetFeedResponseBodyToJSON(
  appBskyFeedGetFeedResponseBody: AppBskyFeedGetFeedResponseBody,
): string {
  return JSON.stringify(
    AppBskyFeedGetFeedResponseBody$outboundSchema.parse(
      appBskyFeedGetFeedResponseBody,
    ),
  );
}

export function appBskyFeedGetFeedResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetFeedResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetFeedResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetFeedResponseBody' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedGetFeedResponse$inboundSchema: z.ZodType<
  AppBskyFeedGetFeedResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => AppBskyFeedGetFeedResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type AppBskyFeedGetFeedResponse$Outbound = {
  Result: AppBskyFeedGetFeedResponseBody$Outbound;
};

/** @internal */
export const AppBskyFeedGetFeedResponse$outboundSchema: z.ZodType<
  AppBskyFeedGetFeedResponse$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetFeedResponse
> = z.object({
  result: z.lazy(() => AppBskyFeedGetFeedResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetFeedResponse$ {
  /** @deprecated use `AppBskyFeedGetFeedResponse$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetFeedResponse$inboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedResponse$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetFeedResponse$outboundSchema;
  /** @deprecated use `AppBskyFeedGetFeedResponse$Outbound` instead. */
  export type Outbound = AppBskyFeedGetFeedResponse$Outbound;
}

export function appBskyFeedGetFeedResponseToJSON(
  appBskyFeedGetFeedResponse: AppBskyFeedGetFeedResponse,
): string {
  return JSON.stringify(
    AppBskyFeedGetFeedResponse$outboundSchema.parse(appBskyFeedGetFeedResponse),
  );
}

export function appBskyFeedGetFeedResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetFeedResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetFeedResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetFeedResponse' from JSON`,
  );
}
