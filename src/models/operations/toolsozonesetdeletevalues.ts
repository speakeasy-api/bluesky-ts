/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSetDeleteValuesRequestBody = {
  /**
   * Name of the set to delete values from
   */
  name: string;
  values: Array<string>;
};

/** @internal */
export const ToolsOzoneSetDeleteValuesRequestBody$inboundSchema: z.ZodType<
  ToolsOzoneSetDeleteValuesRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  values: z.array(z.string()),
});

/** @internal */
export type ToolsOzoneSetDeleteValuesRequestBody$Outbound = {
  name: string;
  values: Array<string>;
};

/** @internal */
export const ToolsOzoneSetDeleteValuesRequestBody$outboundSchema: z.ZodType<
  ToolsOzoneSetDeleteValuesRequestBody$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetDeleteValuesRequestBody
> = z.object({
  name: z.string(),
  values: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDeleteValuesRequestBody$ {
  /** @deprecated use `ToolsOzoneSetDeleteValuesRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ToolsOzoneSetDeleteValuesRequestBody$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteValuesRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ToolsOzoneSetDeleteValuesRequestBody$outboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteValuesRequestBody$Outbound` instead. */
  export type Outbound = ToolsOzoneSetDeleteValuesRequestBody$Outbound;
}

export function toolsOzoneSetDeleteValuesRequestBodyToJSON(
  toolsOzoneSetDeleteValuesRequestBody: ToolsOzoneSetDeleteValuesRequestBody,
): string {
  return JSON.stringify(
    ToolsOzoneSetDeleteValuesRequestBody$outboundSchema.parse(
      toolsOzoneSetDeleteValuesRequestBody,
    ),
  );
}

export function toolsOzoneSetDeleteValuesRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetDeleteValuesRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ToolsOzoneSetDeleteValuesRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetDeleteValuesRequestBody' from JSON`,
  );
}
