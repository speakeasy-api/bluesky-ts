/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type AppBskyVideoUploadVideoResponse = {
  jobStatus: components.AppBskyVideoDefsJobStatus;
};

/** @internal */
export const AppBskyVideoUploadVideoResponse$inboundSchema: z.ZodType<
  AppBskyVideoUploadVideoResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  jobStatus: components.AppBskyVideoDefsJobStatus$inboundSchema,
});

/** @internal */
export type AppBskyVideoUploadVideoResponse$Outbound = {
  jobStatus: components.AppBskyVideoDefsJobStatus$Outbound;
};

/** @internal */
export const AppBskyVideoUploadVideoResponse$outboundSchema: z.ZodType<
  AppBskyVideoUploadVideoResponse$Outbound,
  z.ZodTypeDef,
  AppBskyVideoUploadVideoResponse
> = z.object({
  jobStatus: components.AppBskyVideoDefsJobStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyVideoUploadVideoResponse$ {
  /** @deprecated use `AppBskyVideoUploadVideoResponse$inboundSchema` instead. */
  export const inboundSchema = AppBskyVideoUploadVideoResponse$inboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoResponse$outboundSchema` instead. */
  export const outboundSchema = AppBskyVideoUploadVideoResponse$outboundSchema;
  /** @deprecated use `AppBskyVideoUploadVideoResponse$Outbound` instead. */
  export type Outbound = AppBskyVideoUploadVideoResponse$Outbound;
}

export function appBskyVideoUploadVideoResponseToJSON(
  appBskyVideoUploadVideoResponse: AppBskyVideoUploadVideoResponse,
): string {
  return JSON.stringify(
    AppBskyVideoUploadVideoResponse$outboundSchema.parse(
      appBskyVideoUploadVideoResponse,
    ),
  );
}

export function appBskyVideoUploadVideoResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyVideoUploadVideoResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyVideoUploadVideoResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyVideoUploadVideoResponse' from JSON`,
  );
}
