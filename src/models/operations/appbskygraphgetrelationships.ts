/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyGraphGetRelationshipsRequest = {
  /**
   * Primary account requesting relationships for.
   */
  actor: string;
  /**
   * List of 'other' accounts to be related back to the primary.
   */
  others?: Array<string> | undefined;
};

export type Relationships =
  | components.AppBskyGraphDefsNotFoundActor
  | components.AppBskyGraphDefsRelationship;

/**
 * OK
 */
export type AppBskyGraphGetRelationshipsResponseBody = {
  actor?: string | undefined;
  relationships: Array<
    | components.AppBskyGraphDefsNotFoundActor
    | components.AppBskyGraphDefsRelationship
  >;
};

/** @internal */
export const AppBskyGraphGetRelationshipsRequest$inboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  actor: z.string(),
  others: z.array(z.string()).optional(),
});

/** @internal */
export type AppBskyGraphGetRelationshipsRequest$Outbound = {
  actor: string;
  others?: Array<string> | undefined;
};

/** @internal */
export const AppBskyGraphGetRelationshipsRequest$outboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsRequest$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetRelationshipsRequest
> = z.object({
  actor: z.string(),
  others: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetRelationshipsRequest$ {
  /** @deprecated use `AppBskyGraphGetRelationshipsRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetRelationshipsRequest$inboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetRelationshipsRequest$outboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsRequest$Outbound` instead. */
  export type Outbound = AppBskyGraphGetRelationshipsRequest$Outbound;
}

export function appBskyGraphGetRelationshipsRequestToJSON(
  appBskyGraphGetRelationshipsRequest: AppBskyGraphGetRelationshipsRequest,
): string {
  return JSON.stringify(
    AppBskyGraphGetRelationshipsRequest$outboundSchema.parse(
      appBskyGraphGetRelationshipsRequest,
    ),
  );
}

export function appBskyGraphGetRelationshipsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyGraphGetRelationshipsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyGraphGetRelationshipsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyGraphGetRelationshipsRequest' from JSON`,
  );
}

/** @internal */
export const Relationships$inboundSchema: z.ZodType<
  Relationships,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.AppBskyGraphDefsNotFoundActor$inboundSchema,
  components.AppBskyGraphDefsRelationship$inboundSchema,
]);

/** @internal */
export type Relationships$Outbound =
  | components.AppBskyGraphDefsNotFoundActor$Outbound
  | components.AppBskyGraphDefsRelationship$Outbound;

/** @internal */
export const Relationships$outboundSchema: z.ZodType<
  Relationships$Outbound,
  z.ZodTypeDef,
  Relationships
> = z.union([
  components.AppBskyGraphDefsNotFoundActor$outboundSchema,
  components.AppBskyGraphDefsRelationship$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Relationships$ {
  /** @deprecated use `Relationships$inboundSchema` instead. */
  export const inboundSchema = Relationships$inboundSchema;
  /** @deprecated use `Relationships$outboundSchema` instead. */
  export const outboundSchema = Relationships$outboundSchema;
  /** @deprecated use `Relationships$Outbound` instead. */
  export type Outbound = Relationships$Outbound;
}

export function relationshipsToJSON(relationships: Relationships): string {
  return JSON.stringify(Relationships$outboundSchema.parse(relationships));
}

export function relationshipsFromJSON(
  jsonString: string,
): SafeParseResult<Relationships, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Relationships$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Relationships' from JSON`,
  );
}

/** @internal */
export const AppBskyGraphGetRelationshipsResponseBody$inboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  actor: z.string().optional(),
  relationships: z.array(
    z.union([
      components.AppBskyGraphDefsNotFoundActor$inboundSchema,
      components.AppBskyGraphDefsRelationship$inboundSchema,
    ]),
  ),
});

/** @internal */
export type AppBskyGraphGetRelationshipsResponseBody$Outbound = {
  actor?: string | undefined;
  relationships: Array<
    | components.AppBskyGraphDefsNotFoundActor$Outbound
    | components.AppBskyGraphDefsRelationship$Outbound
  >;
};

/** @internal */
export const AppBskyGraphGetRelationshipsResponseBody$outboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetRelationshipsResponseBody
> = z.object({
  actor: z.string().optional(),
  relationships: z.array(
    z.union([
      components.AppBskyGraphDefsNotFoundActor$outboundSchema,
      components.AppBskyGraphDefsRelationship$outboundSchema,
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetRelationshipsResponseBody$ {
  /** @deprecated use `AppBskyGraphGetRelationshipsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetRelationshipsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetRelationshipsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyGraphGetRelationshipsResponseBody$Outbound;
}

export function appBskyGraphGetRelationshipsResponseBodyToJSON(
  appBskyGraphGetRelationshipsResponseBody:
    AppBskyGraphGetRelationshipsResponseBody,
): string {
  return JSON.stringify(
    AppBskyGraphGetRelationshipsResponseBody$outboundSchema.parse(
      appBskyGraphGetRelationshipsResponseBody,
    ),
  );
}

export function appBskyGraphGetRelationshipsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  AppBskyGraphGetRelationshipsResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyGraphGetRelationshipsResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppBskyGraphGetRelationshipsResponseBody' from JSON`,
  );
}
