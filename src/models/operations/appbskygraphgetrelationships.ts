/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyGraphGetRelationshipsRequest = {
  /**
   * Primary account requesting relationships for.
   */
  actor: string;
  /**
   * List of 'other' accounts to be related back to the primary.
   */
  others?: Array<string> | undefined;
};

export type Relationship =
  | components.AppBskyGraphDefsRelationship
  | components.AppBskyGraphDefsNotFoundActor;

/**
 * OK
 */
export type AppBskyGraphGetRelationshipsResponse = {
  actor?: string | undefined;
  relationships: Array<
    | components.AppBskyGraphDefsRelationship
    | components.AppBskyGraphDefsNotFoundActor
  >;
};

/** @internal */
export const AppBskyGraphGetRelationshipsRequest$inboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  actor: z.string(),
  others: z.array(z.string()).optional(),
});

/** @internal */
export type AppBskyGraphGetRelationshipsRequest$Outbound = {
  actor: string;
  others?: Array<string> | undefined;
};

/** @internal */
export const AppBskyGraphGetRelationshipsRequest$outboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsRequest$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetRelationshipsRequest
> = z.object({
  actor: z.string(),
  others: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetRelationshipsRequest$ {
  /** @deprecated use `AppBskyGraphGetRelationshipsRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetRelationshipsRequest$inboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetRelationshipsRequest$outboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsRequest$Outbound` instead. */
  export type Outbound = AppBskyGraphGetRelationshipsRequest$Outbound;
}

export function appBskyGraphGetRelationshipsRequestToJSON(
  appBskyGraphGetRelationshipsRequest: AppBskyGraphGetRelationshipsRequest,
): string {
  return JSON.stringify(
    AppBskyGraphGetRelationshipsRequest$outboundSchema.parse(
      appBskyGraphGetRelationshipsRequest,
    ),
  );
}

export function appBskyGraphGetRelationshipsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyGraphGetRelationshipsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyGraphGetRelationshipsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyGraphGetRelationshipsRequest' from JSON`,
  );
}

/** @internal */
export const Relationship$inboundSchema: z.ZodType<
  Relationship,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.AppBskyGraphDefsRelationship$inboundSchema,
  components.AppBskyGraphDefsNotFoundActor$inboundSchema,
]);

/** @internal */
export type Relationship$Outbound =
  | components.AppBskyGraphDefsRelationship$Outbound
  | components.AppBskyGraphDefsNotFoundActor$Outbound;

/** @internal */
export const Relationship$outboundSchema: z.ZodType<
  Relationship$Outbound,
  z.ZodTypeDef,
  Relationship
> = z.union([
  components.AppBskyGraphDefsRelationship$outboundSchema,
  components.AppBskyGraphDefsNotFoundActor$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Relationship$ {
  /** @deprecated use `Relationship$inboundSchema` instead. */
  export const inboundSchema = Relationship$inboundSchema;
  /** @deprecated use `Relationship$outboundSchema` instead. */
  export const outboundSchema = Relationship$outboundSchema;
  /** @deprecated use `Relationship$Outbound` instead. */
  export type Outbound = Relationship$Outbound;
}

export function relationshipToJSON(relationship: Relationship): string {
  return JSON.stringify(Relationship$outboundSchema.parse(relationship));
}

export function relationshipFromJSON(
  jsonString: string,
): SafeParseResult<Relationship, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Relationship$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Relationship' from JSON`,
  );
}

/** @internal */
export const AppBskyGraphGetRelationshipsResponse$inboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  actor: z.string().optional(),
  relationships: z.array(
    z.union([
      components.AppBskyGraphDefsRelationship$inboundSchema,
      components.AppBskyGraphDefsNotFoundActor$inboundSchema,
    ]),
  ),
});

/** @internal */
export type AppBskyGraphGetRelationshipsResponse$Outbound = {
  actor?: string | undefined;
  relationships: Array<
    | components.AppBskyGraphDefsRelationship$Outbound
    | components.AppBskyGraphDefsNotFoundActor$Outbound
  >;
};

/** @internal */
export const AppBskyGraphGetRelationshipsResponse$outboundSchema: z.ZodType<
  AppBskyGraphGetRelationshipsResponse$Outbound,
  z.ZodTypeDef,
  AppBskyGraphGetRelationshipsResponse
> = z.object({
  actor: z.string().optional(),
  relationships: z.array(
    z.union([
      components.AppBskyGraphDefsRelationship$outboundSchema,
      components.AppBskyGraphDefsNotFoundActor$outboundSchema,
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyGraphGetRelationshipsResponse$ {
  /** @deprecated use `AppBskyGraphGetRelationshipsResponse$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyGraphGetRelationshipsResponse$inboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsResponse$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyGraphGetRelationshipsResponse$outboundSchema;
  /** @deprecated use `AppBskyGraphGetRelationshipsResponse$Outbound` instead. */
  export type Outbound = AppBskyGraphGetRelationshipsResponse$Outbound;
}

export function appBskyGraphGetRelationshipsResponseToJSON(
  appBskyGraphGetRelationshipsResponse: AppBskyGraphGetRelationshipsResponse,
): string {
  return JSON.stringify(
    AppBskyGraphGetRelationshipsResponse$outboundSchema.parse(
      appBskyGraphGetRelationshipsResponse,
    ),
  );
}

export function appBskyGraphGetRelationshipsResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyGraphGetRelationshipsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyGraphGetRelationshipsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyGraphGetRelationshipsResponse' from JSON`,
  );
}
