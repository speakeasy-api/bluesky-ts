/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerConfirmEmailRequestBody = {
  email: string;
  token: string;
};

/** @internal */
export const ComAtprotoServerConfirmEmailRequestBody$inboundSchema: z.ZodType<
  ComAtprotoServerConfirmEmailRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  token: z.string(),
});

/** @internal */
export type ComAtprotoServerConfirmEmailRequestBody$Outbound = {
  email: string;
  token: string;
};

/** @internal */
export const ComAtprotoServerConfirmEmailRequestBody$outboundSchema: z.ZodType<
  ComAtprotoServerConfirmEmailRequestBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerConfirmEmailRequestBody
> = z.object({
  email: z.string(),
  token: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerConfirmEmailRequestBody$ {
  /** @deprecated use `ComAtprotoServerConfirmEmailRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerConfirmEmailRequestBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerConfirmEmailRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerConfirmEmailRequestBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerConfirmEmailRequestBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerConfirmEmailRequestBody$Outbound;
}

export function comAtprotoServerConfirmEmailRequestBodyToJSON(
  comAtprotoServerConfirmEmailRequestBody:
    ComAtprotoServerConfirmEmailRequestBody,
): string {
  return JSON.stringify(
    ComAtprotoServerConfirmEmailRequestBody$outboundSchema.parse(
      comAtprotoServerConfirmEmailRequestBody,
    ),
  );
}

export function comAtprotoServerConfirmEmailRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerConfirmEmailRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerConfirmEmailRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerConfirmEmailRequestBody' from JSON`,
  );
}
