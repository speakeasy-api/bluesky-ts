/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyNotificationGetUnreadCountRequest = {
  priority?: boolean | undefined;
  seenAt?: Date | undefined;
};

/**
 * OK
 */
export type AppBskyNotificationGetUnreadCountResponseBody = {
  count: number;
};

/** @internal */
export const AppBskyNotificationGetUnreadCountRequest$inboundSchema: z.ZodType<
  AppBskyNotificationGetUnreadCountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  priority: z.boolean().optional(),
  seenAt: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type AppBskyNotificationGetUnreadCountRequest$Outbound = {
  priority?: boolean | undefined;
  seenAt?: string | undefined;
};

/** @internal */
export const AppBskyNotificationGetUnreadCountRequest$outboundSchema: z.ZodType<
  AppBskyNotificationGetUnreadCountRequest$Outbound,
  z.ZodTypeDef,
  AppBskyNotificationGetUnreadCountRequest
> = z.object({
  priority: z.boolean().optional(),
  seenAt: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationGetUnreadCountRequest$ {
  /** @deprecated use `AppBskyNotificationGetUnreadCountRequest$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationGetUnreadCountRequest$inboundSchema;
  /** @deprecated use `AppBskyNotificationGetUnreadCountRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationGetUnreadCountRequest$outboundSchema;
  /** @deprecated use `AppBskyNotificationGetUnreadCountRequest$Outbound` instead. */
  export type Outbound = AppBskyNotificationGetUnreadCountRequest$Outbound;
}

export function appBskyNotificationGetUnreadCountRequestToJSON(
  appBskyNotificationGetUnreadCountRequest:
    AppBskyNotificationGetUnreadCountRequest,
): string {
  return JSON.stringify(
    AppBskyNotificationGetUnreadCountRequest$outboundSchema.parse(
      appBskyNotificationGetUnreadCountRequest,
    ),
  );
}

export function appBskyNotificationGetUnreadCountRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  AppBskyNotificationGetUnreadCountRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyNotificationGetUnreadCountRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppBskyNotificationGetUnreadCountRequest' from JSON`,
  );
}

/** @internal */
export const AppBskyNotificationGetUnreadCountResponseBody$inboundSchema:
  z.ZodType<
    AppBskyNotificationGetUnreadCountResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    count: z.number().int(),
  });

/** @internal */
export type AppBskyNotificationGetUnreadCountResponseBody$Outbound = {
  count: number;
};

/** @internal */
export const AppBskyNotificationGetUnreadCountResponseBody$outboundSchema:
  z.ZodType<
    AppBskyNotificationGetUnreadCountResponseBody$Outbound,
    z.ZodTypeDef,
    AppBskyNotificationGetUnreadCountResponseBody
  > = z.object({
    count: z.number().int(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyNotificationGetUnreadCountResponseBody$ {
  /** @deprecated use `AppBskyNotificationGetUnreadCountResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyNotificationGetUnreadCountResponseBody$inboundSchema;
  /** @deprecated use `AppBskyNotificationGetUnreadCountResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyNotificationGetUnreadCountResponseBody$outboundSchema;
  /** @deprecated use `AppBskyNotificationGetUnreadCountResponseBody$Outbound` instead. */
  export type Outbound = AppBskyNotificationGetUnreadCountResponseBody$Outbound;
}

export function appBskyNotificationGetUnreadCountResponseBodyToJSON(
  appBskyNotificationGetUnreadCountResponseBody:
    AppBskyNotificationGetUnreadCountResponseBody,
): string {
  return JSON.stringify(
    AppBskyNotificationGetUnreadCountResponseBody$outboundSchema.parse(
      appBskyNotificationGetUnreadCountResponseBody,
    ),
  );
}

export function appBskyNotificationGetUnreadCountResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  AppBskyNotificationGetUnreadCountResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyNotificationGetUnreadCountResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'AppBskyNotificationGetUnreadCountResponseBody' from JSON`,
  );
}
