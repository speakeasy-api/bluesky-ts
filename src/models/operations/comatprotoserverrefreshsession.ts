/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Hosting status of the account. If not specified, then assume 'active'.
 */
export const ComAtprotoServerRefreshSessionStatus = {
  Takendown: "takendown",
  Suspended: "suspended",
  Deactivated: "deactivated",
} as const;
/**
 * Hosting status of the account. If not specified, then assume 'active'.
 */
export type ComAtprotoServerRefreshSessionStatus = ClosedEnum<
  typeof ComAtprotoServerRefreshSessionStatus
>;

/**
 * OK
 */
export type ComAtprotoServerRefreshSessionResponseBody = {
  accessJwt: string;
  refreshJwt: string;
  handle: string;
  did: string;
  didDoc?: any | undefined;
  active?: boolean | undefined;
  /**
   * Hosting status of the account. If not specified, then assume 'active'.
   */
  status?: ComAtprotoServerRefreshSessionStatus | undefined;
};

/** @internal */
export const ComAtprotoServerRefreshSessionStatus$inboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRefreshSessionStatus> = z.nativeEnum(
    ComAtprotoServerRefreshSessionStatus,
  );

/** @internal */
export const ComAtprotoServerRefreshSessionStatus$outboundSchema:
  z.ZodNativeEnum<typeof ComAtprotoServerRefreshSessionStatus> =
    ComAtprotoServerRefreshSessionStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionStatus$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionStatus$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionStatus$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionStatus$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionStatus$outboundSchema;
}

/** @internal */
export const ComAtprotoServerRefreshSessionResponseBody$inboundSchema:
  z.ZodType<ComAtprotoServerRefreshSessionResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      accessJwt: z.string(),
      refreshJwt: z.string(),
      handle: z.string(),
      did: z.string(),
      didDoc: z.any().optional(),
      active: z.boolean().optional(),
      status: ComAtprotoServerRefreshSessionStatus$inboundSchema.optional(),
    });

/** @internal */
export type ComAtprotoServerRefreshSessionResponseBody$Outbound = {
  accessJwt: string;
  refreshJwt: string;
  handle: string;
  did: string;
  didDoc?: any | undefined;
  active?: boolean | undefined;
  status?: string | undefined;
};

/** @internal */
export const ComAtprotoServerRefreshSessionResponseBody$outboundSchema:
  z.ZodType<
    ComAtprotoServerRefreshSessionResponseBody$Outbound,
    z.ZodTypeDef,
    ComAtprotoServerRefreshSessionResponseBody
  > = z.object({
    accessJwt: z.string(),
    refreshJwt: z.string(),
    handle: z.string(),
    did: z.string(),
    didDoc: z.any().optional(),
    active: z.boolean().optional(),
    status: ComAtprotoServerRefreshSessionStatus$outboundSchema.optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerRefreshSessionResponseBody$ {
  /** @deprecated use `ComAtprotoServerRefreshSessionResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoServerRefreshSessionResponseBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerRefreshSessionResponseBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerRefreshSessionResponseBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerRefreshSessionResponseBody$Outbound;
}

export function comAtprotoServerRefreshSessionResponseBodyToJSON(
  comAtprotoServerRefreshSessionResponseBody:
    ComAtprotoServerRefreshSessionResponseBody,
): string {
  return JSON.stringify(
    ComAtprotoServerRefreshSessionResponseBody$outboundSchema.parse(
      comAtprotoServerRefreshSessionResponseBody,
    ),
  );
}

export function comAtprotoServerRefreshSessionResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  ComAtprotoServerRefreshSessionResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoServerRefreshSessionResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ComAtprotoServerRefreshSessionResponseBody' from JSON`,
  );
}
