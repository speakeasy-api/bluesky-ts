/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyActorSearchActorsRequest = {
  /**
   * Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.
   */
  q?: string | undefined;
  limit?: number | undefined;
  cursor?: string | undefined;
};

/**
 * OK
 */
export type AppBskyActorSearchActorsResponseBody = {
  cursor?: string | undefined;
  actors: Array<components.AppBskyActorDefsProfileView>;
};

/** @internal */
export const AppBskyActorSearchActorsRequest$inboundSchema: z.ZodType<
  AppBskyActorSearchActorsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  q: z.string().optional(),
  limit: z.number().int().default(25),
  cursor: z.string().optional(),
});

/** @internal */
export type AppBskyActorSearchActorsRequest$Outbound = {
  q?: string | undefined;
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const AppBskyActorSearchActorsRequest$outboundSchema: z.ZodType<
  AppBskyActorSearchActorsRequest$Outbound,
  z.ZodTypeDef,
  AppBskyActorSearchActorsRequest
> = z.object({
  q: z.string().optional(),
  limit: z.number().int().default(25),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsRequest$ {
  /** @deprecated use `AppBskyActorSearchActorsRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyActorSearchActorsRequest$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsRequest$outboundSchema` instead. */
  export const outboundSchema = AppBskyActorSearchActorsRequest$outboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsRequest$Outbound` instead. */
  export type Outbound = AppBskyActorSearchActorsRequest$Outbound;
}

export function appBskyActorSearchActorsRequestToJSON(
  appBskyActorSearchActorsRequest: AppBskyActorSearchActorsRequest,
): string {
  return JSON.stringify(
    AppBskyActorSearchActorsRequest$outboundSchema.parse(
      appBskyActorSearchActorsRequest,
    ),
  );
}

export function appBskyActorSearchActorsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyActorSearchActorsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyActorSearchActorsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyActorSearchActorsRequest' from JSON`,
  );
}

/** @internal */
export const AppBskyActorSearchActorsResponseBody$inboundSchema: z.ZodType<
  AppBskyActorSearchActorsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
  actors: z.array(components.AppBskyActorDefsProfileView$inboundSchema),
});

/** @internal */
export type AppBskyActorSearchActorsResponseBody$Outbound = {
  cursor?: string | undefined;
  actors: Array<components.AppBskyActorDefsProfileView$Outbound>;
};

/** @internal */
export const AppBskyActorSearchActorsResponseBody$outboundSchema: z.ZodType<
  AppBskyActorSearchActorsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyActorSearchActorsResponseBody
> = z.object({
  cursor: z.string().optional(),
  actors: z.array(components.AppBskyActorDefsProfileView$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorSearchActorsResponseBody$ {
  /** @deprecated use `AppBskyActorSearchActorsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorSearchActorsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorSearchActorsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyActorSearchActorsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyActorSearchActorsResponseBody$Outbound;
}

export function appBskyActorSearchActorsResponseBodyToJSON(
  appBskyActorSearchActorsResponseBody: AppBskyActorSearchActorsResponseBody,
): string {
  return JSON.stringify(
    AppBskyActorSearchActorsResponseBody$outboundSchema.parse(
      appBskyActorSearchActorsResponseBody,
    ),
  );
}

export function appBskyActorSearchActorsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyActorSearchActorsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyActorSearchActorsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyActorSearchActorsResponseBody' from JSON`,
  );
}
