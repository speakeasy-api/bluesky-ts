/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoServerResetPasswordBody = {
  token: string;
  password: string;
};

/** @internal */
export const ComAtprotoServerResetPasswordBody$inboundSchema: z.ZodType<
  ComAtprotoServerResetPasswordBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  token: z.string(),
  password: z.string(),
});

/** @internal */
export type ComAtprotoServerResetPasswordBody$Outbound = {
  token: string;
  password: string;
};

/** @internal */
export const ComAtprotoServerResetPasswordBody$outboundSchema: z.ZodType<
  ComAtprotoServerResetPasswordBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoServerResetPasswordBody
> = z.object({
  token: z.string(),
  password: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoServerResetPasswordBody$ {
  /** @deprecated use `ComAtprotoServerResetPasswordBody$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoServerResetPasswordBody$inboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoServerResetPasswordBody$outboundSchema;
  /** @deprecated use `ComAtprotoServerResetPasswordBody$Outbound` instead. */
  export type Outbound = ComAtprotoServerResetPasswordBody$Outbound;
}

export function comAtprotoServerResetPasswordBodyToJSON(
  comAtprotoServerResetPasswordBody: ComAtprotoServerResetPasswordBody,
): string {
  return JSON.stringify(
    ComAtprotoServerResetPasswordBody$outboundSchema.parse(
      comAtprotoServerResetPasswordBody,
    ),
  );
}

export function comAtprotoServerResetPasswordBodyFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoServerResetPasswordBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoServerResetPasswordBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoServerResetPasswordBody' from JSON`,
  );
}
