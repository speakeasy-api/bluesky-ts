/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolsOzoneSetDeleteSetRequest = {
  /**
   * Name of the set to delete
   */
  name: string;
};

export type ToolsOzoneSetDeleteSetUnknown = {};

/**
 * OK
 */
export type ToolsOzoneSetDeleteSetResponse = {
  unknown?: ToolsOzoneSetDeleteSetUnknown | undefined;
};

/** @internal */
export const ToolsOzoneSetDeleteSetRequest$inboundSchema: z.ZodType<
  ToolsOzoneSetDeleteSetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ToolsOzoneSetDeleteSetRequest$Outbound = {
  name: string;
};

/** @internal */
export const ToolsOzoneSetDeleteSetRequest$outboundSchema: z.ZodType<
  ToolsOzoneSetDeleteSetRequest$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetDeleteSetRequest
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDeleteSetRequest$ {
  /** @deprecated use `ToolsOzoneSetDeleteSetRequest$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetDeleteSetRequest$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteSetRequest$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetDeleteSetRequest$outboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteSetRequest$Outbound` instead. */
  export type Outbound = ToolsOzoneSetDeleteSetRequest$Outbound;
}

export function toolsOzoneSetDeleteSetRequestToJSON(
  toolsOzoneSetDeleteSetRequest: ToolsOzoneSetDeleteSetRequest,
): string {
  return JSON.stringify(
    ToolsOzoneSetDeleteSetRequest$outboundSchema.parse(
      toolsOzoneSetDeleteSetRequest,
    ),
  );
}

export function toolsOzoneSetDeleteSetRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetDeleteSetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetDeleteSetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetDeleteSetRequest' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSetDeleteSetUnknown$inboundSchema: z.ZodType<
  ToolsOzoneSetDeleteSetUnknown,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ToolsOzoneSetDeleteSetUnknown$Outbound = {};

/** @internal */
export const ToolsOzoneSetDeleteSetUnknown$outboundSchema: z.ZodType<
  ToolsOzoneSetDeleteSetUnknown$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetDeleteSetUnknown
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDeleteSetUnknown$ {
  /** @deprecated use `ToolsOzoneSetDeleteSetUnknown$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetDeleteSetUnknown$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteSetUnknown$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetDeleteSetUnknown$outboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteSetUnknown$Outbound` instead. */
  export type Outbound = ToolsOzoneSetDeleteSetUnknown$Outbound;
}

export function toolsOzoneSetDeleteSetUnknownToJSON(
  toolsOzoneSetDeleteSetUnknown: ToolsOzoneSetDeleteSetUnknown,
): string {
  return JSON.stringify(
    ToolsOzoneSetDeleteSetUnknown$outboundSchema.parse(
      toolsOzoneSetDeleteSetUnknown,
    ),
  );
}

export function toolsOzoneSetDeleteSetUnknownFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetDeleteSetUnknown, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetDeleteSetUnknown$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetDeleteSetUnknown' from JSON`,
  );
}

/** @internal */
export const ToolsOzoneSetDeleteSetResponse$inboundSchema: z.ZodType<
  ToolsOzoneSetDeleteSetResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  _unknown_: z.lazy(() => ToolsOzoneSetDeleteSetUnknown$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "_unknown_": "unknown",
  });
});

/** @internal */
export type ToolsOzoneSetDeleteSetResponse$Outbound = {
  _unknown_?: ToolsOzoneSetDeleteSetUnknown$Outbound | undefined;
};

/** @internal */
export const ToolsOzoneSetDeleteSetResponse$outboundSchema: z.ZodType<
  ToolsOzoneSetDeleteSetResponse$Outbound,
  z.ZodTypeDef,
  ToolsOzoneSetDeleteSetResponse
> = z.object({
  unknown: z.lazy(() => ToolsOzoneSetDeleteSetUnknown$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    unknown: "_unknown_",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolsOzoneSetDeleteSetResponse$ {
  /** @deprecated use `ToolsOzoneSetDeleteSetResponse$inboundSchema` instead. */
  export const inboundSchema = ToolsOzoneSetDeleteSetResponse$inboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteSetResponse$outboundSchema` instead. */
  export const outboundSchema = ToolsOzoneSetDeleteSetResponse$outboundSchema;
  /** @deprecated use `ToolsOzoneSetDeleteSetResponse$Outbound` instead. */
  export type Outbound = ToolsOzoneSetDeleteSetResponse$Outbound;
}

export function toolsOzoneSetDeleteSetResponseToJSON(
  toolsOzoneSetDeleteSetResponse: ToolsOzoneSetDeleteSetResponse,
): string {
  return JSON.stringify(
    ToolsOzoneSetDeleteSetResponse$outboundSchema.parse(
      toolsOzoneSetDeleteSetResponse,
    ),
  );
}

export function toolsOzoneSetDeleteSetResponseFromJSON(
  jsonString: string,
): SafeParseResult<ToolsOzoneSetDeleteSetResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolsOzoneSetDeleteSetResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolsOzoneSetDeleteSetResponse' from JSON`,
  );
}
