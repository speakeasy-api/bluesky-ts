/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoSyncGetRepoRequest = {
  /**
   * The DID of the repo.
   */
  did: string;
  /**
   * The revision ('rev') of the repo to create a diff from.
   */
  since?: string | undefined;
};

/** @internal */
export const ComAtprotoSyncGetRepoRequest$inboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  did: z.string(),
  since: z.string().optional(),
});

/** @internal */
export type ComAtprotoSyncGetRepoRequest$Outbound = {
  did: string;
  since?: string | undefined;
};

/** @internal */
export const ComAtprotoSyncGetRepoRequest$outboundSchema: z.ZodType<
  ComAtprotoSyncGetRepoRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoSyncGetRepoRequest
> = z.object({
  did: z.string(),
  since: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoSyncGetRepoRequest$ {
  /** @deprecated use `ComAtprotoSyncGetRepoRequest$inboundSchema` instead. */
  export const inboundSchema = ComAtprotoSyncGetRepoRequest$inboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoRequest$outboundSchema` instead. */
  export const outboundSchema = ComAtprotoSyncGetRepoRequest$outboundSchema;
  /** @deprecated use `ComAtprotoSyncGetRepoRequest$Outbound` instead. */
  export type Outbound = ComAtprotoSyncGetRepoRequest$Outbound;
}

export function comAtprotoSyncGetRepoRequestToJSON(
  comAtprotoSyncGetRepoRequest: ComAtprotoSyncGetRepoRequest,
): string {
  return JSON.stringify(
    ComAtprotoSyncGetRepoRequest$outboundSchema.parse(
      comAtprotoSyncGetRepoRequest,
    ),
  );
}

export function comAtprotoSyncGetRepoRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoSyncGetRepoRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ComAtprotoSyncGetRepoRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoSyncGetRepoRequest' from JSON`,
  );
}
