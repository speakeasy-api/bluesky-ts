/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChatBskyConvoUnmuteConvoRequestBody = {
  convoId: string;
};

/**
 * OK
 */
export type ChatBskyConvoUnmuteConvoResponseBody = {
  convo: components.ChatBskyConvoDefsConvoView;
};

/** @internal */
export const ChatBskyConvoUnmuteConvoRequestBody$inboundSchema: z.ZodType<
  ChatBskyConvoUnmuteConvoRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  convoId: z.string(),
});

/** @internal */
export type ChatBskyConvoUnmuteConvoRequestBody$Outbound = {
  convoId: string;
};

/** @internal */
export const ChatBskyConvoUnmuteConvoRequestBody$outboundSchema: z.ZodType<
  ChatBskyConvoUnmuteConvoRequestBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoUnmuteConvoRequestBody
> = z.object({
  convoId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoUnmuteConvoRequestBody$ {
  /** @deprecated use `ChatBskyConvoUnmuteConvoRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoUnmuteConvoRequestBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoUnmuteConvoRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoUnmuteConvoRequestBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoUnmuteConvoRequestBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoUnmuteConvoRequestBody$Outbound;
}

export function chatBskyConvoUnmuteConvoRequestBodyToJSON(
  chatBskyConvoUnmuteConvoRequestBody: ChatBskyConvoUnmuteConvoRequestBody,
): string {
  return JSON.stringify(
    ChatBskyConvoUnmuteConvoRequestBody$outboundSchema.parse(
      chatBskyConvoUnmuteConvoRequestBody,
    ),
  );
}

export function chatBskyConvoUnmuteConvoRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoUnmuteConvoRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoUnmuteConvoRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoUnmuteConvoRequestBody' from JSON`,
  );
}

/** @internal */
export const ChatBskyConvoUnmuteConvoResponseBody$inboundSchema: z.ZodType<
  ChatBskyConvoUnmuteConvoResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$inboundSchema,
});

/** @internal */
export type ChatBskyConvoUnmuteConvoResponseBody$Outbound = {
  convo: components.ChatBskyConvoDefsConvoView$Outbound;
};

/** @internal */
export const ChatBskyConvoUnmuteConvoResponseBody$outboundSchema: z.ZodType<
  ChatBskyConvoUnmuteConvoResponseBody$Outbound,
  z.ZodTypeDef,
  ChatBskyConvoUnmuteConvoResponseBody
> = z.object({
  convo: components.ChatBskyConvoDefsConvoView$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatBskyConvoUnmuteConvoResponseBody$ {
  /** @deprecated use `ChatBskyConvoUnmuteConvoResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    ChatBskyConvoUnmuteConvoResponseBody$inboundSchema;
  /** @deprecated use `ChatBskyConvoUnmuteConvoResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ChatBskyConvoUnmuteConvoResponseBody$outboundSchema;
  /** @deprecated use `ChatBskyConvoUnmuteConvoResponseBody$Outbound` instead. */
  export type Outbound = ChatBskyConvoUnmuteConvoResponseBody$Outbound;
}

export function chatBskyConvoUnmuteConvoResponseBodyToJSON(
  chatBskyConvoUnmuteConvoResponseBody: ChatBskyConvoUnmuteConvoResponseBody,
): string {
  return JSON.stringify(
    ChatBskyConvoUnmuteConvoResponseBody$outboundSchema.parse(
      chatBskyConvoUnmuteConvoResponseBody,
    ),
  );
}

export function chatBskyConvoUnmuteConvoResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChatBskyConvoUnmuteConvoResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatBskyConvoUnmuteConvoResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatBskyConvoUnmuteConvoResponseBody' from JSON`,
  );
}
