/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Combinations of post/repost types to include in response.
 */
export const Filter = {
  PostsWithReplies: "posts_with_replies",
  PostsNoReplies: "posts_no_replies",
  PostsWithMedia: "posts_with_media",
  PostsAndAuthorThreads: "posts_and_author_threads",
} as const;
/**
 * Combinations of post/repost types to include in response.
 */
export type Filter = ClosedEnum<typeof Filter>;

export type AppBskyFeedGetAuthorFeedRequest = {
  actor: string;
  limit?: number | undefined;
  cursor?: string | undefined;
  /**
   * Combinations of post/repost types to include in response.
   */
  filter?: Filter | undefined;
  includePins?: boolean | undefined;
};

/**
 * OK
 */
export type AppBskyFeedGetAuthorFeedResponseBody = {
  cursor?: string | undefined;
  feed: Array<components.AppBskyFeedDefsFeedViewPost>;
};

/** @internal */
export const Filter$inboundSchema: z.ZodNativeEnum<typeof Filter> = z
  .nativeEnum(Filter);

/** @internal */
export const Filter$outboundSchema: z.ZodNativeEnum<typeof Filter> =
  Filter$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Filter$ {
  /** @deprecated use `Filter$inboundSchema` instead. */
  export const inboundSchema = Filter$inboundSchema;
  /** @deprecated use `Filter$outboundSchema` instead. */
  export const outboundSchema = Filter$outboundSchema;
}

/** @internal */
export const AppBskyFeedGetAuthorFeedRequest$inboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  actor: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
  filter: Filter$inboundSchema.default("posts_with_replies"),
  includePins: z.boolean().optional(),
});

/** @internal */
export type AppBskyFeedGetAuthorFeedRequest$Outbound = {
  actor: string;
  limit: number;
  cursor?: string | undefined;
  filter: string;
  includePins?: boolean | undefined;
};

/** @internal */
export const AppBskyFeedGetAuthorFeedRequest$outboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedRequest$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetAuthorFeedRequest
> = z.object({
  actor: z.string(),
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
  filter: Filter$outboundSchema.default("posts_with_replies"),
  includePins: z.boolean().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetAuthorFeedRequest$ {
  /** @deprecated use `AppBskyFeedGetAuthorFeedRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyFeedGetAuthorFeedRequest$inboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedRequest$outboundSchema` instead. */
  export const outboundSchema = AppBskyFeedGetAuthorFeedRequest$outboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedRequest$Outbound` instead. */
  export type Outbound = AppBskyFeedGetAuthorFeedRequest$Outbound;
}

export function appBskyFeedGetAuthorFeedRequestToJSON(
  appBskyFeedGetAuthorFeedRequest: AppBskyFeedGetAuthorFeedRequest,
): string {
  return JSON.stringify(
    AppBskyFeedGetAuthorFeedRequest$outboundSchema.parse(
      appBskyFeedGetAuthorFeedRequest,
    ),
  );
}

export function appBskyFeedGetAuthorFeedRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetAuthorFeedRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyFeedGetAuthorFeedRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetAuthorFeedRequest' from JSON`,
  );
}

/** @internal */
export const AppBskyFeedGetAuthorFeedResponseBody$inboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
  feed: z.array(components.AppBskyFeedDefsFeedViewPost$inboundSchema),
});

/** @internal */
export type AppBskyFeedGetAuthorFeedResponseBody$Outbound = {
  cursor?: string | undefined;
  feed: Array<components.AppBskyFeedDefsFeedViewPost$Outbound>;
};

/** @internal */
export const AppBskyFeedGetAuthorFeedResponseBody$outboundSchema: z.ZodType<
  AppBskyFeedGetAuthorFeedResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyFeedGetAuthorFeedResponseBody
> = z.object({
  cursor: z.string().optional(),
  feed: z.array(components.AppBskyFeedDefsFeedViewPost$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyFeedGetAuthorFeedResponseBody$ {
  /** @deprecated use `AppBskyFeedGetAuthorFeedResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyFeedGetAuthorFeedResponseBody$inboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyFeedGetAuthorFeedResponseBody$outboundSchema;
  /** @deprecated use `AppBskyFeedGetAuthorFeedResponseBody$Outbound` instead. */
  export type Outbound = AppBskyFeedGetAuthorFeedResponseBody$Outbound;
}

export function appBskyFeedGetAuthorFeedResponseBodyToJSON(
  appBskyFeedGetAuthorFeedResponseBody: AppBskyFeedGetAuthorFeedResponseBody,
): string {
  return JSON.stringify(
    AppBskyFeedGetAuthorFeedResponseBody$outboundSchema.parse(
      appBskyFeedGetAuthorFeedResponseBody,
    ),
  );
}

export function appBskyFeedGetAuthorFeedResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyFeedGetAuthorFeedResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyFeedGetAuthorFeedResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyFeedGetAuthorFeedResponseBody' from JSON`,
  );
}
