/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoAdminDisableInviteCodesBody = {
  codes?: Array<string> | undefined;
  accounts?: Array<string> | undefined;
};

/** @internal */
export const ComAtprotoAdminDisableInviteCodesBody$inboundSchema: z.ZodType<
  ComAtprotoAdminDisableInviteCodesBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  codes: z.array(z.string()).optional(),
  accounts: z.array(z.string()).optional(),
});

/** @internal */
export type ComAtprotoAdminDisableInviteCodesBody$Outbound = {
  codes?: Array<string> | undefined;
  accounts?: Array<string> | undefined;
};

/** @internal */
export const ComAtprotoAdminDisableInviteCodesBody$outboundSchema: z.ZodType<
  ComAtprotoAdminDisableInviteCodesBody$Outbound,
  z.ZodTypeDef,
  ComAtprotoAdminDisableInviteCodesBody
> = z.object({
  codes: z.array(z.string()).optional(),
  accounts: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoAdminDisableInviteCodesBody$ {
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesBody$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoAdminDisableInviteCodesBody$inboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesBody$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoAdminDisableInviteCodesBody$outboundSchema;
  /** @deprecated use `ComAtprotoAdminDisableInviteCodesBody$Outbound` instead. */
  export type Outbound = ComAtprotoAdminDisableInviteCodesBody$Outbound;
}

export function comAtprotoAdminDisableInviteCodesBodyToJSON(
  comAtprotoAdminDisableInviteCodesBody: ComAtprotoAdminDisableInviteCodesBody,
): string {
  return JSON.stringify(
    ComAtprotoAdminDisableInviteCodesBody$outboundSchema.parse(
      comAtprotoAdminDisableInviteCodesBody,
    ),
  );
}

export function comAtprotoAdminDisableInviteCodesBodyFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoAdminDisableInviteCodesBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoAdminDisableInviteCodesBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoAdminDisableInviteCodesBody' from JSON`,
  );
}
