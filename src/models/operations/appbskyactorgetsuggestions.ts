/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AppBskyActorGetSuggestionsRequest = {
  limit?: number | undefined;
  cursor?: string | undefined;
};

/**
 * OK
 */
export type AppBskyActorGetSuggestionsResponseBody = {
  cursor?: string | undefined;
  actors: Array<components.AppBskyActorDefsProfileView>;
};

export type AppBskyActorGetSuggestionsResponse = {
  result: AppBskyActorGetSuggestionsResponseBody;
};

/** @internal */
export const AppBskyActorGetSuggestionsRequest$inboundSchema: z.ZodType<
  AppBskyActorGetSuggestionsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/** @internal */
export type AppBskyActorGetSuggestionsRequest$Outbound = {
  limit: number;
  cursor?: string | undefined;
};

/** @internal */
export const AppBskyActorGetSuggestionsRequest$outboundSchema: z.ZodType<
  AppBskyActorGetSuggestionsRequest$Outbound,
  z.ZodTypeDef,
  AppBskyActorGetSuggestionsRequest
> = z.object({
  limit: z.number().int().default(50),
  cursor: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetSuggestionsRequest$ {
  /** @deprecated use `AppBskyActorGetSuggestionsRequest$inboundSchema` instead. */
  export const inboundSchema = AppBskyActorGetSuggestionsRequest$inboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsRequest$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetSuggestionsRequest$outboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsRequest$Outbound` instead. */
  export type Outbound = AppBskyActorGetSuggestionsRequest$Outbound;
}

export function appBskyActorGetSuggestionsRequestToJSON(
  appBskyActorGetSuggestionsRequest: AppBskyActorGetSuggestionsRequest,
): string {
  return JSON.stringify(
    AppBskyActorGetSuggestionsRequest$outboundSchema.parse(
      appBskyActorGetSuggestionsRequest,
    ),
  );
}

export function appBskyActorGetSuggestionsRequestFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyActorGetSuggestionsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppBskyActorGetSuggestionsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyActorGetSuggestionsRequest' from JSON`,
  );
}

/** @internal */
export const AppBskyActorGetSuggestionsResponseBody$inboundSchema: z.ZodType<
  AppBskyActorGetSuggestionsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  cursor: z.string().optional(),
  actors: z.array(components.AppBskyActorDefsProfileView$inboundSchema),
});

/** @internal */
export type AppBskyActorGetSuggestionsResponseBody$Outbound = {
  cursor?: string | undefined;
  actors: Array<components.AppBskyActorDefsProfileView$Outbound>;
};

/** @internal */
export const AppBskyActorGetSuggestionsResponseBody$outboundSchema: z.ZodType<
  AppBskyActorGetSuggestionsResponseBody$Outbound,
  z.ZodTypeDef,
  AppBskyActorGetSuggestionsResponseBody
> = z.object({
  cursor: z.string().optional(),
  actors: z.array(components.AppBskyActorDefsProfileView$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetSuggestionsResponseBody$ {
  /** @deprecated use `AppBskyActorGetSuggestionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    AppBskyActorGetSuggestionsResponseBody$inboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetSuggestionsResponseBody$outboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsResponseBody$Outbound` instead. */
  export type Outbound = AppBskyActorGetSuggestionsResponseBody$Outbound;
}

export function appBskyActorGetSuggestionsResponseBodyToJSON(
  appBskyActorGetSuggestionsResponseBody:
    AppBskyActorGetSuggestionsResponseBody,
): string {
  return JSON.stringify(
    AppBskyActorGetSuggestionsResponseBody$outboundSchema.parse(
      appBskyActorGetSuggestionsResponseBody,
    ),
  );
}

export function appBskyActorGetSuggestionsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyActorGetSuggestionsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyActorGetSuggestionsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyActorGetSuggestionsResponseBody' from JSON`,
  );
}

/** @internal */
export const AppBskyActorGetSuggestionsResponse$inboundSchema: z.ZodType<
  AppBskyActorGetSuggestionsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => AppBskyActorGetSuggestionsResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type AppBskyActorGetSuggestionsResponse$Outbound = {
  Result: AppBskyActorGetSuggestionsResponseBody$Outbound;
};

/** @internal */
export const AppBskyActorGetSuggestionsResponse$outboundSchema: z.ZodType<
  AppBskyActorGetSuggestionsResponse$Outbound,
  z.ZodTypeDef,
  AppBskyActorGetSuggestionsResponse
> = z.object({
  result: z.lazy(() => AppBskyActorGetSuggestionsResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppBskyActorGetSuggestionsResponse$ {
  /** @deprecated use `AppBskyActorGetSuggestionsResponse$inboundSchema` instead. */
  export const inboundSchema = AppBskyActorGetSuggestionsResponse$inboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsResponse$outboundSchema` instead. */
  export const outboundSchema =
    AppBskyActorGetSuggestionsResponse$outboundSchema;
  /** @deprecated use `AppBskyActorGetSuggestionsResponse$Outbound` instead. */
  export type Outbound = AppBskyActorGetSuggestionsResponse$Outbound;
}

export function appBskyActorGetSuggestionsResponseToJSON(
  appBskyActorGetSuggestionsResponse: AppBskyActorGetSuggestionsResponse,
): string {
  return JSON.stringify(
    AppBskyActorGetSuggestionsResponse$outboundSchema.parse(
      appBskyActorGetSuggestionsResponse,
    ),
  );
}

export function appBskyActorGetSuggestionsResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppBskyActorGetSuggestionsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AppBskyActorGetSuggestionsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppBskyActorGetSuggestionsResponse' from JSON`,
  );
}
