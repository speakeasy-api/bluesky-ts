/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ComAtprotoIdentityUpdateHandleRequest = {
  /**
   * The new handle.
   */
  handle: string;
};

/** @internal */
export const ComAtprotoIdentityUpdateHandleRequest$inboundSchema: z.ZodType<
  ComAtprotoIdentityUpdateHandleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  handle: z.string(),
});

/** @internal */
export type ComAtprotoIdentityUpdateHandleRequest$Outbound = {
  handle: string;
};

/** @internal */
export const ComAtprotoIdentityUpdateHandleRequest$outboundSchema: z.ZodType<
  ComAtprotoIdentityUpdateHandleRequest$Outbound,
  z.ZodTypeDef,
  ComAtprotoIdentityUpdateHandleRequest
> = z.object({
  handle: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ComAtprotoIdentityUpdateHandleRequest$ {
  /** @deprecated use `ComAtprotoIdentityUpdateHandleRequest$inboundSchema` instead. */
  export const inboundSchema =
    ComAtprotoIdentityUpdateHandleRequest$inboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleRequest$outboundSchema` instead. */
  export const outboundSchema =
    ComAtprotoIdentityUpdateHandleRequest$outboundSchema;
  /** @deprecated use `ComAtprotoIdentityUpdateHandleRequest$Outbound` instead. */
  export type Outbound = ComAtprotoIdentityUpdateHandleRequest$Outbound;
}

export function comAtprotoIdentityUpdateHandleRequestToJSON(
  comAtprotoIdentityUpdateHandleRequest: ComAtprotoIdentityUpdateHandleRequest,
): string {
  return JSON.stringify(
    ComAtprotoIdentityUpdateHandleRequest$outboundSchema.parse(
      comAtprotoIdentityUpdateHandleRequest,
    ),
  );
}

export function comAtprotoIdentityUpdateHandleRequestFromJSON(
  jsonString: string,
): SafeParseResult<ComAtprotoIdentityUpdateHandleRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ComAtprotoIdentityUpdateHandleRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ComAtprotoIdentityUpdateHandleRequest' from JSON`,
  );
}
