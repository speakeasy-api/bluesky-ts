/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atprotoIdentitySignPlcOperation } from "../../funcs/atprotoIdentitySignPlcOperation.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations
    .ComAtprotoIdentitySignPlcOperationRequestBody$inboundSchema.optional(),
};

export const tool$atprotoIdentitySignPlcOperation: ToolDefinition<typeof args> =
  {
    name: "atproto-identity_sign-plc-operation",
    description:
      `*To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*

Signs a PLC operation to update some value(s) in the requesting DID's document.

`,
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await atprotoIdentitySignPlcOperation(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      return formatResult(result, apiCall);
    },
  };
