/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { atprotoServerRevokeAppPassword } from "../../funcs/atprotoServerRevokeAppPassword.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.ComAtprotoServerRevokeAppPasswordBody$inboundSchema,
};

export const tool$atprotoServerRevokeAppPassword: ToolDefinition<typeof args> =
  {
    name: "atproto-server_revoke-app-password",
    description:
      `*This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*

*To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*

Revoke an App Password by name.`,
    scopes: ["write"],
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await atprotoServerRevokeAppPassword(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      return formatResult(void 0, apiCall);
    },
  };
