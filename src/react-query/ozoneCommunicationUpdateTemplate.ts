/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  MutationKey,
  useMutation,
  UseMutationOptions,
  UseMutationResult,
} from "@tanstack/react-query";
import { BlueskyCore } from "../core.js";
import { ozoneCommunicationUpdateTemplate } from "../funcs/ozoneCommunicationUpdateTemplate.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { useBlueskyContext } from "./_context.js";

export type OzoneCommunicationUpdateTemplateMutationVariables = {
  request: operations.ToolsOzoneCommunicationUpdateTemplateRequestBody;
  options?: RequestOptions;
};

/**
 * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
 *
 * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
 *
 * Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.
 */
export function useOzoneCommunicationUpdateTemplateMutation(
  options?: UseMutationOptions<
    components.ToolsOzoneCommunicationDefsTemplateView,
    Error,
    OzoneCommunicationUpdateTemplateMutationVariables
  >,
): UseMutationResult<
  components.ToolsOzoneCommunicationDefsTemplateView,
  Error,
  OzoneCommunicationUpdateTemplateMutationVariables
> {
  const client = useBlueskyContext();
  return useMutation({
    ...buildOzoneCommunicationUpdateTemplateMutation(client),
    ...options,
  });
}

export function mutationKeyOzoneCommunicationUpdateTemplate(): MutationKey {
  return ["bluesky", "communication", "updateTemplate"];
}

export function buildOzoneCommunicationUpdateTemplateMutation(
  client$: BlueskyCore,
): {
  retry: boolean;
  mutationKey: MutationKey;
  mutationFn: (
    variables: OzoneCommunicationUpdateTemplateMutationVariables,
  ) => Promise<components.ToolsOzoneCommunicationDefsTemplateView>;
} {
  return {
    retry: false,
    mutationKey: mutationKeyOzoneCommunicationUpdateTemplate(),
    mutationFn: function ozoneCommunicationUpdateTemplateQuery({
      request,
      options,
    }): Promise<components.ToolsOzoneCommunicationDefsTemplateView> {
      return unwrapAsync(ozoneCommunicationUpdateTemplate(
        client$,
        request,
        options,
      ));
    },
  };
}
