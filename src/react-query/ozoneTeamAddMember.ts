/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  MutationKey,
  useMutation,
  UseMutationOptions,
  UseMutationResult,
} from "@tanstack/react-query";
import { BlueskyCore } from "../core.js";
import { ozoneTeamAddMember } from "../funcs/ozoneTeamAddMember.js";
import { RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { useBlueskyContext } from "./_context.js";

export type OzoneTeamAddMemberMutationVariables = {
  request: operations.ToolsOzoneTeamAddMemberRequestBody;
  options?: RequestOptions;
};

/**
 * *This endpoint is part of the [Ozone moderation service](https://ozone.tools/) APIs. Requests usually require authentication, are directed to the user's PDS intance, and proxied to the Ozone instance indicated by the DID in the service proxying header. Admin authenentication may also be possible, with request sent directly to the Ozone instance.*
 *
 * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
 *
 * Add a member to the ozone team. Requires admin role.
 */
export function useOzoneTeamAddMemberMutation(
  options?: UseMutationOptions<
    components.ToolsOzoneTeamDefsMember,
    Error,
    OzoneTeamAddMemberMutationVariables
  >,
): UseMutationResult<
  components.ToolsOzoneTeamDefsMember,
  Error,
  OzoneTeamAddMemberMutationVariables
> {
  const client = useBlueskyContext();
  return useMutation({
    ...buildOzoneTeamAddMemberMutation(client),
    ...options,
  });
}

export function mutationKeyOzoneTeamAddMember(): MutationKey {
  return ["bluesky", "team", "addMember"];
}

export function buildOzoneTeamAddMemberMutation(
  client$: BlueskyCore,
): {
  retry: boolean;
  mutationKey: MutationKey;
  mutationFn: (
    variables: OzoneTeamAddMemberMutationVariables,
  ) => Promise<components.ToolsOzoneTeamDefsMember>;
} {
  return {
    retry: false,
    mutationKey: mutationKeyOzoneTeamAddMember(),
    mutationFn: function ozoneTeamAddMemberQuery({
      request,
      options,
    }): Promise<components.ToolsOzoneTeamDefsMember> {
      return unwrapAsync(ozoneTeamAddMember(
        client$,
        request,
        options,
      ));
    },
  };
}
