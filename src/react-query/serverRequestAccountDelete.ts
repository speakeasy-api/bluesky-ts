/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  MutationKey,
  useMutation,
  UseMutationResult,
} from "@tanstack/react-query";
import { BlueskyCore } from "../core.js";
import { serverRequestAccountDelete } from "../funcs/serverRequestAccountDelete.js";
import { combineSignals } from "../lib/primitives.js";
import { RequestOptions } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { useBlueskyContext } from "./_context.js";
import { MutationHookOptions } from "./_types.js";

export type ServerRequestAccountDeleteMutationVariables = {
  options?: RequestOptions;
};

export type ServerRequestAccountDeleteMutationData = void;

/**
 * *This endpoint is part of the atproto PDS server and account management APIs. Requests often require authentication and are made directly to the user's own PDS instance.*
 *
 * *To learn more about calling atproto API endpoints like this one, see the [API Hosts and Auth](/docs/advanced-guides/api-directory) guide.*
 *
 * Initiate a user account deletion via email.
 */
export function useServerRequestAccountDeleteMutation(
  options?: MutationHookOptions<
    ServerRequestAccountDeleteMutationData,
    Error,
    ServerRequestAccountDeleteMutationVariables
  >,
): UseMutationResult<
  ServerRequestAccountDeleteMutationData,
  Error,
  ServerRequestAccountDeleteMutationVariables
> {
  const client = useBlueskyContext();
  return useMutation({
    ...buildServerRequestAccountDeleteMutation(client, options),
    ...options,
  });
}

export function mutationKeyServerRequestAccountDelete(): MutationKey {
  return ["bluesky", "server", "requestAccountDelete"];
}

export function buildServerRequestAccountDeleteMutation(
  client$: BlueskyCore,
  hookOptions?: RequestOptions,
): {
  mutationKey: MutationKey;
  mutationFn: (
    variables: ServerRequestAccountDeleteMutationVariables,
  ) => Promise<ServerRequestAccountDeleteMutationData>;
} {
  return {
    mutationKey: mutationKeyServerRequestAccountDelete(),
    mutationFn: function serverRequestAccountDeleteMutationFn({
      options,
    }): Promise<ServerRequestAccountDeleteMutationData> {
      const mergedOptions = {
        ...hookOptions,
        ...options,
        fetchOptions: {
          ...hookOptions?.fetchOptions,
          ...options?.fetchOptions,
          signal: combineSignals(
            hookOptions?.fetchOptions?.signal,
            options?.fetchOptions?.signal,
          ),
        },
      };
      return unwrapAsync(serverRequestAccountDelete(
        client$,
        mergedOptions,
      ));
    },
  };
}
